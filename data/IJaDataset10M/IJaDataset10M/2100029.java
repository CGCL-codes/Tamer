package org.ras.bin.checklister.bib.periodical;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.Vector;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import org.jz.jpaxs.frames.JpaLinkedListHolder;
import org.jz.jpaxs.frames.JpaListHolder;
import org.jz.jpaxs.frames.JpaPropFrame;
import org.jz.jpaxs.frames.ListOrder;
import org.ras.bin.checklister.bib.issue.IssuePropFrame;
import org.ras.bin.checklister.domain.Issue;
import org.ras.bin.checklister.domain.IssueName;
import org.ras.bin.checklister.domain.Periodical;
import org.ras.bin.checklister.domain.PeriodicalName;

/**
 *
 * @author jz
 */
public class PeriodicalPropFrame extends JpaPropFrame {

    private Periodical tempPeriodical;

    private JpaLinkedListHolder fIssueBinder;

    private JpaLinkedListHolder fNameBinder;

    /** Creates new form PeriodicalPropFrame */
    public PeriodicalPropFrame() {
        tempPeriodical = new Periodical();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        btnSave2 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tpInformation = new javax.swing.JTabbedPane();
        pnlGeneralData = new javax.swing.JPanel();
        lblAlias = new javax.swing.JLabel();
        tfAlias = new javax.swing.JTextField();
        lblIssuer = new javax.swing.JLabel();
        tfIssuer = new javax.swing.JTextField();
        lblNames = new javax.swing.JLabel();
        spNames = new javax.swing.JScrollPane();
        tblNames = new javax.swing.JTable();
        lblNote = new javax.swing.JLabel();
        spNote = new javax.swing.JScrollPane();
        taNote = new javax.swing.JTextArea();
        btnAppendTitle = new javax.swing.JButton();
        btnChangeTitle = new javax.swing.JButton();
        btnRemoveTitle = new javax.swing.JButton();
        btnSetPreferredTitle = new javax.swing.JButton();
        pnlssueList = new javax.swing.JPanel();
        spIssueList = new javax.swing.JScrollPane();
        tblIssueList = new javax.swing.JTable();
        btnAppendIssue = new javax.swing.JButton();
        btnChangeIssue = new javax.swing.JButton();
        btnRemoveIssue = new javax.swing.JButton();
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Properties of the Periodical");
        btnSave2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmSave.png")));
        btnSave2.setText("Save");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmClose.png")));
        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        lblAlias.setText("Alias:");
        tfAlias.setText("jTextField1");
        lblIssuer.setText("Issuer:");
        tfIssuer.setText("jTextField1");
        lblNames.setText("Titles:");
        spNames.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        tblNames.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
        spNames.setViewportView(tblNames);
        lblNote.setText("Note:");
        spNote.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        taNote.setColumns(20);
        taNote.setLineWrap(true);
        taNote.setRows(5);
        taNote.setWrapStyleWord(true);
        spNote.setViewportView(taNote);
        btnAppendTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmCreate.png")));
        btnAppendTitle.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnChangeTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmEdit.png")));
        btnChangeTitle.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnRemoveTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmDelete.png")));
        btnRemoveTitle.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSetPreferredTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmPick.png")));
        btnSetPreferredTitle.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnSetPreferredTitle.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetPreferredTitleActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout pnlGeneralDataLayout = new javax.swing.GroupLayout(pnlGeneralData);
        pnlGeneralData.setLayout(pnlGeneralDataLayout);
        pnlGeneralDataLayout.setHorizontalGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralDataLayout.createSequentialGroup().addContainerGap().addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGeneralDataLayout.createSequentialGroup().addComponent(lblNote, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(spNote, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)).addGroup(pnlGeneralDataLayout.createSequentialGroup().addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(lblNames, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblAlias, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(lblIssuer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralDataLayout.createSequentialGroup().addComponent(spNames, 0, 0, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(btnAppendTitle).addComponent(btnChangeTitle).addComponent(btnRemoveTitle).addComponent(btnSetPreferredTitle))).addComponent(tfAlias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE).addComponent(tfIssuer, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)))).addContainerGap()));
        pnlGeneralDataLayout.setVerticalGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlGeneralDataLayout.createSequentialGroup().addContainerGap().addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lblAlias).addComponent(tfAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(tfIssuer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(lblIssuer)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlGeneralDataLayout.createSequentialGroup().addComponent(spNames, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)).addGroup(pnlGeneralDataLayout.createSequentialGroup().addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlGeneralDataLayout.createSequentialGroup().addComponent(btnAppendTitle).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnChangeTitle).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnRemoveTitle).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnSetPreferredTitle)).addComponent(lblNames)).addGap(107, 107, 107))).addGroup(pnlGeneralDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lblNote).addComponent(spNote, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
        tpInformation.addTab("General Information", pnlGeneralData);
        spIssueList.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        tblIssueList.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
        spIssueList.setViewportView(tblIssueList);
        btnAppendIssue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmCreate.png")));
        btnAppendIssue.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnChangeIssue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmEdit.png")));
        btnChangeIssue.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnRemoveIssue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ras/bin/checklister/resources/bmDelete.png")));
        btnRemoveIssue.setMargin(new java.awt.Insets(2, 2, 2, 2));
        javax.swing.GroupLayout pnlssueListLayout = new javax.swing.GroupLayout(pnlssueList);
        pnlssueList.setLayout(pnlssueListLayout);
        pnlssueListLayout.setHorizontalGroup(pnlssueListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlssueListLayout.createSequentialGroup().addContainerGap().addComponent(spIssueList, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(pnlssueListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(btnAppendIssue).addComponent(btnChangeIssue).addComponent(btnRemoveIssue)).addContainerGap()));
        pnlssueListLayout.setVerticalGroup(pnlssueListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(pnlssueListLayout.createSequentialGroup().addContainerGap().addGroup(pnlssueListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(spIssueList, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE).addGroup(pnlssueListLayout.createSequentialGroup().addComponent(btnAppendIssue).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnChangeIssue).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnRemoveIssue))).addContainerGap()));
        tpInformation.addTab("Issue List", pnlssueList);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(208, Short.MAX_VALUE).addComponent(btnSave2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnCancel).addContainerGap()).addComponent(tpInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(tpInformation, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnSave2)).addContainerGap()));
        pack();
    }

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {
        this.submitOperation();
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {
        this.cancelOperation();
    }

    private void btnSetPreferredTitleActionPerformed(java.awt.event.ActionEvent evt) {
        if (tblNames.getModel().getRowCount() == 0) {
            return;
        }
        int instanceIndex = tblNames.getSelectedRow();
        if (instanceIndex == -1) {
            return;
        }
        PeriodicalName name = (PeriodicalName) fNameBinder.getSelectedInstance();
        tempPeriodical.setPeriodicalAlias(name.getPeriodicalName());
        this.getBindingGroup().notifyAll();
    }

    private javax.swing.JButton btnAppendIssue;

    private javax.swing.JButton btnAppendTitle;

    private javax.swing.JButton btnCancel;

    private javax.swing.JButton btnChangeIssue;

    private javax.swing.JButton btnChangeTitle;

    private javax.swing.JButton btnRemoveIssue;

    private javax.swing.JButton btnRemoveTitle;

    private javax.swing.JButton btnSave2;

    private javax.swing.JButton btnSetPreferredTitle;

    private javax.swing.JLabel lblAlias;

    private javax.swing.JLabel lblIssuer;

    private javax.swing.JLabel lblNames;

    private javax.swing.JLabel lblNote;

    private javax.swing.JPanel pnlGeneralData;

    private javax.swing.JPanel pnlssueList;

    private javax.swing.JScrollPane spIssueList;

    private javax.swing.JScrollPane spNames;

    private javax.swing.JScrollPane spNote;

    private javax.swing.JTextArea taNote;

    private javax.swing.JTable tblIssueList;

    private javax.swing.JTable tblNames;

    private javax.swing.JTextField tfAlias;

    private javax.swing.JTextField tfIssuer;

    private javax.swing.JTabbedPane tpInformation;

    @Override
    public void setUpTables() {
        this.setEntityClass(Periodical.class);
        this.setKeyPropertyName("periodicalId");
        this.setEntitySignature(Periodical.ENTITY_SIGNATURE);
    }

    private List<Issue> readIssueList() {
        Query q = getKernel().getEntityManager().createQuery("select e from Issue e where e.periodical = :periodical");
        q.setParameter("periodical", getWorkPeriodical());
        return q.getResultList();
    }

    private List<PeriodicalName> readNameList() {
        Query q = getKernel().getEntityManager().createQuery("select e from PeriodicalName e where e.periodical = :periodical");
        q.setParameter("periodical", getWorkPeriodical());
        return q.getResultList();
    }

    @Override
    public void makeupInterface() throws Exception {
        fIssueBinder = new JpaLinkedListHolder();
        fIssueBinder.setEntityClass(Issue.class);
        fIssueBinder.setKeyFieldName("issueId");
        fIssueBinder.setKernel(getKernel());
        fIssueBinder.setOwner(this);
        fIssueBinder.setPropertyFrameClass(IssuePropFrame.class);
        fIssueBinder.setTable(tblIssueList);
        fIssueBinder.getColumns().addColumnDeclaration("issueAlias", "Common Name", 500, true);
        fIssueBinder.setAppendInstanceButton(btnAppendIssue);
        fIssueBinder.setEditInstanceButton(btnChangeIssue);
        fIssueBinder.setRemoveInstanceButton(btnRemoveIssue);
        fIssueBinder.setUpLinkInstance(getWorkInstance());
        fIssueBinder.setUpLinkPropertyName("periodical");
        fIssueBinder.setAppendInstanceAction(new NewIssueAction());
        fIssueBinder.getListOrder().addOrderItem("issueAlias", ListOrder.OD_ASCENDING);
        fIssueBinder.bind();
        fNameBinder = new JpaLinkedListHolder();
        fNameBinder.setEntityClass(PeriodicalName.class);
        fNameBinder.setKeyFieldName("periodicalNameId");
        fNameBinder.setKernel(getKernel());
        fNameBinder.setOwner(this);
        fNameBinder.setPropertyFrameClass(PeriodicalNamePropFrame.class);
        fNameBinder.setTable(tblNames);
        fNameBinder.getColumns().addColumnDeclaration("periodicalNameType", "Category", 160, true);
        fNameBinder.getColumns().addColumnDeclaration("periodicalName", "Title", 500, true);
        fNameBinder.setAppendInstanceButton(btnAppendTitle);
        fNameBinder.setEditInstanceButton(btnChangeTitle);
        fNameBinder.setRemoveInstanceButton(btnRemoveTitle);
        fNameBinder.setUpLinkInstance(getWorkInstance());
        fNameBinder.setUpLinkPropertyName("periodical");
        fNameBinder.getListOrder().addOrderItem("periodicalNameType", ListOrder.OD_ASCENDING);
        fNameBinder.getListOrder().addOrderItem("periodicalName", ListOrder.OD_ASCENDING);
        fNameBinder.bind();
        if (getCurrentOperation() == JpaPropFrame.CurrentOperation.CO_CREATE) {
            fIssueBinder.lock();
            fNameBinder.lock();
        }
        tempPeriodical.setPeriodicalAlias(getWorkPeriodical().getPeriodicalAlias());
        tempPeriodical.setPeriodicalIssuer(getWorkPeriodical().getPeriodicalIssuer());
        tempPeriodical.setPeriodicalNote(getWorkPeriodical().getPeriodicalNote());
        addTextFieldBinding(tfAlias, tempPeriodical, "periodicalAlias");
        addTextFieldBinding(tfIssuer, tempPeriodical, "periodicalIssuer");
        addTextAreaBinding(taNote, tempPeriodical, "periodicalNote");
        this.setMaximum(true);
    }

    @Override
    public void performSubmit() throws Exception {
        getWorkPeriodical().setPeriodicalAlias(tempPeriodical.getPeriodicalAlias());
        getWorkPeriodical().setPeriodicalIssuer(tempPeriodical.getPeriodicalIssuer());
        getWorkPeriodical().setPeriodicalNote(tempPeriodical.getPeriodicalNote());
    }

    @Override
    public void makeDownInterface() throws Exception {
    }

    @Override
    public void beforeCreate() throws Exception {
        Periodical periodical = getWorkPeriodical();
        periodical.setIssueCollection(new Vector<Issue>());
        periodical.setNameCollection(new Vector<PeriodicalName>());
    }

    @Override
    public void makePrimaryKey() throws Exception {
        getWorkPeriodical().setPeriodicalId(makeNextStringCode(getKernel(), Periodical.class.getSimpleName(), "periodicalId", Periodical.ENTITY_SIGNATURE));
    }

    @Override
    public Class getEntityClass() {
        return Periodical.class;
    }

    public Periodical getWorkPeriodical() {
        return (Periodical) getWorkInstance();
    }

    private class NewIssueAction implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            String issueName = JOptionPane.showInputDialog(PeriodicalPropFrame.this, "Enter title:", "New Issue", JOptionPane.QUESTION_MESSAGE);
            if ((issueName != null) && (!issueName.trim().equals(""))) {
                try {
                    Issue newIssue = new Issue();
                    newIssue.setPeriodical(getWorkPeriodical());
                    newIssue.setNameCollection(new Vector<IssueName>());
                    newIssue.setIssueId(makeNextStringCode(getKernel(), Issue.class.getSimpleName(), "issueId", Issue.ENTITY_SIGNATURE));
                    newIssue.setIssueAlias(issueName);
                    IssueName newName = new IssueName();
                    newName.setIssueNameId(makeNextStringCode(getKernel(), IssueName.class.getSimpleName(), "issueNameId", IssueName.ENTITY_SIGNATURE));
                    newName.setIssueName(issueName);
                    newName.setIssueNameType("Official");
                    newName.setIssue(newIssue);
                    newIssue.getNameCollection().add(newName);
                    getKernel().getEntityManager().getTransaction().begin();
                    try {
                        getKernel().getEntityManager().persist(newIssue);
                        getKernel().getEntityManager().persist(newName);
                        getKernel().getEntityManager().getTransaction().commit();
                        fIssueBinder.appendInstanceToList(newIssue);
                    } catch (Exception ex) {
                        getKernel().getEntityManager().getTransaction().rollback();
                        throw ex;
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(PeriodicalPropFrame.this, ex.getMessage(), "New Issue", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }
}
