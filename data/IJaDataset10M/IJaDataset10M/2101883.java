package pascal2java;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

public class MainFrame extends javax.swing.JFrame {

    Pascal2Java pascal2Java;

    /** Creates new form NewJFrame */
    public MainFrame() {
        initLookAndFeel();
        pascal2Java = new Pascal2Java();
        initComponents();
    }

    /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    private static void initLookAndFeel() {
        String lookAndFeel = UIManager.getSystemLookAndFeelClassName();
        try {
            UIManager.setLookAndFeel(lookAndFeel);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void interpretuj() {
        try {
            taSource.setText("");
            console.setText("");
            new Pascal2Java().interpretuj(new File(tfFilePath.getText()));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Błąd otwarcia pliku " + tfFilePath.getText());
        }
    }

    private void openLocal() {
        class MyFilter extends javax.swing.filechooser.FileFilter {

            public boolean accept(File file) {
                String filename = file.getName();
                return filename.endsWith(".pas");
            }

            public String getDescription() {
                return "*.pas";
            }
        }
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.addChoosableFileFilter(new MyFilter());
        int returnVal = fileChooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                tfFilePath.setText(file.getPath());
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    public static void toConsole(String text) {
        console.append(text);
    }

    public static void toSourceTextArea(String text) {
        taSource.append(text);
    }

    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        tfFilePath = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        taSource = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        openItem = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pascal interpreter");
        setMinimumSize(new java.awt.Dimension(600, 400));
        tfFilePath.setText("C:\\Documents and Settings\\Wojtas_44\\My Documents\\program3.pas");
        tfFilePath.setPreferredSize(new java.awt.Dimension(460, 20));
        jPanel1.add(tfFilePath);
        jButton1.setText("Interpretuj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);
        jSplitPane1.setOneTouchExpandable(true);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 400));
        taSource.setColumns(20);
        taSource.setFont(new java.awt.Font("Monospaced", 0, 12));
        taSource.setRows(5);
        jScrollPane1.setViewportView(taSource);
        jSplitPane1.setLeftComponent(jScrollPane1);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 86));
        console.setColumns(20);
        console.setFont(new java.awt.Font("Monospaced", 0, 12));
        console.setRows(5);
        jScrollPane2.setViewportView(console);
        jSplitPane1.setRightComponent(jScrollPane2);
        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);
        menuFile.setText("Plik");
        openItem.setText("Otwórz");
        openItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openItemActionPerformed(evt);
            }
        });
        menuFile.add(openItem);
        jMenuBar1.add(menuFile);
        setJMenuBar(jMenuBar1);
        pack();
    }

    private void openItemActionPerformed(java.awt.event.ActionEvent evt) {
        openLocal();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        interpretuj();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    private static javax.swing.JTextArea console;

    private javax.swing.JButton jButton1;

    private javax.swing.JMenuBar jMenuBar1;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JSplitPane jSplitPane1;

    private javax.swing.JMenu menuFile;

    private javax.swing.JMenuItem openItem;

    private static javax.swing.JTextArea taSource;

    private javax.swing.JTextField tfFilePath;
}
