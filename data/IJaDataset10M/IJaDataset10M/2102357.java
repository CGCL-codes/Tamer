package org.ostion.siplacad.model.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.security.Restrict;
import org.ostion.siplacad.model.Estado;
import org.ostion.siplacad.model.Periodo;
import org.ostion.siplacad.model.TipoPlanificacion;
import org.ostion.util.OstionEntity;
import org.ostion.util.persistence.query.ParameterNames;
import org.ostion.util.persistence.query.ResultListNamedQuery;
import org.ostion.util.persistence.query.SingleResultNamedQuery;

/**
 * Termino generated by hbm2java
 */
@NamedQueries({ @NamedQuery(name = Termino.FindAll.name, query = Termino.FindAll.query), @NamedQuery(name = Termino.FindAllWithPlanificacionesByTipoPlanificacionOrderByLabelDesc.name, query = Termino.FindAllWithPlanificacionesByTipoPlanificacionOrderByLabelDesc.query), @NamedQuery(name = Termino.FindByAnioAndPeriodo.name, query = Termino.FindByAnioAndPeriodo.query) })
@Entity
@Table(name = "termino", catalog = "siplacaddb", uniqueConstraints = @UniqueConstraint(columnNames = { "anio", "periodo" }))
@Restrict
public class Termino extends OstionEntity<Termino, Integer> implements java.io.Serializable {

    /**
	 * 
	 */
    private static final long serialVersionUID = -7913593865016678600L;

    /**
	 * {@link ResultListAllNamedQuery} listado completo.
	 * @since 2008-09-19
	 */
    public static final class FindAll extends ResultListNamedQuery.NoParams<Termino> {

        private static final String name = "Termino.FindAll";

        private static final String query = "SELECT termino " + "FROM Termino termino " + "ORDER BY termino.anio DESC, termino.periodo DESC";
    }

    /**
	 * {@link ResultListNamedQuery} listado completo de {@link Termino} que tengan {@link Planificacion}
	 * para el {@link TipoPlanificacion} dado.
	 * @param {@link {@link TipoPlanificacion}
	 * @since 2009-01-25
	 */
    @ParameterNames("tipoPlanificacion")
    public static final class FindAllWithPlanificacionesByTipoPlanificacionOrderByLabelDesc extends ResultListNamedQuery.OneParam<Termino, TipoPlanificacion> {

        private static final String name = "Termino.FindAllWithPlanificacionesByTipoPlanificacionOrderByLabelDesc";

        private static final String query = "SELECT DISTINCT termino " + "FROM Planificacion planificacion " + "JOIN planificacion.termino termino " + "WHERE planificacion.tipo = :tipoPlanificacion " + "ORDER BY termino.anio DESC, termino.periodo DESC";
    }

    /**
	 * {@link SingleResultNamedQuery} por anio y {@link Periodo}.
	 * @param anio {@link Integer}
	 * @param periodo {@link Periodo}
	 * @since 2010-03-10
	 */
    @ParameterNames({ "anio", "periodo" })
    public static final class FindByAnioAndPeriodo extends SingleResultNamedQuery.TwoParams<Termino, Integer, Periodo> {

        private static final String name = "Termino.FindUniqueByAnioPeriodo";

        private static final String query = "SELECT termino " + "FROM Termino termino " + "WHERE termino.anio = :anio " + "AND termino.periodo = :periodo";
    }

    private Integer id;

    private int anio;

    /**
	 * Enumerated
	 * @since 2008-12-14
	 */
    private Periodo periodo;

    /**
	 * Enumerated
	 * @since 2008-07-17
	 */
    private Date fechaParcial;

    private Date fechaFinal;

    private Date fechaMejoramiento;

    private Estado estado;

    private Set<Planificacion> planificaciones = new HashSet<Planificacion>(0);

    public Termino() {
    }

    public Termino(int anio, Periodo periodo, Estado estado) {
        this.anio = anio;
        this.periodo = periodo;
        this.estado = estado;
    }

    public Termino(int anio, Periodo periodo, Date fechaParcial, Date fechaFinal, Date fechaMejoramiento, Estado estado, Set<Planificacion> planificaciones) {
        this.anio = anio;
        this.periodo = periodo;
        this.fechaParcial = fechaParcial;
        this.fechaFinal = fechaFinal;
        this.fechaMejoramiento = fechaMejoramiento;
        this.estado = estado;
        this.planificaciones = planificaciones;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "anio", nullable = false)
    @NotNull
    public int getAnio() {
        return this.anio;
    }

    public void setAnio(int anio) {
        this.anio = anio;
    }

    /**
	 * Validar minimo y maximo Periodo
	 * @since 2008-09-06
	 */
    @Enumerated(EnumType.STRING)
    @Column(name = "periodo", nullable = false)
    @NotNull
    public Periodo getPeriodo() {
        return this.periodo;
    }

    public void setPeriodo(Periodo periodo) {
        this.periodo = periodo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_parcial", length = 0)
    public Date getFechaParcial() {
        return this.fechaParcial;
    }

    public void setFechaParcial(Date fechaParcial) {
        this.fechaParcial = fechaParcial;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_final", length = 0)
    public Date getFechaFinal() {
        return this.fechaFinal;
    }

    public void setFechaFinal(Date fechaFinal) {
        this.fechaFinal = fechaFinal;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_mejoramiento", length = 0)
    public Date getFechaMejoramiento() {
        return this.fechaMejoramiento;
    }

    public void setFechaMejoramiento(Date fechaMejoramiento) {
        this.fechaMejoramiento = fechaMejoramiento;
    }

    @Enumerated(EnumType.STRING)
    @Column(name = "estado", nullable = false)
    @NotNull
    public Estado getEstado() {
        return this.estado;
    }

    public void setEstado(Estado estado) {
        this.estado = estado;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "termino")
    public Set<Planificacion> getPlanificaciones() {
        return this.planificaciones;
    }

    public void setPlanificaciones(Set<Planificacion> planificaciones) {
        this.planificaciones = planificaciones;
    }

    /**
	 * Representacion en modo texto
	 * @since 2008-09-07
	 */
    @Transient
    @Override
    public String getLabel() {
        if (this.getId() != null) return this.getAnio() + "-" + this.getPeriodo().getLabel(); else return null;
    }
}
