package org.pyre.finance.entity;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DepositHistory generated by hbm2java
 */
@Entity
@Table(name = "deposit_history")
public class DepositHistory implements java.io.Serializable {

    /**
	 * serialVersionUID
	 */
    private static final long serialVersionUID = -9072487307217731844L;

    private Integer id;

    private ExpenseItem expenseItem;

    private SourceDivision sourceDivision;

    private Fund fund;

    private String content;

    private BigDecimal amount;

    private Integer accountId;

    private int confirmAccountId;

    private Date entryDate;

    private String note;

    private Set<DepositScrube> depositScrubes = new HashSet<DepositScrube>(0);

    public DepositHistory() {
    }

    public DepositHistory(ExpenseItem expenseItem, SourceDivision sourceDivision, Fund fund, String content, BigDecimal amount, int confirmAccountId, Date entryDate) {
        this.expenseItem = expenseItem;
        this.sourceDivision = sourceDivision;
        this.fund = fund;
        this.content = content;
        this.amount = amount;
        this.confirmAccountId = confirmAccountId;
        this.entryDate = entryDate;
    }

    public DepositHistory(ExpenseItem expenseItem, SourceDivision sourceDivision, Fund fund, String content, BigDecimal amount, Integer accountId, int confirmAccountId, Date entryDate, String note, Set<DepositScrube> depositScrubes) {
        this.expenseItem = expenseItem;
        this.sourceDivision = sourceDivision;
        this.fund = fund;
        this.content = content;
        this.amount = amount;
        this.accountId = accountId;
        this.confirmAccountId = confirmAccountId;
        this.entryDate = entryDate;
        this.note = note;
        this.depositScrubes = depositScrubes;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_cd", nullable = false)
    public ExpenseItem getExpenseItem() {
        return this.expenseItem;
    }

    public void setExpenseItem(ExpenseItem expenseItem) {
        this.expenseItem = expenseItem;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "division", nullable = false)
    public SourceDivision getSourceDivision() {
        return this.sourceDivision;
    }

    public void setSourceDivision(SourceDivision sourceDivision) {
        this.sourceDivision = sourceDivision;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "fund_id", nullable = false)
    public Fund getFund() {
        return this.fund;
    }

    public void setFund(Fund fund) {
        this.fund = fund;
    }

    @Column(name = "content", nullable = false)
    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    @Column(name = "amount", nullable = false, precision = 13)
    public BigDecimal getAmount() {
        return this.amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    @Column(name = "account_id")
    public Integer getAccountId() {
        return this.accountId;
    }

    public void setAccountId(Integer accountId) {
        this.accountId = accountId;
    }

    @Column(name = "confirm_account_id", nullable = false)
    public int getConfirmAccountId() {
        return this.confirmAccountId;
    }

    public void setConfirmAccountId(int confirmAccountId) {
        this.confirmAccountId = confirmAccountId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "entry_date", nullable = false, length = 10)
    public Date getEntryDate() {
        return this.entryDate;
    }

    public void setEntryDate(Date entryDate) {
        this.entryDate = entryDate;
    }

    @Column(name = "note")
    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "depositHistory")
    public Set<DepositScrube> getDepositScrubes() {
        return this.depositScrubes;
    }

    public void setDepositScrubes(Set<DepositScrube> depositScrubes) {
        this.depositScrubes = depositScrubes;
    }
}
