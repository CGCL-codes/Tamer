package org.dmd.dmp.shared.generated.types;

import java.io.Serializable;
import org.dmd.dmc.DmcInputStreamIF;
import org.dmd.dmc.DmcOutputStreamIF;
import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcAttributeInfo;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmp.shared.generated.dmo.DeleteResponseDMO;

/**
 * This is the generated DmcAttribute derivative for values of type DeleteResponse
 * <P>
 * Generated from the dmp schema at version 0.1
 * <P>
 * This code was auto-generated by the dmogenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dms.util.DmoTypeFormatter.dumpNormalREFType(DmoTypeFormatter.java:197)
 */
@SuppressWarnings("serial")
public abstract class DmcTypeDeleteResponseREF extends DmcAttribute<DeleteResponseDMO> implements Serializable {

    public DmcTypeDeleteResponseREF() {
    }

    public DmcTypeDeleteResponseREF(DmcAttributeInfo ai) {
        super(ai);
    }

    protected DeleteResponseDMO typeCheck(Object value) throws DmcValueException {
        if (value instanceof DeleteResponseDMO) return ((DeleteResponseDMO) value);
        throw (new DmcValueException("Object of class: " + value.getClass().getName() + " passed where object compatible with DeleteResponseDMO expected."));
    }

    @Override
    public void serializeValue(DmcOutputStreamIF dos, DeleteResponseDMO value) throws Exception {
        value.serializeIt(dos);
    }

    @Override
    public DeleteResponseDMO deserializeValue(DmcInputStreamIF dis) throws Exception {
        DeleteResponseDMO rc = (DeleteResponseDMO) dis.getDMOInstance(dis);
        rc.deserializeIt(dis);
        return (rc);
    }

    @Override
    public DeleteResponseDMO cloneValue(DeleteResponseDMO value) {
        return ((DeleteResponseDMO) value.cloneIt());
    }
}
