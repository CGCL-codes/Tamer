package jeplus.gui;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import jeplus.EPlusConfig;

/**
 * JPanel_EPlusSettings.java - This is the view of EPlusConfig record
 * @author zyyz
 * @version 0.6
 * @since 0.5b
 */
public class JPanel_EPlusSettings extends javax.swing.JPanel implements TitledJPanel {

    protected String title = "E+ Executables";

    protected final JFileChooser fc = new JFileChooser("./");

    /** Creates new form JPanel_EPlusSettings */
    public JPanel_EPlusSettings() {
        initComponents();
        initSettings();
        checkSettings();
    }

    /**
     * Get title of this panel
     * @return Title of this panel instance
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Set title to this panel
     * @param title new title
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * initialise display from data records
     */
    public final void initSettings() {
        txtBinDir.setText(EPlusConfig.getEPlusBinDir());
        txtEPlusEXE.setText(EPlusConfig.getEPlusEXEC());
        txtReadVarEXE.setText(EPlusConfig.getEPlusReadVars());
        txtEPMacroEXE.setText(EPlusConfig.getEPlusEPMacro());
        txtExpandObjectsEXE.setText(EPlusConfig.getEPlusExpandObjects());
        txtScreenLog.setText(EPlusConfig.getScreenFile());
    }

    /**
     * check validity of directory and command/file names
     */
    public final void checkSettings() {
        File dir = new File(txtBinDir.getText());
        if (!(dir.exists() && dir.isDirectory())) txtBinDir.setForeground(Color.red); else txtBinDir.setForeground(Color.black);
        if (!new File(txtEPlusEXE.getText()).exists()) txtEPlusEXE.setForeground(Color.red); else txtEPlusEXE.setForeground(Color.black);
        if (!new File(txtReadVarEXE.getText()).exists()) txtReadVarEXE.setForeground(Color.red); else txtReadVarEXE.setForeground(Color.black);
        if (!new File(txtEPMacroEXE.getText()).exists()) txtEPMacroEXE.setForeground(Color.red); else txtEPMacroEXE.setForeground(Color.black);
        if (!new File(txtExpandObjectsEXE.getText()).exists()) txtExpandObjectsEXE.setForeground(Color.red); else txtExpandObjectsEXE.setForeground(Color.black);
        File log = new File(txtScreenLog.getText());
        if (!((log.exists() && log.isFile() && log.canWrite()) || !log.exists())) txtScreenLog.setForeground(Color.red); else txtScreenLog.setForeground(Color.black);
    }

    /**
     * update record for directory and file names
     */
    protected final void updateSettings() {
        EPlusConfig.setEPlusBinDir(txtBinDir.getText());
        EPlusConfig.setEPlusEXEC(txtEPlusEXE.getText());
        EPlusConfig.setEPlusReadVars(txtReadVarEXE.getText());
        EPlusConfig.setEPlusEPMacro(txtEPMacroEXE.getText());
        EPlusConfig.setEPlusExpandObjects(txtExpandObjectsEXE.getText());
        EPlusConfig.setScreenFile(txtScreenLog.getText());
    }

    /** This method is called from within the constructor to
     * initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel16 = new javax.swing.JLabel();
        txtScreenLog = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmdSelectEPlusDir = new javax.swing.JButton();
        txtExpandObjectsEXE = new javax.swing.JTextField();
        cmdSelectReadVars = new javax.swing.JButton();
        txtBinDir = new javax.swing.JTextField();
        cmdSelectEPexe = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmdSelectExpandObjects = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtReadVarEXE = new javax.swing.JTextField();
        txtEPlusEXE = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmdSelectEPMacro = new javax.swing.JButton();
        txtEPMacroEXE = new javax.swing.JTextField();
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("Console log file");
        txtScreenLog.setText("jeplus.log");
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Energy+ ExpandObjects");
        cmdSelectEPlusDir.setText("...");
        cmdSelectEPlusDir.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectEPlusDirActionPerformed(evt);
            }
        });
        txtExpandObjectsEXE.setEditable(false);
        txtExpandObjectsEXE.setText("ExpandObjects.exe");
        cmdSelectReadVars.setText("...");
        cmdSelectReadVars.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectReadVarsActionPerformed(evt);
            }
        });
        txtBinDir.setEditable(false);
        txtBinDir.setText("C:/EnergyPlusV2-2-0/");
        txtBinDir.setToolTipText("This is the directory where 'Energy+.idd' is located");
        cmdSelectEPexe.setText("...");
        cmdSelectEPexe.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectEPexeActionPerformed(evt);
            }
        });
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Energy+ binary diretory");
        cmdSelectExpandObjects.setText("...");
        cmdSelectExpandObjects.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectExpandObjectsActionPerformed(evt);
            }
        });
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Energy+ ReadVars");
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel13.setText("Energy+ EP-Macro");
        jLabel15.setText("command:");
        txtReadVarEXE.setEditable(false);
        txtReadVarEXE.setText("ReadVarsESO.exe");
        txtReadVarEXE.setToolTipText("The command may vary with different versions of EnergyPlus. Edit this field if necessary. If the executable is located in a different location, please specify the relative diretory to the Energy+ binary directory above. Case-sensitive in Linux.");
        txtEPlusEXE.setEditable(false);
        txtEPlusEXE.setText("EnergyPlus.exe");
        txtEPlusEXE.setToolTipText("The command may vary with different versions of EnergyPlus. Edit this field if necessary. If the executable is located in a different location, please specify the relative diretory to the Energy+ binary directory above. Case-sensitive in Linux.");
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Energy+ executable");
        cmdSelectEPMacro.setText("...");
        cmdSelectEPMacro.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelectEPMacroActionPerformed(evt);
            }
        });
        txtEPMacroEXE.setEditable(false);
        txtEPMacroEXE.setText("EPMacro.exe");
        txtEPMacroEXE.setToolTipText("The command may vary with different versions of EnergyPlus. Edit this field if necessary. If the executable is located in a different location, please specify the relative diretory to the Energy+ binary directory above. Case-sensitive in Linux.");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(txtEPlusEXE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE).addComponent(txtReadVarEXE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE).addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE).addComponent(txtExpandObjectsEXE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE).addComponent(txtEPMacroEXE, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE).addComponent(txtBinDir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(cmdSelectEPexe, 0, 25, Short.MAX_VALUE).addComponent(cmdSelectEPMacro, 0, 25, Short.MAX_VALUE).addComponent(cmdSelectEPlusDir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE).addComponent(cmdSelectReadVars, javax.swing.GroupLayout.Alignment.LEADING, 0, 25, Short.MAX_VALUE).addComponent(cmdSelectExpandObjects, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel6).addComponent(txtBinDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cmdSelectEPlusDir)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel15).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cmdSelectEPexe).addComponent(txtEPlusEXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtEPMacroEXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel13).addComponent(cmdSelectEPMacro)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(txtExpandObjectsEXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cmdSelectExpandObjects)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cmdSelectReadVars).addComponent(txtReadVarEXE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    }

    private void cmdSelectExpandObjectsActionPerformed(java.awt.event.ActionEvent evt) {
        fc.setMultiSelectionEnabled(false);
        fc.setCurrentDirectory(new File(EPlusConfig.getEPlusBinDir()));
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String name = file.getPath();
            txtExpandObjectsEXE.setText(name);
            txtExpandObjectsEXE.setForeground(Color.black);
            EPlusConfig.setEPlusExpandObjects(name);
        }
        fc.resetChoosableFileFilters();
    }

    private void cmdSelectEPexeActionPerformed(java.awt.event.ActionEvent evt) {
        fc.setMultiSelectionEnabled(false);
        fc.setCurrentDirectory(new File(EPlusConfig.getEPlusBinDir()));
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String name = file.getPath();
            txtEPlusEXE.setText(name);
            txtEPlusEXE.setForeground(Color.black);
            EPlusConfig.setEPlusEXEC(name);
        }
        fc.resetChoosableFileFilters();
    }

    private void cmdSelectReadVarsActionPerformed(java.awt.event.ActionEvent evt) {
        fc.setMultiSelectionEnabled(false);
        File bindir = new File(EPlusConfig.getEPlusBinDir());
        fc.setCurrentDirectory(bindir);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String name = file.getPath();
            txtReadVarEXE.setText(name);
            txtReadVarEXE.setForeground(Color.black);
            EPlusConfig.setEPlusReadVars(name);
        }
        fc.resetChoosableFileFilters();
    }

    private void cmdSelectEPlusDirActionPerformed(java.awt.event.ActionEvent evt) {
        fc.resetChoosableFileFilters();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String fn = file.getAbsolutePath();
            String bindir = fn + File.separator;
            EPlusConfig.setEPlusBinDir(bindir);
            EPlusConfig.setEPlusEPMacro(bindir + EPlusConfig.getDefEPlusEPMacro());
            EPlusConfig.setEPlusExpandObjects(bindir + EPlusConfig.getDefEPlusExpandObjects());
            EPlusConfig.setEPlusEXEC(bindir + EPlusConfig.getDefEPlusEXEC());
            EPlusConfig.setEPlusReadVars(bindir + EPlusConfig.getDefEPlusReadVars());
            initSettings();
            checkSettings();
        }
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
    }

    private void cmdSelectEPMacroActionPerformed(java.awt.event.ActionEvent evt) {
        fc.setMultiSelectionEnabled(false);
        fc.setCurrentDirectory(new File(EPlusConfig.getEPlusBinDir()));
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String name = file.getPath();
            txtEPMacroEXE.setText(name);
            txtEPMacroEXE.setForeground(Color.black);
            EPlusConfig.setEPlusEPMacro(name);
        }
        fc.resetChoosableFileFilters();
    }

    private javax.swing.JButton cmdSelectEPMacro;

    private javax.swing.JButton cmdSelectEPexe;

    private javax.swing.JButton cmdSelectEPlusDir;

    private javax.swing.JButton cmdSelectExpandObjects;

    private javax.swing.JButton cmdSelectReadVars;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel13;

    private javax.swing.JLabel jLabel15;

    private javax.swing.JLabel jLabel16;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JTextField txtBinDir;

    private javax.swing.JTextField txtEPMacroEXE;

    private javax.swing.JTextField txtEPlusEXE;

    private javax.swing.JTextField txtExpandObjectsEXE;

    private javax.swing.JTextField txtReadVarEXE;

    private javax.swing.JTextField txtScreenLog;
}
