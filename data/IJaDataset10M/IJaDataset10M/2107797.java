package GUI;

import DAO.Connect;
import DatabaseAccess.Active;
import DatabaseAccess.quanLyLop;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class FrmSelectActiveforClass extends javax.swing.JFrame {

    public static boolean searchClass = false;

    DefaultTableModel model;

    Connection conn;

    Statement st;

    PreparedStatement pstmt;

    ResultSet rs;

    quanLyLop nhap = new quanLyLop();

    Connect connect = new Connect();

    public static String ActiveID;

    public static String Rates;

    /** Creates new form FrmSelectActiveforClass */
    public FrmSelectActiveforClass() {
        initComponents();
        model = (DefaultTableModel) tblActive.getModel();
        nhap.btnLoadClass(tblActive);
        new Active().inittableActive(tblActive);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblActive = new javax.swing.JTable();
        txtSearchClass = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setFont(new java.awt.Font("VNI-Present", 1, 36));
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("Add Active for Class");
        tblActive.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] { "Active ID", "Active Name" }) {

            Class[] types = new Class[] { java.lang.String.class, java.lang.String.class };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblActive);
        txtSearchClass.setFont(new java.awt.Font("Tahoma", 0, 12));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 12));
        btnSearch.setForeground(new java.awt.Color(0, 0, 204));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search.png")));
        btnSearch.setText("Search");
        btnSearch.setPreferredSize(new java.awt.Dimension(65, 29));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        btnClose.setFont(new java.awt.Font("Tahoma", 0, 12));
        btnClose.setForeground(new java.awt.Color(0, 0, 204));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/close2.png")));
        btnClose.setText("Close");
        btnClose.setPreferredSize(new java.awt.Dimension(83, 31));
        btnClose.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 12));
        btnAdd.setForeground(new java.awt.Color(0, 0, 204));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png")));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(22, 22, 22).addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addGap(60, 60, 60).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(55, 55, 55).addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(txtSearchClass, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(34, 34, 34).addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(23, 23, 23).addComponent(jLabel1).addGap(18, 18, 18).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtSearchClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(21, 21, 21)));
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 395) / 2, (screenSize.height - 388) / 2, 395, 388);
    }

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {
        model = (DefaultTableModel) tblActive.getModel();
        if (txtSearchClass.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Enter a key to Search!");
            return;
        }
        if (txtSearchClass.getText().equals("all")) {
            nhap.btnLoadClass(tblActive);
        }
        try {
            @SuppressWarnings(value = "static-access") String strSQL = "select * from tblActivities where ActiveID like ?";
            Vector vtCol = new Vector();
            Vector vtDataSearchClass = new Vector();
            pstmt = conn.prepareStatement(strSQL);
            pstmt.setString(1, "%" + txtSearchClass.getText() + "%");
            rs = pstmt.executeQuery();
            ResultSetMetaData rsmt = rs.getMetaData();
            for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                vtCol.add(rsmt.getColumnName(i));
            }
            while (rs.next()) {
                Vector vtRow = new Vector();
                for (int i = 1; i <= rsmt.getColumnCount(); i++) {
                    vtRow.add(rs.getString(i));
                }
                vtDataSearchClass.add(vtRow);
            }
            tblActive.setModel(new DefaultTableModel(vtDataSearchClass, vtCol));
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error:" + ex.getMessage());
            return;
        }
    }

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {
        int n = tblActive.getSelectedRow();
        if (n == -1) {
            JOptionPane.showMessageDialog(this, "Choose a Active to Add");
            return;
        }
        new Active().inittableActive(tblActive);
        Vector temp = (Vector) Active.vtData.get(n);
        ActiveID = (String) temp.get(0);
        conn = connect.getConnection();
        if (conn != null) {
            try {
                String strSql = "insert tblDetailsActiveClass values(?,?)";
                pstmt = conn.prepareStatement(strSql);
                pstmt.setString(1, ActiveID);
                pstmt.setString(2, FrmQuanLyLop.ClassID);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Insert successfully!");
                this.dispose();
                conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage());
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Connect false");
            return;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmSelectActiveforClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmSelectActiveforClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmSelectActiveforClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmSelectActiveforClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FrmSelectActiveforClass().setVisible(true);
            }
        });
    }

    private javax.swing.JButton btnAdd;

    private javax.swing.JButton btnClose;

    private javax.swing.JButton btnSearch;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable tblActive;

    private javax.swing.JTextField txtSearchClass;
}
