package es.unav.informesgoogleanalytics.vista;

import es.unav.informesgoogleanalytics.Utils;
import es.unav.informesgoogleanalytics.modelo.GestorPreferencias;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.io.File;
import javax.swing.filechooser.FileFilter;
import javax.swing.JFileChooser;
import org.jdesktop.application.Action;

/**
 *
 * @author enorvelle
 */
public class PreferenciasDiálogo extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;

    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form PreferenciasDiálogo */
    public PreferenciasDiálogo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Dimension dim = getToolkit().getScreenSize();
        Rectangle abounds = getBounds();
        setLocation((dim.width - abounds.width) / 2, (dim.height - abounds.height) / 2);
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    public String getArchivoConfiguración() {
        return archivoConfigCampoTexto.getText();
    }

    public void setArchivoConfiguración(String archivo) {
        archivoConfigCampoTexto.setText(archivo);
    }

    public void setMostrarMensajesDepuración(boolean mostrar) {
        mostrarMensajeDepuración = mostrar;
        if (mostrar) grupoBotonesDepuración.setSelected(this.mostrarDepuraciónSiRadioBotón.getModel(), true); else grupoBotonesDepuración.setSelected(this.mostrarDepuraciónNoRadioBotón.getModel(), true);
    }

    public boolean getMostrarMensajesDepuración() {
        return mostrarMensajeDepuración;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        grupoBotonesDepuración = new javax.swing.ButtonGroup();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        archivoConfigPrefEtiquetta = new javax.swing.JLabel();
        archivoConfigCampoTexto = new javax.swing.JTextField();
        archivoConfigSeleccionarBotón = new javax.swing.JButton();
        depuraciónNotificacionesEtiqueta = new javax.swing.JLabel();
        mostrarDepuraciónSiRadioBotón = new javax.swing.JRadioButton();
        mostrarDepuraciónNoRadioBotón = new javax.swing.JRadioButton();
        setModal(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("es/unav/informesgoogleanalytics/vista/Bundle");
        setName(bundle.getString("PreferenciasDiálogo.título.text"));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        okButton.setText(bundle.getString("PreferenciasDiálogo.okButton.text"));
        okButton.setName("okButton");
        okButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        cancelButton.setText(bundle.getString("PreferenciasDiálogo.cancelButton.text"));
        cancelButton.setName("cancelButton");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        archivoConfigPrefEtiquetta.setText(bundle.getString("PreferenciasDiálogo.archivoConfigPrefEtiquetta.text"));
        archivoConfigPrefEtiquetta.setName("archivoConfigPrefEtiquetta");
        archivoConfigCampoTexto.setName("archivoConfigCampoTexto");
        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(es.unav.informesgoogleanalytics.InformesGoogleAnalyticsApp.class).getContext().getActionMap(PreferenciasDiálogo.class, this);
        archivoConfigSeleccionarBotón.setAction(actionMap.get("seleccionarArchivoAcción"));
        archivoConfigSeleccionarBotón.setText(bundle.getString("NuevoInformeDialogo.seleccionarBotón.text"));
        archivoConfigSeleccionarBotón.setName("archivoConfigSeleccionarBotón");
        depuraciónNotificacionesEtiqueta.setText(bundle.getString("PreferenciasDiálogo.depuraciónNotificacionesEtiqueta.text"));
        depuraciónNotificacionesEtiqueta.setName("depuraciónNotificacionesEtiqueta");
        mostrarDepuraciónSiRadioBotón.setAction(actionMap.get("depuraciónSiBotónSeleccionado"));
        grupoBotonesDepuración.add(mostrarDepuraciónSiRadioBotón);
        mostrarDepuraciónSiRadioBotón.setText(bundle.getString("PreferenciasDiálogo.mostrarDepuraciónSiRadioBotón.text"));
        mostrarDepuraciónSiRadioBotón.setName("mostrarDepuraciónSiRadioBotón");
        mostrarDepuraciónNoRadioBotón.setAction(actionMap.get("depuraciónBotónNoSeleccionado"));
        grupoBotonesDepuración.add(mostrarDepuraciónNoRadioBotón);
        mostrarDepuraciónNoRadioBotón.setSelected(true);
        mostrarDepuraciónNoRadioBotón.setText(bundle.getString("PreferenciasDiálogo.mostrarDepuraciónNoRadioBotón.text"));
        mostrarDepuraciónNoRadioBotón.setName("mostrarDepuraciónNoRadioBotón");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(337, Short.MAX_VALUE).addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(cancelButton).addContainerGap()).addGroup(layout.createSequentialGroup().addGap(17, 17, 17).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(depuraciónNotificacionesEtiqueta).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mostrarDepuraciónSiRadioBotón).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(mostrarDepuraciónNoRadioBotón)).addGroup(layout.createSequentialGroup().addComponent(archivoConfigPrefEtiquetta).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(archivoConfigCampoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(archivoConfigSeleccionarBotón))).addContainerGap(44, Short.MAX_VALUE)));
        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] { cancelButton, okButton });
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(7, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(depuraciónNotificacionesEtiqueta).addComponent(mostrarDepuraciónSiRadioBotón).addComponent(mostrarDepuraciónNoRadioBotón)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(archivoConfigPrefEtiquetta).addComponent(archivoConfigCampoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(archivoConfigSeleccionarBotón)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cancelButton).addComponent(okButton)).addContainerGap()));
        pack();
    }

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
        doClose(RET_OK);
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        doClose(RET_CANCEL);
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        doClose(RET_CANCEL);
    }

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     *  Cuando el usuario pulsa al botón "Seleccionar", abre un diálogo que
     *  le pide dónde está hallado el archivo de configuración
     */
    @Action
    public void seleccionarArchivoAcción() {
        JFileChooser chooser = new JFileChooser(GestorPreferencias.getArchivoConfiguración());
        chooser.setFileFilter(new FiltroArchivosXML());
        int retval = chooser.showOpenDialog(this);
        if (retval == JFileChooser.APPROVE_OPTION) {
            this.archivoConfigCampoTexto.setText(chooser.getSelectedFile().toString());
        }
    }

    private class FiltroArchivosXML extends FileFilter {

        public String getDescription() {
            return ".xml file filter";
        }

        public boolean accept(File f) {
            String extension = Utils.getExtension(f);
            if (extension != null && extension.equals("xml")) {
                return true;
            }
            return false;
        }
    }

    @Action
    public void depuraciónSiBotónSeleccionado() {
        mostrarMensajeDepuración = true;
    }

    @Action
    public void depuraciónBotónNoSeleccionado() {
        mostrarMensajeDepuración = false;
    }

    private javax.swing.JTextField archivoConfigCampoTexto;

    private javax.swing.JLabel archivoConfigPrefEtiquetta;

    private javax.swing.JButton archivoConfigSeleccionarBotón;

    private javax.swing.JButton cancelButton;

    private javax.swing.JLabel depuraciónNotificacionesEtiqueta;

    private javax.swing.ButtonGroup grupoBotonesDepuración;

    private javax.swing.JRadioButton mostrarDepuraciónNoRadioBotón;

    private javax.swing.JRadioButton mostrarDepuraciónSiRadioBotón;

    private javax.swing.JButton okButton;

    private int returnStatus = RET_CANCEL;

    private boolean mostrarMensajeDepuración = false;
}
