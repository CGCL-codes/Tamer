package nl.openu.tiles.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.expando.model.ExpandoBridge;
import java.io.Serializable;

/**
 * The base model interface for the TileCategory service. Represents a row in the &quot;tiles_TileCategory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link nl.openu.tiles.model.impl.TileCategoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link nl.openu.tiles.model.impl.TileCategoryImpl}.
 * </p>
 *
 * @author Hubert Vogten, Harrie Martens
 * @see TileCategory
 * @see nl.openu.tiles.model.impl.TileCategoryImpl
 * @see nl.openu.tiles.model.impl.TileCategoryModelImpl
 * @generated
 */
public interface TileCategoryModel extends BaseModel<TileCategory> {

    /**
	 * Gets the primary key of this tile category.
	 *
	 * @return the primary key of this tile category
	 */
    public long getPrimaryKey();

    /**
	 * Sets the primary key of this tile category
	 *
	 * @param primaryKey the primary key of this tile category
	 */
    public void setPrimaryKey(long primaryKey);

    /**
	 * Gets the tile category ID of this tile category.
	 *
	 * @return the tile category ID of this tile category
	 */
    public long getTileCategoryId();

    /**
	 * Sets the tile category ID of this tile category.
	 *
	 * @param tileCategoryId the tile category ID of this tile category
	 */
    public void setTileCategoryId(long tileCategoryId);

    /**
	 * Gets the company ID of this tile category.
	 *
	 * @return the company ID of this tile category
	 */
    public long getCompanyId();

    /**
	 * Sets the company ID of this tile category.
	 *
	 * @param companyId the company ID of this tile category
	 */
    public void setCompanyId(long companyId);

    /**
	 * Gets the asset category ID of this tile category.
	 *
	 * @return the asset category ID of this tile category
	 */
    public long getAssetCategoryId();

    /**
	 * Sets the asset category ID of this tile category.
	 *
	 * @param assetCategoryId the asset category ID of this tile category
	 */
    public void setAssetCategoryId(long assetCategoryId);

    /**
	 * Gets the class name of the model instance this tile category is polymorphically associated with.
	 *
	 * @return the class name of the model instance this tile category is polymorphically associated with
	 */
    public String getClassName();

    /**
	 * Gets the class name ID of this tile category.
	 *
	 * @return the class name ID of this tile category
	 */
    public long getClassNameId();

    /**
	 * Sets the class name ID of this tile category.
	 *
	 * @param classNameId the class name ID of this tile category
	 */
    public void setClassNameId(long classNameId);

    /**
	 * Gets the class pk of this tile category.
	 *
	 * @return the class pk of this tile category
	 */
    public long getClassPk();

    /**
	 * Sets the class pk of this tile category.
	 *
	 * @param classPk the class pk of this tile category
	 */
    public void setClassPk(long classPk);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public void setEscapedModel(boolean escapedModel);

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(TileCategory tileCategory);

    public int hashCode();

    public CacheModel<TileCategory> toCacheModel();

    public TileCategory toEscapedModel();

    public String toString();

    public String toXmlString();
}
