package GUI;

import javax.swing.table.DefaultTableModel;
import tp1POO.Verifica;
import tp1POO.Persistencia.GerenciadorObjetos;
import tp1POO.Persistencia.Pesquisa;
import tp1POO.Modelo.*;
import java.util.Vector;
import javax.swing.JOptionPane;
import tp1POO.GestorLog;

public class GUIRemoveMotorista extends javax.swing.JFrame {

    /** Creates new form GUIRemoveMotorista */
    public GUIRemoveMotorista() {
        initComponents();
        preencherJTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jRemove = new javax.swing.JButton();
        jCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRemove = new javax.swing.JTable();
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Remover Motorista");
        jRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/deletar.gif")));
        jRemove.setText("Remover");
        jRemove.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveActionPerformed(evt);
            }
        });
        jCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/icoErro.gif")));
        jCancel.setText("Fechar");
        jCancel.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelActionPerformed(evt);
            }
        });
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selecione o motorista a ser removido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14)));
        jTableRemove.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null }, { null, null, null } }, new String[] { "Nome", "CPF", "CNH" }) {

            Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.String.class };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jTableRemove.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableRemove);
        jTableRemove.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(17, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jRemove).addComponent(jCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(39, 39, 39).addComponent(jRemove).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jCancel)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] { jCancel, jRemove });
        pack();
    }

    private void erroRemoveMotorista(String msg) {
        JOptionPane.showMessageDialog(jTableRemove, msg, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void jRemoveActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel modelo = (DefaultTableModel) jTableRemove.getModel();
        int linha = jTableRemove.getSelectedRow();
        if (jTableRemove.getSelectedRow() >= 0) {
            String cnh = (String) jTableRemove.getValueAt(linha, 2);
            Motorista motorista = Pesquisa.ObterMotoristaCnh(cnh);
            if (motorista != null) {
                Pesquisa.removeMotorista(cnh);
                modelo.removeRow(linha);
                GestorLog.obterInstancia().inserirMsgLog(GuiCreator.obterInstancia().getGuiFuncionalidades().getFuncionario().getCpf() + " - Motorista removido com sucesso!\n\tNome : " + motorista.getNome() + "\n\tCPF : " + motorista.getCpf() + "\n\tCNH : " + motorista.getCNH());
                JOptionPane.showMessageDialog(jPanel1, "Motorista removido com Sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            erroRemoveMotorista("ERRO : Nenhum motorista foi selecionado!");
        }
    }

    private void jCancelActionPerformed(java.awt.event.ActionEvent evt) {
        GestorLog.obterInstancia().inserirMsgLog("Funcionalidade de Remover motorista foi fechada(" + GuiCreator.obterInstancia().getGuiFuncionalidades().getFuncionario().getCpf() + ")");
        GuiCreator.obterInstancia().removerGuiRemMotorista();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUIRemoveMotorista().setVisible(true);
            }
        });
    }

    private void preencherJTable() {
        DefaultTableModel modelo = (DefaultTableModel) jTableRemove.getModel();
        modelo.setNumRows(0);
        Motorista mot = new Motorista("");
        Vector<ObjetoPOO> motorista = GerenciadorObjetos.obterInstancia().obterObjs(mot);
        for (int i = 0; i < motorista.size(); i++) {
            mot = (Motorista) motorista.get(i);
            modelo.addRow(new Object[] { mot.getNome(), mot.getCpf(), mot.getCNH() });
        }
    }

    private javax.swing.JButton jCancel;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JButton jRemove;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable jTableRemove;
}
