package be.lassi.lanbox.domain;

import be.lassi.util.Util;

/**
 * Helper class with lookup table for lanbox chase speed encoding.
 *
 */
public final class ChaseSpeed {

    private static int[][] values = { { 0, 0 }, { 1, 12800 }, { 2, 6400 }, { 3, 4267 }, { 4, 3200 }, { 5, 2560 }, { 6, 2133 }, { 7, 1829 }, { 8, 1600 }, { 9, 1422 }, { 10, 1280 }, { 11, 1164 }, { 12, 1067 }, { 13, 985 }, { 14, 914 }, { 15, 853 }, { 16, 800 }, { 17, 753 }, { 18, 711 }, { 19, 674 }, { 20, 640 }, { 21, 610 }, { 22, 582 }, { 23, 557 }, { 24, 533 }, { 25, 512 }, { 26, 492 }, { 27, 474 }, { 28, 457 }, { 29, 441 }, { 30, 427 }, { 31, 413 }, { 32, 400 }, { 33, 388 }, { 34, 376 }, { 35, 366 }, { 36, 356 }, { 37, 346 }, { 38, 337 }, { 39, 328 }, { 40, 320 }, { 41, 312 }, { 42, 305 }, { 43, 298 }, { 44, 291 }, { 45, 284 }, { 46, 278 }, { 47, 272 }, { 48, 267 }, { 49, 261 }, { 50, 256 }, { 51, 251 }, { 52, 246 }, { 53, 242 }, { 54, 237 }, { 55, 233 }, { 56, 229 }, { 57, 225 }, { 58, 221 }, { 59, 217 }, { 60, 213 }, { 61, 210 }, { 62, 206 }, { 63, 203 }, { 64, 200 }, { 65, 197 }, { 66, 194 }, { 67, 191 }, { 68, 188 }, { 69, 186 }, { 70, 183 }, { 71, 180 }, { 72, 178 }, { 73, 175 }, { 74, 173 }, { 75, 171 }, { 76, 168 }, { 77, 166 }, { 78, 164 }, { 79, 162 }, { 80, 160 }, { 81, 158 }, { 82, 156 }, { 83, 154 }, { 84, 152 }, { 85, 151 }, { 86, 149 }, { 87, 147 }, { 88, 145 }, { 89, 144 }, { 90, 142 }, { 91, 141 }, { 92, 139 }, { 93, 138 }, { 94, 136 }, { 95, 135 }, { 96, 133 }, { 97, 132 }, { 98, 131 }, { 99, 129 }, { 100, 128 }, { 101, 127 }, { 102, 125 }, { 103, 124 }, { 104, 123 }, { 105, 122 }, { 106, 121 }, { 107, 120 }, { 108, 119 }, { 109, 117 }, { 110, 116 }, { 111, 115 }, { 112, 114 }, { 113, 113 }, { 114, 112 }, { 115, 111 }, { 116, 110 }, { 117, 109 }, { 118, 108 }, { 119, 108 }, { 120, 107 }, { 121, 106 }, { 122, 105 }, { 123, 104 }, { 124, 103 }, { 125, 102 }, { 126, 102 }, { 127, 101 }, { 128, 100 }, { 129, 99 }, { 130, 98 }, { 131, 98 }, { 132, 97 }, { 133, 96 }, { 134, 96 }, { 135, 95 }, { 136, 94 }, { 137, 93 }, { 138, 93 }, { 139, 92 }, { 140, 91 }, { 141, 91 }, { 142, 90 }, { 143, 90 }, { 144, 89 }, { 145, 88 }, { 146, 88 }, { 147, 87 }, { 148, 86 }, { 149, 86 }, { 150, 85 }, { 151, 85 }, { 152, 84 }, { 153, 84 }, { 154, 83 }, { 155, 83 }, { 156, 82 }, { 157, 82 }, { 158, 81 }, { 159, 81 }, { 160, 80 }, { 161, 80 }, { 162, 79 }, { 163, 79 }, { 164, 78 }, { 165, 78 }, { 166, 77 }, { 167, 77 }, { 168, 76 }, { 169, 76 }, { 170, 75 }, { 171, 75 }, { 172, 74 }, { 173, 74 }, { 174, 74 }, { 175, 73 }, { 176, 73 }, { 177, 72 }, { 178, 72 }, { 179, 72 }, { 180, 71 }, { 181, 71 }, { 182, 70 }, { 183, 70 }, { 184, 70 }, { 185, 69 }, { 186, 69 }, { 187, 68 }, { 188, 68 }, { 189, 68 }, { 190, 67 }, { 191, 67 }, { 192, 67 }, { 193, 66 }, { 194, 66 }, { 195, 66 }, { 196, 65 }, { 197, 65 }, { 198, 65 }, { 199, 64 }, { 200, 64 }, { 201, 64 }, { 202, 63 }, { 203, 63 }, { 204, 63 }, { 205, 62 }, { 206, 62 }, { 207, 62 }, { 208, 62 }, { 209, 61 }, { 210, 61 }, { 211, 61 }, { 212, 60 }, { 213, 60 }, { 214, 60 }, { 215, 60 }, { 216, 59 }, { 217, 59 }, { 218, 59 }, { 219, 58 }, { 220, 58 }, { 221, 58 }, { 222, 58 }, { 223, 57 }, { 224, 57 }, { 225, 57 }, { 226, 57 }, { 227, 56 }, { 228, 56 }, { 229, 56 }, { 230, 56 }, { 231, 55 }, { 232, 55 }, { 233, 55 }, { 234, 55 }, { 235, 54 }, { 236, 54 }, { 237, 54 }, { 238, 54 }, { 239, 54 }, { 240, 53 }, { 241, 53 }, { 242, 53 }, { 243, 53 }, { 244, 52 }, { 245, 52 }, { 246, 52 }, { 247, 52 }, { 248, 52 }, { 249, 51 }, { 250, 51 }, { 251, 51 }, { 252, 51 }, { 253, 51 }, { 254, 50 }, { 255, 50 } };

    private ChaseSpeed() {
    }

    /**
     * Gets the textual representation of the chase speed.
     *
     * @param id encoded chase speed
     * @return textual representation of the chase speed
     */
    public static String getString(final int id) {
        String result = "";
        if (id == 0) {
            result = "max";
        } else {
            result = "" + (values[id][1]) + "%";
        }
        return result;
    }

    /**
     * Gets the encoded chase speed from a textual representation of
     * the chase speed.
     *
     * @param string textual representation of the chase speed
     * @return the encoded chase speed
     */
    public static int get(final String string) {
        int id = -1;
        if ("max".equals(string)) {
            id = 0;
        } else {
            String valueString = string.substring(0, string.length() - 1);
            int value = Util.toInt(valueString);
            for (int i = 0; id == -1 && i < values.length; i++) {
                if (values[i][1] == value) {
                    id = values[i][0];
                }
            }
        }
        return id;
    }
}
