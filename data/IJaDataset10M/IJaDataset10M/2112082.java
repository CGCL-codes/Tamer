package jashi.languages;

import jashi.*;
import java.util.*;

public class Cmac extends LanguageData {

    public Cmac() {
        LangName = "C(Mac)";
        CommentSingle = new HashMap<Integer, String>();
        CommentSingle.put(1, "//");
        CommentSingle.put(2, "#");
        CommentMulti = new HashMap<String, String>();
        CommentMulti.put("/*", "*/");
        CommentRegexp = new HashMap<Integer, String>();
        CommentRegexp.put(1, "(?m)//(?:\\\\|\\\n|.)*$");
        CaseKeywords = Global.GESHI_CAPS_NO_CHANGE;
        Quotemarks = new ArrayList<String>();
        Quotemarks.add("\'");
        Quotemarks.add("\"");
        EscapeChar = '\\';
        Keywords = new HashMap<Integer, ArrayList<String>>();
        ArrayList<String> KeyStrList1 = new ArrayList<String>();
        KeyStrList1.add("if");
        KeyStrList1.add("return");
        KeyStrList1.add("while");
        KeyStrList1.add("case");
        KeyStrList1.add("continue");
        KeyStrList1.add("default");
        KeyStrList1.add("do");
        KeyStrList1.add("else");
        KeyStrList1.add("for");
        KeyStrList1.add("switch");
        KeyStrList1.add("goto");
        Keywords.put(1, KeyStrList1);
        ArrayList<String> KeyStrList2 = new ArrayList<String>();
        KeyStrList2.add("NULL");
        KeyStrList2.add("false");
        KeyStrList2.add("break");
        KeyStrList2.add("true");
        KeyStrList2.add("enum");
        KeyStrList2.add("errno");
        KeyStrList2.add("EDOM");
        KeyStrList2.add("ERANGE");
        KeyStrList2.add("FLT_RADIX");
        KeyStrList2.add("FLT_ROUNDS");
        KeyStrList2.add("FLT_DIG");
        KeyStrList2.add("DBL_DIG");
        KeyStrList2.add("LDBL_DIG");
        KeyStrList2.add("FLT_EPSILON");
        KeyStrList2.add("DBL_EPSILON");
        KeyStrList2.add("LDBL_EPSILON");
        KeyStrList2.add("FLT_MANT_DIG");
        KeyStrList2.add("DBL_MANT_DIG");
        KeyStrList2.add("LDBL_MANT_DIG");
        KeyStrList2.add("FLT_MAX");
        KeyStrList2.add("DBL_MAX");
        KeyStrList2.add("LDBL_MAX");
        KeyStrList2.add("FLT_MAX_EXP");
        KeyStrList2.add("DBL_MAX_EXP");
        KeyStrList2.add("LDBL_MAX_EXP");
        KeyStrList2.add("FLT_MIN");
        KeyStrList2.add("DBL_MIN");
        KeyStrList2.add("LDBL_MIN");
        KeyStrList2.add("FLT_MIN_EXP");
        KeyStrList2.add("DBL_MIN_EXP");
        KeyStrList2.add("LDBL_MIN_EXP");
        KeyStrList2.add("CHAR_BIT");
        KeyStrList2.add("CHAR_MAX");
        KeyStrList2.add("CHAR_MIN");
        KeyStrList2.add("SCHAR_MAX");
        KeyStrList2.add("SCHAR_MIN");
        KeyStrList2.add("UCHAR_MAX");
        KeyStrList2.add("SHRT_MAX");
        KeyStrList2.add("SHRT_MIN");
        KeyStrList2.add("USHRT_MAX");
        KeyStrList2.add("INT_MAX");
        KeyStrList2.add("INT_MIN");
        KeyStrList2.add("UINT_MAX");
        KeyStrList2.add("LONG_MAX");
        KeyStrList2.add("LONG_MIN");
        KeyStrList2.add("ULONG_MAX");
        KeyStrList2.add("HUGE_VAL");
        KeyStrList2.add("SIGABRT");
        KeyStrList2.add("SIGFPE");
        KeyStrList2.add("SIGILL");
        KeyStrList2.add("SIGINT");
        KeyStrList2.add("SIGSEGV");
        KeyStrList2.add("SIGTERM");
        KeyStrList2.add("SIG_DFL");
        KeyStrList2.add("SIG_ERR");
        KeyStrList2.add("SIG_IGN");
        KeyStrList2.add("BUFSIZ");
        KeyStrList2.add("EOF");
        KeyStrList2.add("FILENAME_MAX");
        KeyStrList2.add("FOPEN_MAX");
        KeyStrList2.add("L_tmpnam");
        KeyStrList2.add("NULL");
        KeyStrList2.add("SEEK_CUR");
        KeyStrList2.add("SEEK_END");
        KeyStrList2.add("SEEK_SET");
        KeyStrList2.add("TMP_MAX");
        KeyStrList2.add("stdin");
        KeyStrList2.add("stdout");
        KeyStrList2.add("stderr");
        KeyStrList2.add("EXIT_FAILURE");
        KeyStrList2.add("EXIT_SUCCESS");
        KeyStrList2.add("RAND_MAX");
        KeyStrList2.add("CLOCKS_PER_SEC");
        KeyStrList2.add("kCFAllocatorDefault");
        Keywords.put(2, KeyStrList2);
        ArrayList<String> KeyStrList3 = new ArrayList<String>();
        KeyStrList3.add("printf");
        KeyStrList3.add("fprintf");
        KeyStrList3.add("snprintf");
        KeyStrList3.add("sprintf");
        KeyStrList3.add("assert");
        KeyStrList3.add("isalnum");
        KeyStrList3.add("isalpha");
        KeyStrList3.add("isdigit");
        KeyStrList3.add("iscntrl");
        KeyStrList3.add("isgraph");
        KeyStrList3.add("islower");
        KeyStrList3.add("isprint");
        KeyStrList3.add("ispunct");
        KeyStrList3.add("isspace");
        KeyStrList3.add("ispunct");
        KeyStrList3.add("isupper");
        KeyStrList3.add("isxdigit");
        KeyStrList3.add("tolower");
        KeyStrList3.add("toupper");
        KeyStrList3.add("exp");
        KeyStrList3.add("log");
        KeyStrList3.add("log10");
        KeyStrList3.add("pow");
        KeyStrList3.add("sqrt");
        KeyStrList3.add("ceil");
        KeyStrList3.add("floor");
        KeyStrList3.add("fabs");
        KeyStrList3.add("ldexp");
        KeyStrList3.add("frexp");
        KeyStrList3.add("modf");
        KeyStrList3.add("fmod");
        KeyStrList3.add("sin");
        KeyStrList3.add("cos");
        KeyStrList3.add("tan");
        KeyStrList3.add("asin");
        KeyStrList3.add("acos");
        KeyStrList3.add("atan");
        KeyStrList3.add("atan2");
        KeyStrList3.add("sinh");
        KeyStrList3.add("cosh");
        KeyStrList3.add("tanh");
        KeyStrList3.add("setjmp");
        KeyStrList3.add("longjmp");
        KeyStrList3.add("asin");
        KeyStrList3.add("acos");
        KeyStrList3.add("atan");
        KeyStrList3.add("atan2");
        KeyStrList3.add("va_start");
        KeyStrList3.add("va_arg");
        KeyStrList3.add("va_end");
        KeyStrList3.add("offsetof");
        KeyStrList3.add("sizeof");
        KeyStrList3.add("fopen");
        KeyStrList3.add("freopen");
        KeyStrList3.add("fflush");
        KeyStrList3.add("fclose");
        KeyStrList3.add("remove");
        KeyStrList3.add("rename");
        KeyStrList3.add("tmpfile");
        KeyStrList3.add("tmpname");
        KeyStrList3.add("setvbuf");
        KeyStrList3.add("setbuf");
        KeyStrList3.add("vfprintf");
        KeyStrList3.add("vprintf");
        KeyStrList3.add("vsprintf");
        KeyStrList3.add("fscanf");
        KeyStrList3.add("scanf");
        KeyStrList3.add("sscanf");
        KeyStrList3.add("fgetc");
        KeyStrList3.add("fgets");
        KeyStrList3.add("fputc");
        KeyStrList3.add("fputs");
        KeyStrList3.add("getc");
        KeyStrList3.add("getchar");
        KeyStrList3.add("gets");
        KeyStrList3.add("putc");
        KeyStrList3.add("putchar");
        KeyStrList3.add("puts");
        KeyStrList3.add("ungetc");
        KeyStrList3.add("fread");
        KeyStrList3.add("fwrite");
        KeyStrList3.add("fseek");
        KeyStrList3.add("ftell");
        KeyStrList3.add("rewind");
        KeyStrList3.add("fgetpos");
        KeyStrList3.add("fsetpos");
        KeyStrList3.add("clearerr");
        KeyStrList3.add("feof");
        KeyStrList3.add("ferror");
        KeyStrList3.add("perror");
        KeyStrList3.add("abs");
        KeyStrList3.add("labs");
        KeyStrList3.add("div");
        KeyStrList3.add("ldiv");
        KeyStrList3.add("atof");
        KeyStrList3.add("atoi");
        KeyStrList3.add("atol");
        KeyStrList3.add("strtod");
        KeyStrList3.add("strtol");
        KeyStrList3.add("strtoul");
        KeyStrList3.add("calloc");
        KeyStrList3.add("malloc");
        KeyStrList3.add("realloc");
        KeyStrList3.add("free");
        KeyStrList3.add("abort");
        KeyStrList3.add("exit");
        KeyStrList3.add("atexit");
        KeyStrList3.add("system");
        KeyStrList3.add("getenv");
        KeyStrList3.add("bsearch");
        KeyStrList3.add("qsort");
        KeyStrList3.add("rand");
        KeyStrList3.add("srand");
        KeyStrList3.add("strcpy");
        KeyStrList3.add("strncpy");
        KeyStrList3.add("strcat");
        KeyStrList3.add("strncat");
        KeyStrList3.add("strcmp");
        KeyStrList3.add("strncmp");
        KeyStrList3.add("strcoll");
        KeyStrList3.add("strchr");
        KeyStrList3.add("strrchr");
        KeyStrList3.add("strspn");
        KeyStrList3.add("strcspn");
        KeyStrList3.add("strpbrk");
        KeyStrList3.add("strstr");
        KeyStrList3.add("strlen");
        KeyStrList3.add("strerror");
        KeyStrList3.add("strtok");
        KeyStrList3.add("strxfrm");
        KeyStrList3.add("memcpy");
        KeyStrList3.add("memmove");
        KeyStrList3.add("memcmp");
        KeyStrList3.add("memchr");
        KeyStrList3.add("memset");
        KeyStrList3.add("clock");
        KeyStrList3.add("time");
        KeyStrList3.add("difftime");
        KeyStrList3.add("mktime");
        KeyStrList3.add("asctime");
        KeyStrList3.add("ctime");
        KeyStrList3.add("gmtime");
        KeyStrList3.add("localtime");
        KeyStrList3.add("strftime");
        Keywords.put(3, KeyStrList3);
        ArrayList<String> KeyStrList4 = new ArrayList<String>();
        KeyStrList4.add("auto");
        KeyStrList4.add("char");
        KeyStrList4.add("const");
        KeyStrList4.add("double");
        KeyStrList4.add("float");
        KeyStrList4.add("int");
        KeyStrList4.add("long");
        KeyStrList4.add("register");
        KeyStrList4.add("short");
        KeyStrList4.add("signed");
        KeyStrList4.add("sizeof");
        KeyStrList4.add("static");
        KeyStrList4.add("string");
        KeyStrList4.add("struct");
        KeyStrList4.add("typedef");
        KeyStrList4.add("union");
        KeyStrList4.add("unsigned");
        KeyStrList4.add("void");
        KeyStrList4.add("volatile");
        KeyStrList4.add("extern");
        KeyStrList4.add("jmp_buf");
        KeyStrList4.add("signal");
        KeyStrList4.add("raise");
        KeyStrList4.add("va_list");
        KeyStrList4.add("ptrdiff_t");
        KeyStrList4.add("size_t");
        KeyStrList4.add("FILE");
        KeyStrList4.add("fpos_t");
        KeyStrList4.add("div_t");
        KeyStrList4.add("ldiv_t");
        KeyStrList4.add("clock_t");
        KeyStrList4.add("time_t");
        KeyStrList4.add("tm");
        KeyStrList4.add("CFArrayRef");
        KeyStrList4.add("CFDictionaryRef");
        KeyStrList4.add("CFMutableDictionaryRef");
        KeyStrList4.add("CFBundleRef");
        KeyStrList4.add("CFSetRef");
        KeyStrList4.add("CFStringRef");
        KeyStrList4.add("CFURLRef");
        KeyStrList4.add("CFLocaleRef");
        KeyStrList4.add("CFDateFormatterRef");
        KeyStrList4.add("CFNumberFormatterRef");
        KeyStrList4.add("CFPropertyListRef");
        KeyStrList4.add("CFTreeRef");
        KeyStrList4.add("CFWriteStreamRef");
        KeyStrList4.add("CFCharacterSetRef");
        KeyStrList4.add("CFMutableStringRef");
        KeyStrList4.add("CFNotificationRef");
        KeyStrList4.add("CFNotificationRef");
        KeyStrList4.add("CFReadStreamRef");
        KeyStrList4.add("CFNull");
        KeyStrList4.add("CFAllocatorRef");
        KeyStrList4.add("CFBagRef");
        KeyStrList4.add("CFBinaryHeapRef");
        KeyStrList4.add("CFBitVectorRef");
        KeyStrList4.add("CFBooleanRef");
        KeyStrList4.add("CFDataRef");
        KeyStrList4.add("CFDateRef");
        KeyStrList4.add("CFMachPortRef");
        KeyStrList4.add("CFMessagePortRef");
        KeyStrList4.add("CFMutableArrayRef");
        KeyStrList4.add("CFMutableBagRef");
        KeyStrList4.add("CFMutableBitVectorRef");
        KeyStrList4.add("CFMutableCharacterSetRef");
        KeyStrList4.add("CFMutableDataRef");
        KeyStrList4.add("CFMutableSetRef");
        KeyStrList4.add("CFNumberRef");
        KeyStrList4.add("CFPlugInRef");
        KeyStrList4.add("CFPlugInInstanceRef");
        KeyStrList4.add("CFRunLoopRef");
        KeyStrList4.add("CFRunLoopObserverRef");
        KeyStrList4.add("CFRunLoopSourceRef");
        KeyStrList4.add("CFRunLoopTimerRef");
        KeyStrList4.add("CFSocketRef");
        KeyStrList4.add("CFTimeZoneRef");
        KeyStrList4.add("CFTypeRef");
        KeyStrList4.add("CFUserNotificationRef");
        KeyStrList4.add("CFUUIDRef");
        KeyStrList4.add("CFXMLNodeRef");
        KeyStrList4.add("CFXMLParserRef");
        KeyStrList4.add("CFXMLTreeRef");
        Keywords.put(4, KeyStrList4);
        Symbols = new HashMap<Integer, ArrayList<String>>();
        ArrayList<String> SymStrList = new ArrayList<String>();
        SymStrList.add("(");
        SymStrList.add(")");
        SymStrList.add("{");
        SymStrList.add("}");
        SymStrList.add("[");
        SymStrList.add("]");
        SymStrList.add("=");
        SymStrList.add("+");
        SymStrList.add("-");
        SymStrList.add("*");
        SymStrList.add("/");
        SymStrList.add("!");
        SymStrList.add("%");
        SymStrList.add("^");
        SymStrList.add("&");
        SymStrList.add(":");
        Symbols.put(Global.JASHI_STUBINDEX, SymStrList);
        CaseSensitive = new HashMap<Integer, Boolean>();
        CaseSensitive.put(Global.GESHI_COMMENTS, true);
        CaseSensitive.put(1, false);
        CaseSensitive.put(2, false);
        CaseSensitive.put(3, false);
        CaseSensitive.put(4, false);
        Styles.Keywords.put(1, "color:#0000ff;");
        Styles.Keywords.put(2, "color:#0000ff;");
        Styles.Keywords.put(3, "color:#0000dd;");
        Styles.Keywords.put(4, "color:#0000ff;");
        Styles.Comments.put(1, "color:#ff0000;");
        Styles.Comments.put(2, "color:#339900;");
        Styles.Comments.put(Global.MULTI, "color:#ff0000;font-style:italic;");
        Styles.EscapeChar.put(0, "color:#666666;font-weight:bold;");
        Styles.Brackets.put(0, "color:#000000;");
        Styles.Strings.put(0, "color:#666666;");
        Styles.Numbers.put(0, "color:#0000dd;");
        Styles.Methods.put(1, "color:#00eeff;");
        Styles.Methods.put(2, "color:#00eeff;");
        Styles.Symbols.put(0, "color:#000000;");
        URLS = new HashMap<Integer, String>();
        URLS.put(1, "");
        URLS.put(2, "");
        URLS.put(3, "http://www.opengroup.org/onlinepubs/009695399/functions/{FNAME}.html");
        URLS.put(4, "");
        OOLANG = true;
        ObjectSplitters = new HashMap<Integer, String>();
        ObjectSplitters.put(1, ".");
        ObjectSplitters.put(2, "::");
        Regexps = new HashMap<Integer, HashMap<Integer, String>>();
        StrictModeApplies = Global.GESHI_NEVER;
        ScriptDelimiters = new HashMap<Integer, HashMap<String, String>>();
        HighlightStrictBlock = new HashMap<Integer, Boolean>();
        TabWidth = 4;
    }
}
