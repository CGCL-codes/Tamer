package org.scrinch.gui;

import org.scrinch.gui.model.ItemStatusComboBoxModel;
import org.scrinch.gui.model.OriginTypeComboBoxModel;
import org.scrinch.gui.model.TargetComboBoxModel;
import org.scrinch.gui.model.WorkTypeComboBoxModel;
import java.awt.Frame;
import javax.swing.SwingUtilities;
import org.scrinch.model.Item;
import org.scrinch.model.OriginType;
import org.scrinch.model.ScrinchEnvToolkit;
import org.scrinch.model.Target;
import org.scrinch.model.WorkType;

public class SearchMainPanel extends javax.swing.JPanel {

    private ItemStatusComboBoxModel itemStatusComboBoxModel;

    private TargetComboBoxModel targetComboBoxModel;

    private WorkTypeComboBoxModel workTypeComboBoxModel;

    private OriginTypeComboBoxModel originTypeComboBoxModel;

    private SearchItemSetPanel searchResultsPanel;

    private final ScrinchEnvToolkit toolkit;

    public SearchMainPanel() {
        this(new ScrinchEnvToolkit());
    }

    public SearchMainPanel(ScrinchEnvToolkit toolkit) {
        this.toolkit = toolkit;
        initComponents();
        toolkit.addListener(new ScrinchEnvToolkit.Listener() {

            public void preferencesChanged() {
            }

            public void dataLoaded() {
                resetSearchPanel();
            }

            public void dataChanged() {
            }
        });
        resetSearchPanel();
        this.targetComboBoxModel = new TargetComboBoxModel(false, false, toolkit);
        initSearchPanelComboBoxes();
        itemStatusComboBox.setSelectedIndex(0);
        if (toolkit.getTargetFactory().getTargetList().size() > 0) {
            targetComboBox.setSelectedIndex(0);
        }
    }

    private void initSearchPanelComboBoxes() {
        itemStatusComboBoxModel = new ItemStatusComboBoxModel();
        itemStatusComboBox.setModel(itemStatusComboBoxModel);
        targetComboBoxModel = new TargetComboBoxModel(false, false, toolkit);
        targetComboBox.setModel(targetComboBoxModel);
        workTypeComboBoxModel = new WorkTypeComboBoxModel(toolkit);
        workTypeComboBox.setModel(workTypeComboBoxModel);
        originTypeComboBoxModel = new OriginTypeComboBoxModel(toolkit);
        originTypeComboBox.setModel(originTypeComboBoxModel);
    }

    private void resetSearchPanel() {
        releaseAllResources();
        initSearchPanelComboBoxes();
    }

    private void releaseAllResources() {
        releaseResultsPanelResources();
        if (targetComboBoxModel != null) {
            targetComboBoxModel.releaseAllResources();
        }
        if (workTypeComboBoxModel != null) {
            workTypeComboBoxModel.releaseAllResources();
        }
        if (originTypeComboBoxModel != null) {
            originTypeComboBoxModel.releaseAllResources();
        }
    }

    private void releaseResultsPanelResources() {
        if (searchResultsPanel != null) {
            searchResultsPanel.releaseAllResources();
            remove(searchResultsPanel);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        searchCriteriaPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        itemStatusComboBox = new javax.swing.JComboBox();
        findByStatusButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        targetComboBox = new javax.swing.JComboBox();
        findByTargetButton = new javax.swing.JButton();
        releaseNotesButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        workTypeComboBox = new javax.swing.JComboBox();
        findByWorkType = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        originTypeComboBox = new javax.swing.JComboBox();
        findByOriginType = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        toBeReaffectedItemsButton = new javax.swing.JButton();
        setLayout(new java.awt.BorderLayout());
        searchCriteriaPanel.setLayout(new java.awt.GridLayout(1, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Search for status :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(itemStatusComboBox, gridBagConstraints);
        findByStatusButton.setText("FIND");
        findByStatusButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findByStatusButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(findByStatusButton, gridBagConstraints);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Search for target :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(targetComboBox, gridBagConstraints);
        findByTargetButton.setText("FIND");
        findByTargetButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findByTargetButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(findByTargetButton, gridBagConstraints);
        releaseNotesButton.setText("Produce release notes");
        releaseNotesButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releaseNotesButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanel3.add(releaseNotesButton, gridBagConstraints);
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Search for work type :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(workTypeComboBox, gridBagConstraints);
        findByWorkType.setText("FIND");
        findByWorkType.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findByWorkTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(findByWorkType, gridBagConstraints);
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Search for origin :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(originTypeComboBox, gridBagConstraints);
        findByOriginType.setText("FIND");
        findByOriginType.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findByOriginTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel3.add(findByOriginType, gridBagConstraints);
        searchCriteriaPanel.add(jPanel3);
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.GridBagLayout());
        jLabel6.setText("Special search :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel5.add(jLabel6, gridBagConstraints);
        toBeReaffectedItemsButton.setText("Find items to be reaffected");
        toBeReaffectedItemsButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toBeReaffectedItemsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel5.add(toBeReaffectedItemsButton, gridBagConstraints);
        searchCriteriaPanel.add(jPanel5);
        add(searchCriteriaPanel, java.awt.BorderLayout.NORTH);
    }

    private void setNewSearchResultsPanel(SearchItemSetPanel searchPanel) {
        releaseResultsPanelResources();
        this.searchResultsPanel = searchPanel;
        add(this.searchResultsPanel, java.awt.BorderLayout.CENTER);
        revalidate();
    }

    private void findByStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {
        SearchItemSetPanel newSearchPanel = new SearchItemSetPanel(toolkit);
        newSearchPanel.searchByStatus((Item.Status) itemStatusComboBox.getSelectedItem());
        setNewSearchResultsPanel(newSearchPanel);
    }

    private void findByTargetButtonActionPerformed(java.awt.event.ActionEvent evt) {
        SearchItemSetPanel newSearchPanel = new SearchItemSetPanel(toolkit);
        newSearchPanel.searchByTarget((Target) targetComboBox.getSelectedItem());
        setNewSearchResultsPanel(newSearchPanel);
    }

    private void releaseNotesButtonActionPerformed(java.awt.event.ActionEvent evt) {
        Target target = (Target) targetComboBox.getSelectedItem();
        if (target != null) {
            ReleaseNotesDialog dialog = new ReleaseNotesDialog((Frame) SwingUtilities.windowForComponent(this), target, toolkit);
            dialog.pack();
            int width = dialog.getWidth();
            int height = dialog.getHeight();
            if (width > (getWidth() - 40)) {
                width = getWidth() - 40;
            }
            if (height > (getHeight() - 50)) {
                height = getHeight() - 50;
            }
            dialog.setSize(width, height);
            ScrinchGuiToolkit.centerFrame(dialog, (Frame) SwingUtilities.windowForComponent(this));
            dialog.setVisible(true);
        }
    }

    private void findByWorkTypeActionPerformed(java.awt.event.ActionEvent evt) {
        SearchItemSetPanel newSearchPanel = new SearchItemSetPanel(toolkit);
        newSearchPanel.searchByWorkType((WorkType) workTypeComboBox.getSelectedItem());
        setNewSearchResultsPanel(newSearchPanel);
    }

    private void findByOriginTypeActionPerformed(java.awt.event.ActionEvent evt) {
        SearchItemSetPanel newSearchPanel = new SearchItemSetPanel(toolkit);
        newSearchPanel.searchByOriginType((OriginType) originTypeComboBox.getSelectedItem());
        setNewSearchResultsPanel(newSearchPanel);
    }

    private void toBeReaffectedItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {
        SearchItemSetPanel newSearchPanel = new SearchItemSetPanel(toolkit);
        newSearchPanel.searchToBeReaffectedItems();
        setNewSearchResultsPanel(newSearchPanel);
    }

    private javax.swing.JButton findByOriginType;

    private javax.swing.JButton findByStatusButton;

    private javax.swing.JButton findByTargetButton;

    private javax.swing.JButton findByWorkType;

    private javax.swing.JComboBox itemStatusComboBox;

    private javax.swing.JLabel jLabel10;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel9;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JPanel jPanel5;

    private javax.swing.JComboBox originTypeComboBox;

    private javax.swing.JButton releaseNotesButton;

    private javax.swing.JPanel searchCriteriaPanel;

    private javax.swing.JComboBox targetComboBox;

    private javax.swing.JButton toBeReaffectedItemsButton;

    private javax.swing.JComboBox workTypeComboBox;
}
