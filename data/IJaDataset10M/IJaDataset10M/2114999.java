package GUI;

import Analise.PlayerManager;
import java.awt.Component;
import javax.swing.WindowConstants;

/**
 *
 * @author diogo
 */
public class PlayerChange extends javax.swing.JFrame {

    private static PlayerChange instance;

    public static PlayerChange GetInsance() {
        if (instance == null) {
            instance = new PlayerChange();
            instance.Init();
        }
        return instance;
    }

    /** Creates new form PlayerChange */
    public PlayerChange() {
        initComponents();
    }

    protected void Init() {
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        listPlayers = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        labelCurPlayer = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {

            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }

            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        listPlayers.setFont(new java.awt.Font("Comic Sans MS", 0, 32));
        listPlayers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listPlayers.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(listPlayers);
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 32));
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Selecione um jogador");
        btnSelect.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnSelect.setText("Confirmar");
        btnSelect.setToolTipText("Trocar para o jogador selecionado");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });
        btnBack.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnBack.setText("Voltar");
        btnBack.setToolTipText("Criar um novo jogador");
        btnBack.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        labelCurPlayer.setFont(new java.awt.Font("Comic Sans MS", 0, 30));
        labelCurPlayer.setForeground(new java.awt.Color(255, 0, 0));
        labelCurPlayer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCurPlayer.setText("Atual:");
        btnCreate.setFont(new java.awt.Font("Comic Sans MS", 0, 24));
        btnCreate.setText("Novo");
        btnCreate.setToolTipText("Criar um novo jogador");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE).addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE).addComponent(labelCurPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE).addComponent(btnSelect, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(labelCurPlayer).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnSelect).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnCreate).addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
        pack();
    }

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {
        OnPlayerConfirmed();
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {
        OnClickBack();
    }

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {
        UpdatePlayerList();
    }

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {
        OnClickCreate();
    }

    private javax.swing.JButton btnBack;

    private javax.swing.JButton btnCreate;

    private javax.swing.JButton btnSelect;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JLabel labelCurPlayer;

    private javax.swing.JList listPlayers;

    /**
	 * Refreshes the player list
	 */
    protected void UpdatePlayerList() {
        String[] vAllNames = PlayerManager.GetInstance().GetAllPlayersNames();
        if (vAllNames != null) {
            if (vAllNames.length == 1) {
                PlayerManager.GetInstance().SetLatestPlayer(vAllNames[0]);
                UpdateCurrentPlayer(false);
            }
            listPlayers.setListData(vAllNames);
        }
    }

    public void OpenMenu(Component cRelativeComponent) {
        this.setVisible(true);
        this.setLocationRelativeTo(cRelativeComponent);
        UpdateCurrentPlayer(true);
    }

    public void OnPlayerConfirmed() {
        String sName = (String) listPlayers.getSelectedValue();
        PlayerManager.GetInstance().SetLatestPlayer(sName);
        UpdateCurrentPlayer(false);
    }

    /**
	 * updates the current player name.
	 * when bCreateIfEmpty is true, it will try to Create a new player
	 * if No players were found
	 * @param bCreateIfEmpty
	 */
    public void UpdateCurrentPlayer(boolean bCreateIfEmpty) {
        String sName = PlayerManager.GetInstance().GetLatestPlayer();
        if (PlayerManager.GetInstance().ContainsNameInSave(sName)) {
            labelCurPlayer.setText("Jogador atual: " + sName);
        } else {
            labelCurPlayer.setText("");
            if (bCreateIfEmpty) {
                OnClickCreate();
            }
        }
        Inicial.GetInsance().SetCurrentPlayer(sName);
    }

    protected void OnClickBack() {
        this.dispose();
    }

    protected void OnClickCreate() {
        if (PlayerManagement.CreatePlayer()) {
            UpdatePlayerList();
        }
    }
}
