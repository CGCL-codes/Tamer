package ejb.bprocess.circulation;

import javax.ejb.*;

/**
 * Created Jun 15, 2003 3:23:17 PM
 * Code generated by the Sun ONE Studio EJB Builder
 * @author vasu praveen
 */
public class IdentifyDocumentsForBindingBean implements javax.ejb.SessionBean {

    private javax.ejb.SessionContext context;

    private ejb.bprocess.util.Utility utility = null;

    private ejb.bprocess.util.HomeFactory homeFactory = null;

    private ejb.bprocess.util.NewGenXMLGenerator newGenXMLGenerator = null;

    /**
     * @see javax.ejb.SessionBean#setSessionContext(javax.ejb.SessionContext)
     */
    public void setSessionContext(javax.ejb.SessionContext aContext) {
        context = aContext;
        utility = ejb.bprocess.util.Utility.getInstance();
        homeFactory = ejb.bprocess.util.HomeFactory.getInstance();
        newGenXMLGenerator = ejb.bprocess.util.NewGenXMLGenerator.getInstance();
    }

    /**
     * @see javax.ejb.SessionBean#ejbActivate()
     */
    public void ejbActivate() {
    }

    /**
     * @see javax.ejb.SessionBean#ejbPassivate()
     */
    public void ejbPassivate() {
    }

    /**
     * @see javax.ejb.SessionBean#ejbRemove()
     */
    public void ejbRemove() {
    }

    /**
     * See section 7.10.3 of the EJB 2.0 specification
     */
    public void ejbCreate() {
    }

    public java.lang.String isDocumentAvailableForBinding(java.lang.String xmlStr) {
        java.util.Hashtable ht = newGenXMLGenerator.parseXMLDocument(xmlStr);
        String barcode = "" + ht.get("Barcode");
        int libID = Integer.parseInt("" + ht.get("LibraryID"));
        ejb.objectmodel.cataloguing.DocumentKey documentKey = new ejb.objectmodel.cataloguing.DocumentKey();
        documentKey.library_Id = new Integer(libID);
        documentKey.accession_Number = barcode;
        try {
            ejb.objectmodel.cataloguing.LocalDocument localDocument = ((ejb.objectmodel.cataloguing.LocalDocumentHome) homeFactory.getHome("Document")).findByPrimaryKey(documentKey);
            String status = localDocument.getStatus();
            String reserved = "No";
            if (status.equals("B")) {
                int matTypeID = localDocument.getMaterial_Type_Id().intValue();
                int volSerID = 0;
                boolean serial = false;
                if (localDocument.getVolume_Id() != null) {
                    volSerID = localDocument.getVolume_Id().intValue();
                } else {
                    serial = true;
                    volSerID = localDocument.getSerial_Id().intValue();
                }
                int count1 = ((ejb.objectmodel.cataloguing.LocalDocumentHome) homeFactory.getHome("Document")).getCountOfAvailableDocuments(libID, volSerID, matTypeID, serial);
                int count2 = ((ejb.objectmodel.circulation.LocalCIR_RESERVATIONHome) homeFactory.getHome("CIR_RESERVATION")).getCountOfReservations(libID, volSerID, matTypeID, serial);
                if (count1 <= count2) {
                    reserved = "Yes";
                }
            }
            ht = new java.util.Hashtable();
            ht.put("Status", status);
            ht.put("Reserved", reserved);
            xmlStr = newGenXMLGenerator.buildXMLDocument(ht);
        } catch (Exception ex) {
            ht = new java.util.Hashtable();
            ht.put("Status", "Invalid");
            xmlStr = newGenXMLGenerator.buildXMLDocument(ht);
            ex.printStackTrace(System.out);
        }
        return xmlStr;
    }

    public java.lang.String updateDatabase(java.lang.String xmlStr) {
        org.jdom.Element root = newGenXMLGenerator.getRootElementFromXMLDocument(xmlStr);
        int libID = Integer.parseInt(root.getChildText("LibraryID"));
        Object[] element = root.getChild("DocumentDetails").getChildren("DocumentID").toArray();
        boolean success = true;
        for (int i = 0; i < element.length; i++) {
            String barcode = ((org.jdom.Element) element[i]).getText();
            ejb.objectmodel.cataloguing.DocumentKey documentKey = new ejb.objectmodel.cataloguing.DocumentKey();
            documentKey.library_Id = new Integer(libID);
            documentKey.accession_Number = barcode;
            try {
                ejb.objectmodel.cataloguing.LocalDocument localDocument = ((ejb.objectmodel.cataloguing.LocalDocumentHome) homeFactory.getHome("Document")).findByPrimaryKey(documentKey);
                localDocument.setStatus("C");
            } catch (javax.ejb.FinderException ex) {
                context.setRollbackOnly();
                ex.printStackTrace(System.out);
                success = false;
            }
        }
        java.util.Hashtable ht = new java.util.Hashtable();
        if (success) ht.put("Success", "Yes"); else ht.put("Success", "No");
        xmlStr = newGenXMLGenerator.buildXMLDocument(ht);
        return xmlStr;
    }
}
