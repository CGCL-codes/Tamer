package org.primordion.xholon.proxy;

import java.io.IOException;
import org.objectweb.asm.ClassAdapter;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassWriter;
import org.primordion.xholon.base.IXholon;

/**
 * ASM Xholon class generator.
 * Return an instance of IXholon, generated by combining Xholon with a non-Xholon class
 * specified by name. The non-Xholon class must not have a superclass other than Object.
 * It must have an interface class that can subsequently be used to access the non-Xholon
 * methods of the new class instance.
 * @see <a href="http://www.primordion.com/Xholon">Xholon Project website</a>
 * @see <a href="http://asm.objectweb.org">ASM website</a>
 * @since 0.8 (Created on September 14, 2009)
 */
public class AsmXholonClassGenerator {

    /**
	 * Generate a new Java IXholon class, and return a new instance of it.
	 * @param classNameIn The fully qualified name of the class to be read in.
	 * ex: "org.primordion.xholon.proxy.Seat"
	 * @param classNameOut The internal name of the class being returned as byte codes, or null.
	 * ex: "org/primordion/xholon/proxy/Seat2"
	 * @return A new instance, or null.
	 */
    public IXholon generateNewInstance(String classNameIn, String classNameOut) {
        byte[] bytes = this.generateByteCodes(classNameIn, classNameOut);
        Class clazz = loadClass(bytes);
        IXholon obj = newInstance(clazz);
        return obj;
    }

    /**
	 * Generate byte codes for a class.
	 * @param classNameIn The fully qualified name of the class to be read in.
	 * ex: "org.primordion.xholon.proxy.Seat"
	 * @param classNameOut The internal name of the class being returned as byte codes, or null.
	 * ex: "org/primordion/xholon/proxy/Seat2"
	 * @return A sequence of byte codes, or null
	 */
    protected byte[] generateByteCodes(String classNameIn, String classNameOut) {
        if (classNameOut == null) {
            classNameOut = classNameIn.replace('.', '/');
        }
        ClassWriter cw = new AsmXholonWriter(true);
        ClassAdapter ca = new AsmXholonAdapter(cw, classNameOut);
        ClassReader cr = null;
        try {
            cr = new ClassReader(classNameIn);
        } catch (IOException e) {
            e.printStackTrace();
        }
        cr.accept(ca, true);
        byte[] bytes = cw.toByteArray();
        return bytes;
    }

    /**
	 * Load a class given its description as an array of byte codes.
	 * @param bytes Byte codes.
	 * @return A Class object, or null;
	 */
    protected Class loadClass(byte[] bytes) {
        AsmXholonClassLoader myClassLoader = new AsmXholonClassLoader();
        String className = null;
        Class clazz = myClassLoader.defineClass(className, bytes);
        return clazz;
    }

    /**
	 * Return a new instance of a clss.
	 * @param clazz A Class object.
	 * @return A new instance of the class, or null.
	 */
    protected IXholon newInstance(Class clazz) {
        IXholon obj = null;
        try {
            obj = (IXholon) clazz.newInstance();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        }
        return obj;
    }
}
