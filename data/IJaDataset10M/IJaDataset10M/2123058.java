package medi.swing.frame;

import javatools.db.DbException;
import javatools.swing.panel.SubPanelDispatcher;
import medi.db.AbstractProvider;
import medi.db.util.VolumeMounter;
import medi.swing.panel.SearchDataPanel;

/** A Frame showing the search results.
 * @author Antonio Petrelli
 * @version 0.2.0
 */
public class SearchResults extends javax.swing.JFrame {

    /** Creates new form SearchResults */
    public SearchResults() {
        initComponents();
        ((SearchDataPanel) panResults).setWaitIcon(new javax.swing.ImageIcon(getClass().getResource("/res/wait.png")));
    }

    /** Sets the search terms to find.
     * @param dataName The data name.
     * @param fileName The file name.
     * @param author The author.
     * @param editor The editor.
     * @param genre The genre.
     * @param dataSet The data set.
     * @param fileTypes The file-types-IDs-array.
     */
    public void setSearchTerms(String dataName, String fileName, String author, String editor, String genre, String dataSet, Integer[] fileTypes) {
        ((SearchDataPanel) panResults).setSearchTerms(dataName, fileName, author, editor, genre, dataSet, fileTypes);
    }

    /** Sets the provider to use.
     * @param pPrv The provider to use.
     */
    public void setProvider(AbstractProvider pPrv) {
        ((SearchDataPanel) panResults).setProvider(pPrv);
    }

    /** Sets the volume mounter to use.
     * @param pVmount The volume mounter to be used.
     */
    public void setVolumeMounter(VolumeMounter pVmount) {
        ((SearchDataPanel) panResults).setVolumeMounter(pVmount);
    }

    /** Sets the subpanel dispatcher to use.
     * @param pSpdisp The subpanel dispatcher
     */
    public void setSubPanelDispatcher(SubPanelDispatcher pSpdisp) {
        spdisp = pSpdisp;
        fillerID = spdisp.reserveKey();
        ((SearchDataPanel) panResults).setSubPanelDispatcher(spdisp, fillerID);
    }

    /** Shows the frame.
     */
    public void setVisible(boolean value) {
        if (value) {
            try {
                ((SearchDataPanel) panResults).showItems();
            } catch (DbException e) {
                System.out.println(e.getMessage());
            }
            this.setSize(640, 480);
        }
        super.setVisible(value);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        panResults = new SearchDataPanel();
        setTitle(java.util.ResourceBundle.getBundle("res/MediBundle").getString("Search_results"));
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        getContentPane().add(panResults, java.awt.BorderLayout.CENTER);
        pack();
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        spdisp.releaseKey(fillerID);
        this.setVisible(false);
        this.dispose();
    }

    private javax.swing.JPanel panResults;

    private Long fillerID;

    private SubPanelDispatcher spdisp;
}
