package newgen.presentation.cataloguing;

import newgen.presentation.NewGenMain;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.text.*;
import javax.swing.text.html.*;

/**
 *
 * @author  Administrator
 */
public class BrowserDialog extends javax.swing.JDialog implements javax.swing.event.HyperlinkListener, java.awt.event.MouseListener, javax.swing.event.CaretListener {

    /** Creates new form BrowserDialog */
    public BrowserDialog() {
        super();
        initComponents();
        newgen.presentation.NewGenMain.getAppletInstance().applyOrientation(this);
        this.setModal(true);
        this.setSize(800, 600);
        ep.setContentType("text/plain");
        try {
            this.ep.setPage("http://catalog.loc.gov/");
        } catch (Exception exp) {
            System.out.println(exp);
        }
        this.ep.addHyperlinkListener(this);
        this.ep.addCaretListener(this);
    }

    public String getText() {
        return this.retstr;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        ep = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        bImport = new javax.swing.JButton();
        bnClose = new javax.swing.JButton();
        setTitle(NewGenMain.getAppletInstance().getMyResource().getString("LibraryOfCongress"));
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        ep.setEditable(false);
        jScrollPane1.setViewportView(ep);
        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        bImport.setMnemonic('i');
        bImport.setText(NewGenMain.getAppletInstance().getMyResource().getString("Import"));
        bImport.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bImportActionPerformed(evt);
            }
        });
        jPanel1.add(bImport);
        bnClose.setMnemonic('e');
        bnClose.setText(NewGenMain.getAppletInstance().getMyResource().getString("Close"));
        bnClose.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCloseActionPerformed(evt);
            }
        });
        jPanel1.add(bnClose);
        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);
        pack();
    }

    private void bnCloseActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void bImportActionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("URL is: " + this.ep.getPage());
        java.awt.Component comp[] = ep.getComponents();
        for (int i = 0; i < comp.length; i++) {
            System.out.println(comp[i].getClass());
        }
        try {
            java.net.URLConnection urlcon = this.url.openConnection();
            urlcon.setDoOutput(true);
            System.out.println(urlcon.getContentType());
            System.out.println(urlcon.getContentEncoding());
        } catch (Exception exp) {
            System.out.println(exp);
        }
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        setVisible(false);
        dispose();
    }

    public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent e) {
        System.out.println("Present Hyperlink is: " + e.getURL());
        System.out.println("Present Hyperlink is: " + e.getEventType());
        if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
            ep = (javax.swing.JEditorPane) e.getSource();
            if (e instanceof HTMLFrameHyperlinkEvent) {
                HTMLFrameHyperlinkEvent evt = (HTMLFrameHyperlinkEvent) e;
                HTMLDocument doc = (HTMLDocument) ep.getDocument();
                doc.processHTMLFrameHyperlinkEvent(evt);
                System.out.println("here in if");
            } else {
                try {
                    System.out.println("in else");
                    ep.setPage(e.getURL());
                    java.awt.Component comp[] = ep.getComponents();
                    for (int i = 0; i < comp.length; i++) {
                        System.out.println(comp[i].getClass());
                    }
                    System.out.println("Component count is: " + ep.getComponentCount());
                    System.out.println("Page displayed is: " + ep.getPage());
                } catch (Throwable t) {
                    t.printStackTrace();
                }
            }
        }
    }

    public void mouseClicked(java.awt.event.MouseEvent e) {
        try {
            this.ep.setPage(this.url);
            java.net.URL urlloc = new java.net.URL("http://catalog.loc.gov/cgi-bin/Pwebrecon.cgi");
            if (this.url != null) {
                if (this.url.equals(urlloc)) {
                    java.net.URLConnection urlcon = this.url.openConnection();
                    urlcon.setDoOutput(true);
                    java.io.InputStream is = urlcon.getInputStream();
                    java.io.DataInputStream dis = new java.io.DataInputStream(is);
                    byte[] bx = new byte[10000];
                    dis.readFully(bx);
                }
            }
        } catch (Exception exp) {
            System.out.println(exp);
        }
    }

    public void mouseEntered(java.awt.event.MouseEvent e) {
    }

    public void mouseExited(java.awt.event.MouseEvent e) {
    }

    public void mousePressed(java.awt.event.MouseEvent e) {
    }

    public void mouseReleased(java.awt.event.MouseEvent e) {
    }

    public void caretUpdate(CaretEvent e) {
        java.net.URL myURL = ep.getPage();
        try {
        } catch (Exception exp) {
            System.out.println(exp);
        }
    }

    private javax.swing.JButton bImport;

    private javax.swing.JButton bnClose;

    private javax.swing.JEditorPane ep;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private java.net.URL url;

    private String retstr = "";
}

class MyEditorPane extends javax.swing.JEditorPane {

    public MyEditorPane() {
        super();
    }
}
