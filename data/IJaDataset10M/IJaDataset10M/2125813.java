package org.elzoido.desktop.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import net.iharder.dnd.FileDrop;

/**
 * @author  Michal Mocnak
 */
public class FirstStep extends Step {

    private static final String SHAKE_ICON = MainWindow.class.getResource("/org/elzoido/desktop/resources/shake.png").getPath();

    private static final String RED_ICON = MainWindow.class.getResource("/org/elzoido/desktop/resources/red.png").getPath();

    private static final String ELZOIDO_ICON = MainWindow.class.getResource("/org/elzoido/desktop/resources/elzoido_logo.png").getPath();

    private List<ActionListener> listeners = new ArrayList<ActionListener>();

    /** Creates new form FirstStep */
    public FirstStep() {
        initComponents();
        new FileDrop(dropArea, new FileDrop.Listener() {

            public void filesDropped(File[] arg0) {
                String s = arg0[0].toString();
                String type = null;
                if (s.substring(s.indexOf(".") + 1).equals("shk")) {
                    dropArea.setIcon(new ImageIcon(SHAKE_ICON));
                    dropArea.setText(arg0[0].getPath());
                    type = "shk";
                } else if (s.substring(s.indexOf(".") + 1).equals("red")) {
                    dropArea.setIcon(new ImageIcon(RED_ICON));
                    dropArea.setText(arg0[0].getPath());
                    type = "red";
                }
                if (null != type && null != getScript()) {
                    for (ActionListener l : listeners) {
                        l.actionPerformed(new ActionEvent(this, 0, type + ":" + getScript()));
                    }
                }
            }
        });
    }

    private String getScript() {
        return dropArea.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        dropArea = new javax.swing.JLabel();
        setMaximumSize(new java.awt.Dimension(600, 300));
        setMinimumSize(new java.awt.Dimension(600, 300));
        setPreferredSize(new java.awt.Dimension(600, 300));
        dropArea.setBackground(new java.awt.Color(255, 255, 255));
        dropArea.setFont(new java.awt.Font("DejaVu Sans", 1, 12));
        dropArea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dropArea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/elzoido/desktop/resources/elzoido_logo.png")));
        dropArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        dropArea.setFocusTraversalPolicyProvider(true);
        dropArea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dropArea.setMaximumSize(new java.awt.Dimension(600, 300));
        dropArea.setMinimumSize(new java.awt.Dimension(600, 300));
        dropArea.setOpaque(true);
        dropArea.setPreferredSize(new java.awt.Dimension(600, 300));
        dropArea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 600, Short.MAX_VALUE).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(dropArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 300, Short.MAX_VALUE).add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(dropArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)));
    }

    private javax.swing.JLabel dropArea;

    @Override
    public void activate(String[] data) {
    }

    @Override
    public void addActionListener(ActionListener listener) {
        listeners.add(listener);
    }
}
