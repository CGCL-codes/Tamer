package net.ponec.pekiline.core;

/**
 * In the debug mode it display to user a language property parameters
 * from top hierarchy komponent to down recursively.
 *
 * @author  Pavel Ponec
 * @version 1.1
 */
public class LanguageManagerDialog extends javax.swing.JDialog {

    /** Creates new LanguageManagerDialogDialog class.
     * @param basicContainer Parameter is default Root. It is used alse for PROPERTY file name.
     */
    public LanguageManagerDialog(java.awt.Container basicContainer, String properties, String warnings) {
        super((java.awt.Frame) basicContainer, true);
        initComponents();
        tProperties.setText(properties);
        tWarnings.setText(warnings);
        setVisible(true);
    }

    /**  For GUI test only. Creates new form LangKeyTool for an Frame.
     */
    private LanguageManagerDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bClose = new javax.swing.JButton();
        bConvert = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        spProperties = new javax.swing.JScrollPane();
        tProperties = new javax.swing.JTextArea();
        spWarnings = new javax.swing.JScrollPane();
        tWarnings = new javax.swing.JTextArea();
        getContentPane().setLayout(new java.awt.GridBagLayout());
        setTitle("Language Manager");
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        bClose.setMnemonic('C');
        bClose.setText("Close");
        bClose.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 2);
        getContentPane().add(bClose, gridBagConstraints);
        bConvert.setText("To ASCII");
        bConvert.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConvertActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 5, 0);
        getContentPane().add(bConvert, gridBagConstraints);
        tProperties.setText("This is only test");
        spProperties.setViewportView(tProperties);
        jTabbedPane1.addTab("Properties", null, spProperties, "");
        spWarnings.setViewportView(tWarnings);
        jTabbedPane1.addTab("Warnings", null, spWarnings, "");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jTabbedPane1, gridBagConstraints);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 400) / 2, (screenSize.height - 300) / 2, 400, 300);
    }

    private void bConvertActionPerformed(java.awt.event.ActionEvent evt) {
        String s = tProperties.getText();
        String o = null;
        StringBuffer sb = new StringBuffer(s.length() * 2);
        int i, j;
        for (i = 0; i < s.length(); i++) {
            if (s.charAt(i) < 'Â€') sb.append(s.charAt(i)); else {
                sb.append("\\u");
                o = Integer.toHexString((int) s.charAt(i));
                for (j = 4 - o.length(); j > 0; j--) sb.append("0");
                sb.append(o);
            }
        }
        tProperties.setText(sb.toString());
    }

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {
        closeDialog(null);
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        setVisible(false);
        dispose();
    }

    private javax.swing.JButton bClose;

    private javax.swing.JButton bConvert;

    private javax.swing.JTabbedPane jTabbedPane1;

    private javax.swing.JScrollPane spProperties;

    private javax.swing.JScrollPane spWarnings;

    private javax.swing.JTextArea tProperties;

    private javax.swing.JTextArea tWarnings;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new LanguageManagerDialog((java.awt.Frame) null);
        java.lang.System.err.println("THE END ! " + LanguageManagerDialog.class.getName());
        System.exit(0);
    }
}
