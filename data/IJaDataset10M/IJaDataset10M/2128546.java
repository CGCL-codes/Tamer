package com.iclotho.eshop.domain.po;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RefundmentCriteria {

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public RefundmentCriteria() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    protected RefundmentCriteria(RefundmentCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_refundment
     *
     * @ibatorgenerated Sun Mar 15 01:52:13 VET 2009
     */
    public static class Criteria {

        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTidIsNull() {
            addCriterion("TID is null");
            return this;
        }

        public Criteria andTidIsNotNull() {
            addCriterion("TID is not null");
            return this;
        }

        public Criteria andTidEqualTo(Long value) {
            addCriterion("TID =", value, "tid");
            return this;
        }

        public Criteria andTidNotEqualTo(Long value) {
            addCriterion("TID <>", value, "tid");
            return this;
        }

        public Criteria andTidGreaterThan(Long value) {
            addCriterion("TID >", value, "tid");
            return this;
        }

        public Criteria andTidGreaterThanOrEqualTo(Long value) {
            addCriterion("TID >=", value, "tid");
            return this;
        }

        public Criteria andTidLessThan(Long value) {
            addCriterion("TID <", value, "tid");
            return this;
        }

        public Criteria andTidLessThanOrEqualTo(Long value) {
            addCriterion("TID <=", value, "tid");
            return this;
        }

        public Criteria andTidIn(List values) {
            addCriterion("TID in", values, "tid");
            return this;
        }

        public Criteria andTidNotIn(List values) {
            addCriterion("TID not in", values, "tid");
            return this;
        }

        public Criteria andTidBetween(Long value1, Long value2) {
            addCriterion("TID between", value1, value2, "tid");
            return this;
        }

        public Criteria andTidNotBetween(Long value1, Long value2) {
            addCriterion("TID not between", value1, value2, "tid");
            return this;
        }

        public Criteria andOrderIdIsNull() {
            addCriterion("ORDER_ID is null");
            return this;
        }

        public Criteria andOrderIdIsNotNull() {
            addCriterion("ORDER_ID is not null");
            return this;
        }

        public Criteria andOrderIdEqualTo(Long value) {
            addCriterion("ORDER_ID =", value, "orderId");
            return this;
        }

        public Criteria andOrderIdNotEqualTo(Long value) {
            addCriterion("ORDER_ID <>", value, "orderId");
            return this;
        }

        public Criteria andOrderIdGreaterThan(Long value) {
            addCriterion("ORDER_ID >", value, "orderId");
            return this;
        }

        public Criteria andOrderIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ORDER_ID >=", value, "orderId");
            return this;
        }

        public Criteria andOrderIdLessThan(Long value) {
            addCriterion("ORDER_ID <", value, "orderId");
            return this;
        }

        public Criteria andOrderIdLessThanOrEqualTo(Long value) {
            addCriterion("ORDER_ID <=", value, "orderId");
            return this;
        }

        public Criteria andOrderIdIn(List values) {
            addCriterion("ORDER_ID in", values, "orderId");
            return this;
        }

        public Criteria andOrderIdNotIn(List values) {
            addCriterion("ORDER_ID not in", values, "orderId");
            return this;
        }

        public Criteria andOrderIdBetween(Long value1, Long value2) {
            addCriterion("ORDER_ID between", value1, value2, "orderId");
            return this;
        }

        public Criteria andOrderIdNotBetween(Long value1, Long value2) {
            addCriterion("ORDER_ID not between", value1, value2, "orderId");
            return this;
        }

        public Criteria andMerchantIdIsNull() {
            addCriterion("MERCHANT_ID is null");
            return this;
        }

        public Criteria andMerchantIdIsNotNull() {
            addCriterion("MERCHANT_ID is not null");
            return this;
        }

        public Criteria andMerchantIdEqualTo(String value) {
            addCriterion("MERCHANT_ID =", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdNotEqualTo(String value) {
            addCriterion("MERCHANT_ID <>", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdGreaterThan(String value) {
            addCriterion("MERCHANT_ID >", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdGreaterThanOrEqualTo(String value) {
            addCriterion("MERCHANT_ID >=", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdLessThan(String value) {
            addCriterion("MERCHANT_ID <", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdLessThanOrEqualTo(String value) {
            addCriterion("MERCHANT_ID <=", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdLike(String value) {
            addCriterion("MERCHANT_ID like", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdNotLike(String value) {
            addCriterion("MERCHANT_ID not like", value, "merchantId");
            return this;
        }

        public Criteria andMerchantIdIn(List values) {
            addCriterion("MERCHANT_ID in", values, "merchantId");
            return this;
        }

        public Criteria andMerchantIdNotIn(List values) {
            addCriterion("MERCHANT_ID not in", values, "merchantId");
            return this;
        }

        public Criteria andMerchantIdBetween(String value1, String value2) {
            addCriterion("MERCHANT_ID between", value1, value2, "merchantId");
            return this;
        }

        public Criteria andMerchantIdNotBetween(String value1, String value2) {
            addCriterion("MERCHANT_ID not between", value1, value2, "merchantId");
            return this;
        }

        public Criteria andOperatorIdIsNull() {
            addCriterion("OPERATOR_ID is null");
            return this;
        }

        public Criteria andOperatorIdIsNotNull() {
            addCriterion("OPERATOR_ID is not null");
            return this;
        }

        public Criteria andOperatorIdEqualTo(Long value) {
            addCriterion("OPERATOR_ID =", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdNotEqualTo(Long value) {
            addCriterion("OPERATOR_ID <>", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdGreaterThan(Long value) {
            addCriterion("OPERATOR_ID >", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdGreaterThanOrEqualTo(Long value) {
            addCriterion("OPERATOR_ID >=", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdLessThan(Long value) {
            addCriterion("OPERATOR_ID <", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdLessThanOrEqualTo(Long value) {
            addCriterion("OPERATOR_ID <=", value, "operatorId");
            return this;
        }

        public Criteria andOperatorIdIn(List values) {
            addCriterion("OPERATOR_ID in", values, "operatorId");
            return this;
        }

        public Criteria andOperatorIdNotIn(List values) {
            addCriterion("OPERATOR_ID not in", values, "operatorId");
            return this;
        }

        public Criteria andOperatorIdBetween(Long value1, Long value2) {
            addCriterion("OPERATOR_ID between", value1, value2, "operatorId");
            return this;
        }

        public Criteria andOperatorIdNotBetween(Long value1, Long value2) {
            addCriterion("OPERATOR_ID not between", value1, value2, "operatorId");
            return this;
        }

        public Criteria andRefundDateIsNull() {
            addCriterion("REFUND_DATE is null");
            return this;
        }

        public Criteria andRefundDateIsNotNull() {
            addCriterion("REFUND_DATE is not null");
            return this;
        }

        public Criteria andRefundDateEqualTo(String value) {
            addCriterion("REFUND_DATE =", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateNotEqualTo(String value) {
            addCriterion("REFUND_DATE <>", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateGreaterThan(String value) {
            addCriterion("REFUND_DATE >", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateGreaterThanOrEqualTo(String value) {
            addCriterion("REFUND_DATE >=", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateLessThan(String value) {
            addCriterion("REFUND_DATE <", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateLessThanOrEqualTo(String value) {
            addCriterion("REFUND_DATE <=", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateLike(String value) {
            addCriterion("REFUND_DATE like", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateNotLike(String value) {
            addCriterion("REFUND_DATE not like", value, "refundDate");
            return this;
        }

        public Criteria andRefundDateIn(List values) {
            addCriterion("REFUND_DATE in", values, "refundDate");
            return this;
        }

        public Criteria andRefundDateNotIn(List values) {
            addCriterion("REFUND_DATE not in", values, "refundDate");
            return this;
        }

        public Criteria andRefundDateBetween(String value1, String value2) {
            addCriterion("REFUND_DATE between", value1, value2, "refundDate");
            return this;
        }

        public Criteria andRefundDateNotBetween(String value1, String value2) {
            addCriterion("REFUND_DATE not between", value1, value2, "refundDate");
            return this;
        }

        public Criteria andTransStatusIsNull() {
            addCriterion("TRANS_STATUS is null");
            return this;
        }

        public Criteria andTransStatusIsNotNull() {
            addCriterion("TRANS_STATUS is not null");
            return this;
        }

        public Criteria andTransStatusEqualTo(Integer value) {
            addCriterion("TRANS_STATUS =", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusNotEqualTo(Integer value) {
            addCriterion("TRANS_STATUS <>", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusGreaterThan(Integer value) {
            addCriterion("TRANS_STATUS >", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("TRANS_STATUS >=", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusLessThan(Integer value) {
            addCriterion("TRANS_STATUS <", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusLessThanOrEqualTo(Integer value) {
            addCriterion("TRANS_STATUS <=", value, "transStatus");
            return this;
        }

        public Criteria andTransStatusIn(List values) {
            addCriterion("TRANS_STATUS in", values, "transStatus");
            return this;
        }

        public Criteria andTransStatusNotIn(List values) {
            addCriterion("TRANS_STATUS not in", values, "transStatus");
            return this;
        }

        public Criteria andTransStatusBetween(Integer value1, Integer value2) {
            addCriterion("TRANS_STATUS between", value1, value2, "transStatus");
            return this;
        }

        public Criteria andTransStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("TRANS_STATUS not between", value1, value2, "transStatus");
            return this;
        }

        public Criteria andCommentsIsNull() {
            addCriterion("COMMENTS is null");
            return this;
        }

        public Criteria andCommentsIsNotNull() {
            addCriterion("COMMENTS is not null");
            return this;
        }

        public Criteria andCommentsEqualTo(String value) {
            addCriterion("COMMENTS =", value, "comments");
            return this;
        }

        public Criteria andCommentsNotEqualTo(String value) {
            addCriterion("COMMENTS <>", value, "comments");
            return this;
        }

        public Criteria andCommentsGreaterThan(String value) {
            addCriterion("COMMENTS >", value, "comments");
            return this;
        }

        public Criteria andCommentsGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENTS >=", value, "comments");
            return this;
        }

        public Criteria andCommentsLessThan(String value) {
            addCriterion("COMMENTS <", value, "comments");
            return this;
        }

        public Criteria andCommentsLessThanOrEqualTo(String value) {
            addCriterion("COMMENTS <=", value, "comments");
            return this;
        }

        public Criteria andCommentsLike(String value) {
            addCriterion("COMMENTS like", value, "comments");
            return this;
        }

        public Criteria andCommentsNotLike(String value) {
            addCriterion("COMMENTS not like", value, "comments");
            return this;
        }

        public Criteria andCommentsIn(List values) {
            addCriterion("COMMENTS in", values, "comments");
            return this;
        }

        public Criteria andCommentsNotIn(List values) {
            addCriterion("COMMENTS not in", values, "comments");
            return this;
        }

        public Criteria andCommentsBetween(String value1, String value2) {
            addCriterion("COMMENTS between", value1, value2, "comments");
            return this;
        }

        public Criteria andCommentsNotBetween(String value1, String value2) {
            addCriterion("COMMENTS not between", value1, value2, "comments");
            return this;
        }
    }
}
