package totalpos;

import java.sql.SQLException;

/**
 *
 * @author Saúl Hidalgo
 */
public class ChangePassword extends javax.swing.JDialog {

    private User user;

    private Login parent;

    protected boolean isOk = false;

    /** Creates new form ChangePassword */
    protected ChangePassword(Login parent, boolean modal, User u) {
        super(parent, modal);
        initComponents();
        this.user = u;
        this.parent = parent;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        newPasswordText = new javax.swing.JPasswordField();
        newPasswordText2 = new javax.swing.JPasswordField();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Constants.appName);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {

            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        jLabel2.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg")));
        jLabel2.setText("Contraseña Nueva");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setName("jLabel2");
        jLabel3.setFont(new java.awt.Font("Courier New", 0, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/totalpos/resources/Etiquetas 2x.jpg")));
        jLabel3.setText("Contraseña nueva (Repetición)");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setName("jLabel3");
        newPasswordText.setName("newPasswordText");
        newPasswordText.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPasswordTextKeyPressed(evt);
            }
        });
        newPasswordText2.setName("newPasswordText2");
        newPasswordText2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPasswordText2ActionPerformed(evt);
            }
        });
        newPasswordText2.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPasswordText2KeyPressed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(newPasswordText2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE).addComponent(newPasswordText, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(newPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(newPasswordText2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        pack();
    }

    private void newPasswordText2ActionPerformed(java.awt.event.ActionEvent evt) {
        changePasswordNow();
    }

    private void newPasswordText2KeyPressed(java.awt.event.KeyEvent evt) {
    }

    private void newPasswordTextKeyPressed(java.awt.event.KeyEvent evt) {
    }

    private void formMouseMoved(java.awt.event.MouseEvent evt) {
    }

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JPasswordField newPasswordText;

    private javax.swing.JPasswordField newPasswordText2;

    private void changePasswordNow() {
        try {
            if (!newPasswordText.getText().trim().equals(newPasswordText2.getText().trim())) {
                MessageBox msb = new MessageBox(MessageBox.SGN_WARNING, "Las contraseñas no son iguales.");
                msb.show(this);
                return;
            }
            ConnectionDrivers.setPassword(user.getLogin(), Shared.hashPassword(newPasswordText.getText()));
            ConnectionDrivers.mustntChangePassword(user.getLogin());
            isOk = true;
            MessageBox msg = new MessageBox(MessageBox.SGN_SUCCESS, "Contraseña cambiada satisfactoriamente");
            msg.show(this);
            this.setVisible(false);
            dispose();
        } catch (SQLException ex) {
            MessageBox msg = new MessageBox(MessageBox.SGN_DANGER, "Problemas con la base de datos.", ex);
            msg.show(this);
        } catch (Exception ex) {
            MessageBox msb = new MessageBox(MessageBox.SGN_IMPORTANT, ex.getMessage(), ex);
            msb.show(this);
        }
    }
}
