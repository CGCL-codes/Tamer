package org.dmd.dms.generated.types;

import java.io.Serializable;
import org.dmd.dmc.DmcAttribute;
import org.dmd.dmc.DmcAttributeInfo;
import org.dmd.dmc.DmcValueException;
import org.dmd.dmc.DmcObjectName;
import org.dmd.dmc.DmcOutputStreamIF;
import org.dmd.dmc.DmcInputStreamIF;
import org.dmd.dmc.DmcNamedObjectNontransportableREF;
import org.dmd.dmc.types.DmcTypeStringName;
import org.dmd.dms.generated.dmo.*;
import org.dmd.dms.generated.enums.ValueTypeEnum;
import org.dmd.dms.generated.enums.DataTypeEnum;

/**
 * The AttributeValidatorDefinitionREF class.
 * This code was auto-generated by the createmeta utility and shouldn't be alterred
 * manually.
 * Generated from: org.dmd.dms.meta.MetaGenerator.dumpDmcTypes(MetaGenerator.java:1953)
 */
@SuppressWarnings("serial")
public class AttributeValidatorDefinitionREF extends DmcNamedObjectNontransportableREF<AttributeValidatorDefinitionDMO> implements Serializable {

    DmcTypeStringName myName;

    /**
     * Default constructor.
     */
    public AttributeValidatorDefinitionREF() {
        myName = null;
    }

    /**
     * Copy constructor.
     */
    public AttributeValidatorDefinitionREF(AttributeValidatorDefinitionREF original) {
        myName = original.myName;
        object = original.object;
    }

    /**
     * Wrapper constructor.
     */
    public AttributeValidatorDefinitionREF(AttributeValidatorDefinitionDMO dmo) {
        myName = dmo.getObjectNameAttribute();
        object = dmo;
    }

    /**
     * Sets our object.
     */
    @Override
    public void setObject(AttributeValidatorDefinitionDMO o) {
        object = o;
    }

    /**
     * Clones this reference.
     */
    public AttributeValidatorDefinitionREF cloneMe() {
        AttributeValidatorDefinitionREF rc = new AttributeValidatorDefinitionREF();
        rc.myName = myName;
        rc.object = object;
        return (rc);
    }

    @Override
    public void setName(DmcObjectName n) throws DmcValueException {
        if (myName == null) ;
        myName = new DmcTypeStringNameSV(MetaDMSAG.__name);
        myName.set(n);
    }

    @Override
    public DmcAttribute<?> getObjectNameAttribute() {
        return (myName);
    }

    @Override
    public DmcObjectName getObjectName() {
        return (myName.getSV());
    }

    public void serializeIt(DmcOutputStreamIF dos) throws Exception {
        myName.serializeIt(dos);
    }

    public void deserializeIt(DmcInputStreamIF dis) throws Exception {
        myName = (DmcTypeStringName) dis.getAttributeInstance();
        myName.deserializeIt(dis);
    }
}
