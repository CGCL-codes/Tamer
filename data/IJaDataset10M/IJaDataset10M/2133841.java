package br.ufal.ic.forbile.infra.emathema.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import br.ufal.ic.forbile.infra.emathema.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/emathema.owl#KnownledgeState
 *
 * @version generated on Wed Sep 27 02:26:47 GMT-03:00 2006
 */
public class DefaultKnownledgeState extends DefaultTHINGInferredLearnerModelData implements KnownledgeState {

    public DefaultKnownledgeState(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }

    public DefaultKnownledgeState() {
    }

    public Curriculum getHas_Curriculum() {
        return (Curriculum) getPropertyValueAs(getHas_CurriculumProperty(), Curriculum.class);
    }

    public RDFProperty getHas_CurriculumProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#has_Curriculum";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasHas_Curriculum() {
        return getPropertyValueCount(getHas_CurriculumProperty()) > 0;
    }

    public void setHas_Curriculum(Curriculum newHas_Curriculum) {
        setPropertyValue(getHas_CurriculumProperty(), newHas_Curriculum);
    }

    public FamiliarityKnowledgeAssessment getIsComposedBy_FamiliarityKnowledge() {
        return (FamiliarityKnowledgeAssessment) getPropertyValueAs(getIsComposedBy_FamiliarityKnowledgeProperty(), FamiliarityKnowledgeAssessment.class);
    }

    public RDFProperty getIsComposedBy_FamiliarityKnowledgeProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_FamiliarityKnowledge";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_FamiliarityKnowledge() {
        return getPropertyValueCount(getIsComposedBy_FamiliarityKnowledgeProperty()) > 0;
    }

    public void setIsComposedBy_FamiliarityKnowledge(FamiliarityKnowledgeAssessment newIsComposedBy_FamiliarityKnowledge) {
        setPropertyValue(getIsComposedBy_FamiliarityKnowledgeProperty(), newIsComposedBy_FamiliarityKnowledge);
    }

    public KnowledgeCovarageAssessment getIsComposedBy_KnowledgeCovarage() {
        return (KnowledgeCovarageAssessment) getPropertyValueAs(getIsComposedBy_KnowledgeCovarageProperty(), KnowledgeCovarageAssessment.class);
    }

    public RDFProperty getIsComposedBy_KnowledgeCovarageProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_KnowledgeCovarage";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_KnowledgeCovarage() {
        return getPropertyValueCount(getIsComposedBy_KnowledgeCovarageProperty()) > 0;
    }

    public void setIsComposedBy_KnowledgeCovarage(KnowledgeCovarageAssessment newIsComposedBy_KnowledgeCovarage) {
        setPropertyValue(getIsComposedBy_KnowledgeCovarageProperty(), newIsComposedBy_KnowledgeCovarage);
    }

    public knowledgeLevelAssessment getIsComposedBy_KnowledgeLevel() {
        return (knowledgeLevelAssessment) getPropertyValueAs(getIsComposedBy_KnowledgeLevelProperty(), knowledgeLevelAssessment.class);
    }

    public RDFProperty getIsComposedBy_KnowledgeLevelProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_KnowledgeLevel";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_KnowledgeLevel() {
        return getPropertyValueCount(getIsComposedBy_KnowledgeLevelProperty()) > 0;
    }

    public void setIsComposedBy_KnowledgeLevel(knowledgeLevelAssessment newIsComposedBy_KnowledgeLevel) {
        setPropertyValue(getIsComposedBy_KnowledgeLevelProperty(), newIsComposedBy_KnowledgeLevel);
    }

    public ProceduralKnowledgeAssessment getIsComposedBy_MasteryDegree() {
        return (ProceduralKnowledgeAssessment) getPropertyValueAs(getIsComposedBy_MasteryDegreeProperty(), ProceduralKnowledgeAssessment.class);
    }

    public RDFProperty getIsComposedBy_MasteryDegreeProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_MasteryDegree";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_MasteryDegree() {
        return getPropertyValueCount(getIsComposedBy_MasteryDegreeProperty()) > 0;
    }

    public void setIsComposedBy_MasteryDegree(ProceduralKnowledgeAssessment newIsComposedBy_MasteryDegree) {
        setPropertyValue(getIsComposedBy_MasteryDegreeProperty(), newIsComposedBy_MasteryDegree);
    }

    public Object getLevelKnowledge() {
        return (Object) getPropertyValue(getLevelKnowledgeProperty());
    }

    public RDFProperty getLevelKnowledgeProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#levelKnowledge";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasLevelKnowledge() {
        return getPropertyValueCount(getLevelKnowledgeProperty()) > 0;
    }

    public void setLevelKnowledge(Object newLevelKnowledge) {
        setPropertyValue(getLevelKnowledgeProperty(), newLevelKnowledge);
    }

    public float getRate() {
        return getPropertyValueLiteral(getRateProperty()).getFloat();
    }

    public RDFProperty getRateProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#rate";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasRate() {
        return getPropertyValueCount(getRateProperty()) > 0;
    }

    public void setRate(float newRate) {
        setPropertyValue(getRateProperty(), new Float(newRate));
    }
}
