package br.ufal.ic.forbile.infra.emathema.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import java.util.*;
import br.ufal.ic.forbile.infra.emathema.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/emathema.owl#CognitiveInformation
 *
 * @version generated on Wed Sep 27 02:26:48 GMT-03:00 2006
 */
public class DefaultCognitiveInformation extends DefaultDymamicInformation implements CognitiveInformation {

    public DefaultCognitiveInformation(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }

    public DefaultCognitiveInformation() {
    }

    public InferredInformation getIsComposedBy_InferredInformation() {
        return (InferredInformation) getPropertyValueAs(getIsComposedBy_InferredInformationProperty(), InferredInformation.class);
    }

    public RDFProperty getIsComposedBy_InferredInformationProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_InferredInformation";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_InferredInformation() {
        return getPropertyValueCount(getIsComposedBy_InferredInformationProperty()) > 0;
    }

    public void setIsComposedBy_InferredInformation(InferredInformation newIsComposedBy_InferredInformation) {
        setPropertyValue(getIsComposedBy_InferredInformationProperty(), newIsComposedBy_InferredInformation);
    }

    public InteractionLearnerData getIsComposedBy_InteractionData() {
        return (InteractionLearnerData) getPropertyValueAs(getIsComposedBy_InteractionDataProperty(), InteractionLearnerData.class);
    }

    public RDFProperty getIsComposedBy_InteractionDataProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_InteractionData";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_InteractionData() {
        return getPropertyValueCount(getIsComposedBy_InteractionDataProperty()) > 0;
    }

    public void setIsComposedBy_InteractionData(InteractionLearnerData newIsComposedBy_InteractionData) {
        setPropertyValue(getIsComposedBy_InteractionDataProperty(), newIsComposedBy_InteractionData);
    }

    public Collection getIsComposedBy_LearningGoal() {
        return getPropertyValuesAs(getIsComposedBy_LearningGoalProperty(), LearningGoal.class);
    }

    public RDFProperty getIsComposedBy_LearningGoalProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_LearningGoal";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_LearningGoal() {
        return getPropertyValueCount(getIsComposedBy_LearningGoalProperty()) > 0;
    }

    public Iterator listIsComposedBy_LearningGoal() {
        return listPropertyValuesAs(getIsComposedBy_LearningGoalProperty(), LearningGoal.class);
    }

    public void addIsComposedBy_LearningGoal(LearningGoal newIsComposedBy_LearningGoal) {
        addPropertyValue(getIsComposedBy_LearningGoalProperty(), newIsComposedBy_LearningGoal);
    }

    public void removeIsComposedBy_LearningGoal(LearningGoal oldIsComposedBy_LearningGoal) {
        removePropertyValue(getIsComposedBy_LearningGoalProperty(), oldIsComposedBy_LearningGoal);
    }

    public void setIsComposedBy_LearningGoal(Collection newIsComposedBy_LearningGoal) {
        setPropertyValues(getIsComposedBy_LearningGoalProperty(), newIsComposedBy_LearningGoal);
    }

    public ProcessLearningPhase getIsComposedBy_ProcessLearningPhase() {
        return (ProcessLearningPhase) getPropertyValueAs(getIsComposedBy_ProcessLearningPhaseProperty(), ProcessLearningPhase.class);
    }

    public RDFProperty getIsComposedBy_ProcessLearningPhaseProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_ProcessLearningPhase";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_ProcessLearningPhase() {
        return getPropertyValueCount(getIsComposedBy_ProcessLearningPhaseProperty()) > 0;
    }

    public void setIsComposedBy_ProcessLearningPhase(ProcessLearningPhase newIsComposedBy_ProcessLearningPhase) {
        setPropertyValue(getIsComposedBy_ProcessLearningPhaseProperty(), newIsComposedBy_ProcessLearningPhase);
    }
}
