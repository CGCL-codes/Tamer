package org.didicero.base.entity;

/**
 * Autogenerated POJO EJB class for ProjectRelease containing the 
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * <p>
 * A Release is a Version, that has been released to public or a
 * group.
 * </p>
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "PROJECT_RELEASE")
@javax.persistence.NamedQuery(name = "ProjectRelease.findAll", query = "select projectRelease from ProjectRelease AS projectRelease")
public class ProjectRelease extends ModelObject implements java.io.Serializable, Comparable<ProjectRelease> {

    private static final long serialVersionUID = 6559753310799385734L;

    private java.lang.Long id;

    private org.didicero.base.entity.Version releaseVersion;

    /**
     * Default empty constructor
     */
    public ProjectRelease() {
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param releaseVersion Value for the releaseVersion relation
     */
    public ProjectRelease(org.didicero.base.entity.Version releaseVersion) {
        setReleaseVersion(releaseVersion);
    }

    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getId() {
        return id;
    }

    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        firePropertyChange("id", this.id, this.id = value);
    }

    /**
     * Get the releaseVersion
     *
     * @return org.didicero.base.entity.Version
     */
    @javax.persistence.OneToOne(mappedBy = "versionedRelease")
    public org.didicero.base.entity.Version getReleaseVersion() {
        return this.releaseVersion;
    }

    /**
    * Set the releaseVersion
    *
    * @param releaseVersion
    */
    public void setReleaseVersion(org.didicero.base.entity.Version releaseVersion) {
        this.releaseVersion = releaseVersion;
    }

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof ProjectRelease)) {
            return false;
        }
        final ProjectRelease that = (ProjectRelease) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("ProjectRelease(=");
        sb.append("id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(ProjectRelease o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
        }
        return cmp;
    }
}
