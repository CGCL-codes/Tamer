package sts.gui.starts;

import sts.gui.*;
import sts.gui.bindings.*;
import sts.hibernate.*;
import sts.framework.manager.*;
import kellinwood.meshi.autocomplete.*;
import kellinwood.meshi.form.*;
import kellinwood.meshi.manager.*;
import kellinwood.hibernate_util.*;
import net.sf.hibernate.HibernateException;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author  ken
 */
public class EditStartDialog extends javax.swing.JDialog implements AutocompleteListener {

    StartBindings bindings;

    JPanel fieldsPanel;

    /** Creates new form EditStartDialog */
    public EditStartDialog(java.awt.Frame parent, Start s) {
        super(parent, true);
        Start start = new Start();
        try {
            MFCopyHelper.copy(s, start);
        } catch (Exception x) {
            ErrorDialog.handle(x);
        }
        bindings = new StartBindings(start);
        bindings.setExceptionHandler(ErrorDialog.onlyInstance());
        List fields = new ArrayList();
        JTextField fleetNameField = new JTextField(start.getFleet().getName());
        fleetNameField.setEnabled(false);
        fleetNameField.putClientProperty(AbstractBindings.EDITOR_DISPLAY_PROPERTY_NAME, "Fleet");
        fields.add(fleetNameField);
        fields.add(bindings.getScheduledStartEditor());
        fields.add(bindings.getActualStartEditor());
        fields.add(bindings.getCourseNameEditor());
        fields.add(bindings.getCourseLengthEditor());
        bindings.getCourseNameEditor().addAutocompleteListener(this);
        fieldsPanel = new SpringCompactGridPanel(fields);
        initComponents();
        ScreenLocationManager.configureDialog(this, 400, 300);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        contentPanel = new javax.swing.JPanel();
        formPanel = fieldsPanel;
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Start");
        contentPanel.setLayout(new java.awt.BorderLayout());
        contentPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
        contentPanel.add(formPanel, java.awt.BorderLayout.NORTH);
        getContentPane().add(contentPanel, java.awt.BorderLayout.CENTER);
        buttonPanel.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(10, 10, 10, 10)));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);
        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);
        pack();
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
    }

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            StartManager.onlyInstance().update(bindings.getEntity());
        } catch (IllegalArgumentException x) {
            JOptionPane.showMessageDialog(EditStartDialog.this, x.getMessage());
        } catch (MissingRequiredValueException x) {
            JOptionPane.showMessageDialog(EditStartDialog.this, "Missing required value: " + x.getMessage());
        } catch (InvalidValueFormatException x) {
            JOptionPane.showMessageDialog(EditStartDialog.this, "Invalid format for value: " + x.getMessage());
        } catch (Exception x) {
            ErrorDialog.handle(x);
        }
        setVisible(false);
    }

    public void autocompleted(AutocompleteEvent evt) {
        if (evt.getSelected() instanceof Course) {
            Course c = (Course) evt.getSelected();
            bindings.getCourseLengthEditor().setText(c.getCourseLength().toString());
        }
    }

    private javax.swing.JPanel buttonPanel;

    private javax.swing.JButton cancelButton;

    private javax.swing.JPanel contentPanel;

    private javax.swing.JPanel formPanel;

    private javax.swing.JButton okButton;
}
