package at.arcsmed.mpower.communicator.soap.call.client.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.1 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "SIPCallService", targetNamespace = "http://server.call.soap.communicator.mpower.arcsmed.at/", wsdlLocation = "file:/Arbeit/MPower/Communicator/implementation/soap/call/client/SIPCallService.wsdl")
public class SIPCallService_Service extends Service {

    private static final URL SIPCALLSERVICE_WSDL_LOCATION;

    static {
        URL url = null;
        try {
            url = new URL("file:/Arbeit/MPower/Communicator/implementation/soap/call/client/SIPCallService.wsdl");
        } catch (MalformedURLException e) {
            e.printStackTrace();
        }
        SIPCALLSERVICE_WSDL_LOCATION = url;
    }

    public SIPCallService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SIPCallService_Service() {
        super(SIPCALLSERVICE_WSDL_LOCATION, new QName("http://server.call.soap.communicator.mpower.arcsmed.at/", "SIPCallService"));
    }

    /**
     * 
     * @return
     *     returns SIPCallService
     */
    @WebEndpoint(name = "SIPCallServicePort")
    public SIPCallService getSIPCallServicePort() {
        return (SIPCallService) super.getPort(new QName("http://server.call.soap.communicator.mpower.arcsmed.at/", "SIPCallServicePort"), SIPCallService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SIPCallService
     */
    @WebEndpoint(name = "SIPCallServicePort")
    public SIPCallService getSIPCallServicePort(WebServiceFeature... features) {
        return (SIPCallService) super.getPort(new QName("http://server.call.soap.communicator.mpower.arcsmed.at/", "SIPCallServicePort"), SIPCallService.class, features);
    }
}
