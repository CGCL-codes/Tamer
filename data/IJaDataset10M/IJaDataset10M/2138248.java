package fr.tango.tangopanels.classpanels.undulator;

import fr.esrf.tangoatk.core.AttributeList;
import fr.esrf.tangoatk.core.ConnectionException;
import fr.esrf.tangoatk.core.IEntity;
import fr.esrf.tangoatk.core.IEntityFilter;
import fr.esrf.tangoatk.widget.attribute.ScalarListViewer;
import fr.esrf.tangoatk.widget.util.ErrorHistory;
import fr.esrf.tangoatk.widget.util.ErrorPopup;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.border.TitledBorder;

/**
 *
 * @author poncet
 */
public class SimpleMouvablePanel extends javax.swing.JPanel {

    private String panelDevName = null;

    private String mvName = null;

    private AttributeList allAtts = null;

    private AttributeList operatorAtts = null;

    private ErrorHistory errH = null;

    private boolean expertMode = false;

    /** Creates new form SimpleMouvablePanel */
    public SimpleMouvablePanel() {
        initComponents();
    }

    public SimpleMouvablePanel(String deviceName, String mouvableName, ErrorHistory errw) {
        initComponents();
        panelDevName = deviceName;
        mvName = mouvableName;
        if (errw == null) {
            errH = new ErrorHistory();
        } else errH = errw;
        allAtts = new AttributeList();
        allAtts.addErrorListener(errH);
        allAtts.addSetErrorListener(errH);
        allAtts.addSetErrorListener(ErrorPopup.getInstance());
        operatorAtts = new AttributeList();
        operatorAtts.setFilter(new IEntityFilter() {

            public boolean keep(IEntity entity) {
                return (entity.isOperator());
            }
        });
        connectToMouvableAttributes();
        if (!allAtts.isEmpty()) {
            operatorSLV.setModel(operatorAtts);
            expertSLV.setModel(allAtts);
            if (expertMode) {
                operatorSLV.setVisible(false);
                expertSLV.setVisible(true);
            } else {
                operatorSLV.setVisible(true);
                expertSLV.setVisible(false);
            }
            setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), mvName));
            TitledBorder tb = (TitledBorder) getBorder();
            tb.setTitleFont((new Font("Dialog", 1, 12)));
        }
        allAtts.startRefresher();
        validateTree();
    }

    public SimpleMouvablePanel(String deviceName, String mouvableName) {
        this(deviceName, mouvableName, null);
    }

    boolean isExpertMode() {
        return expertMode;
    }

    void setExpertMode(boolean mode) {
        if (mode == expertMode) return;
        expertMode = mode;
        if (expertMode) {
            operatorSLV.setVisible(false);
            expertSLV.setVisible(true);
        } else {
            operatorSLV.setVisible(true);
            expertSLV.setVisible(false);
        }
        this.revalidate();
    }

    void endMouvablePanel() {
        allAtts.stopRefresher();
        expertSLV.setModel(null);
        operatorSLV.setModel(null);
        allAtts.clear();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        operatorSLV = new fr.esrf.tangoatk.widget.attribute.ScalarListViewer();
        expertSLV = new fr.esrf.tangoatk.widget.attribute.ScalarListViewer();
        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "mouvable"));
        setLayout(new java.awt.GridBagLayout());
        operatorSLV.setToolTipDisplay(ScalarListViewer.TOOLTIP_DISPLAY_NAME_ONLY);
        operatorSLV.setPropertyButtonVisible(false);
        operatorSLV.setTheFont(new java.awt.Font("Dialog", 1, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        add(operatorSLV, gridBagConstraints);
        expertSLV.setToolTipDisplay(ScalarListViewer.TOOLTIP_DISPLAY_NAME_ONLY);
        expertSLV.setPropertyButtonVisible(false);
        expertSLV.setTheFont(new java.awt.Font("Dialog", 1, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        add(expertSLV, gridBagConstraints);
    }

    private fr.esrf.tangoatk.widget.attribute.ScalarListViewer expertSLV;

    private fr.esrf.tangoatk.widget.attribute.ScalarListViewer operatorSLV;

    private void connectToMouvableAttributes() {
        String msgatt = new String("Cannot connect to the attribute : ");
        String msg = null;
        String entityname = null;
        IEntity ie = null;
        try {
            entityname = panelDevName + "/" + mvName + "_Position";
            msg = msgatt + entityname;
            ie = allAtts.add(entityname);
            operatorAtts.add(ie);
            entityname = panelDevName + "/" + mvName + "_Velocity";
            msg = msgatt + entityname;
            ie = allAtts.add(entityname);
            operatorAtts.add(ie);
            entityname = panelDevName + "/" + mvName + "_FirstVelocity";
            msg = msgatt + entityname;
            ie = allAtts.add(entityname);
            operatorAtts.add(ie);
            entityname = panelDevName + "/" + mvName + "_Acceleration";
            msg = msgatt + entityname;
            ie = allAtts.add(entityname);
            operatorAtts.add(ie);
        } catch (ConnectionException ex) {
            String str = ex.getDescription();
            javax.swing.JOptionPane.showMessageDialog(null, msg + ".\n\n" + "Check if the device server is running?\n" + "Connection Exception : " + str, "Connection to " + entityname, javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
}
