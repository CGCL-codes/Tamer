package GUI.escola;

import bd.MySql;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel
 */
public class SelecionaEscola extends javax.swing.JDialog {

    /** Creates new form SelecionaEscola */
    public SelecionaEscola(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        jTable1.setModel(new TableModelEscolas());
        jScrollPane1.setViewportView(jTable1);
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton2.setText("Cancelar");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap(15, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(jButton1).addGap(11, 11, 11).addComponent(jButton2))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton1).addComponent(jButton2)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
    }

    private void formWindowClosed(java.awt.event.WindowEvent evt) {
    }

    public int getIdEscola() {
        int linha_selecionada = jTable1.getSelectedRow();
        if (linha_selecionada >= 0) {
            return Integer.valueOf(jTable1.getValueAt(linha_selecionada, 0).toString());
        } else {
            return -1;
        }
    }

    public int showDialog() {
        this.setVisible(true);
        int linha_selecionada = jTable1.getSelectedRow();
        if (linha_selecionada >= 0) {
            return Integer.valueOf(jTable1.getValueAt(linha_selecionada, 0).toString());
        } else {
            return -1;
        }
    }

    public class TableModelEscolas extends DefaultTableModel {

        public TableModelEscolas() {
            MySql conn = new MySql(GUI.Main.config);
            this.addColumn("ID");
            this.addColumn("Nome");
            ArrayList<ArrayList<String>> resultado = conn.getTable("SELECT idEscola, nomeCompleto FROM escola");
            for (int i = 0; i < resultado.size(); i++) {
                String rowData[] = new String[resultado.get(i).size()];
                for (int j = 0; j < resultado.get(0).size(); j++) {
                    rowData[j] = resultado.get(i).get(j);
                }
                this.addRow(rowData);
            }
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SelecionaEscola dialog = new SelecionaEscola(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton2;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable jTable1;
}
