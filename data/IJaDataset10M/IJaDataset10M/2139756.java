package org.dmd.dmv.server.generated.dmw;

import org.dmd.dmc.*;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmw.AttributeDefinitionDMW;
import org.dmd.dms.generated.types.AttributeDefinitionREF;
import org.dmd.dmv.server.extended.AttributeRule;
import org.dmd.dmv.server.extended.Rule;
import org.dmd.dmv.shared.generated.dmo.AttributeRuleDMO;

/**
 * The AttributeRule is the simplest rule that operates on a single attribute.
 * <P>
 * Generated from the dmv schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNew.dumpWrapper(BaseDMWGeneratorNew.java:365)
 */
public abstract class AttributeRuleDMW extends Rule {

    protected AttributeRuleDMW() {
        super();
    }

    public abstract AttributeRule getModificationRecorder();

    public AttributeRuleDMO getDMO() {
        return ((AttributeRuleDMO) core);
    }

    protected AttributeRuleDMW(AttributeRuleDMO obj, ClassDefinition cd) {
        super(obj, cd);
    }

    public AttributeDefinitionDMW getApplyToAttribute() {
        AttributeDefinitionREF ref = ((AttributeRuleDMO) core).getApplyToAttribute();
        if (ref == null) return (null);
        if (ref.getObject() == null) return (null);
        return ((AttributeDefinitionDMW) ref.getObject().getContainer());
    }

    public void setApplyToAttribute(AttributeDefinitionDMW value) {
        ((AttributeRuleDMO) core).setApplyToAttribute(value.getDMO());
    }

    public void remApplyToAttribute() {
        ((AttributeRuleDMO) core).remApplyToAttribute();
    }
}
