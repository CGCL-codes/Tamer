package com.finalist.jaggenerator;

import java.util.*;
import java.util.List;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.*;

/**
 *
 * @author  hillie
 */
public class SelectTablesDialog extends JDialog {

    private DefaultListModel listModel = new DefaultListModel();

    private static final ArrayList tableList = new ArrayList();

    private static final ArrayList alreadySelected = new ArrayList();

    /** Creates new form SelectTablesDialog */
    public SelectTablesDialog(GragGenerator parent) {
        super(parent, true);
        initComponents();
        this.setTitle("Select tables..");
        setBounds(50, 10, 200, 700);
        ArrayList tables = DatabaseUtils.getTables();
        if (tables != null) {
            for (Iterator it = tables.iterator(); it.hasNext(); ) {
                String table = (String) it.next();
                if (!alreadySelected.contains(table)) {
                    listModel.addElement(table);
                }
            }
            list.setModel(listModel);
        }
    }

    /**
    * Once the user has selected tables using this dialog, this method returns the selected tables.
    * @return the ArrayList of selected table names (String), never <code>null</code>.
    */
    public static ArrayList getTablelist() {
        return tableList;
    }

    /**
    * By adding table names to this list, those tables are excluded from appearing in future dialogues.
    *
    * @return
    */
    public static List getAlreadyselected() {
        return alreadySelected;
    }

    /**
    * clears all lists.
    */
    public static void clear() {
        tableList.clear();
        alreadySelected.clear();
    }

    /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        getContentPane().setLayout(new java.awt.GridBagLayout());
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        list.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane1, gridBagConstraints);
        selectButton.setText("Select");
        selectButton.setSelected(true);
        selectButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        jPanel1.add(selectButton);
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);
        pack();
    }

    private void listMouseClicked(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() > 1) {
            selectButtonActionPerformed(null);
        }
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        closeDialog(null);
    }

    private void selectButtonActionPerformed(ActionEvent evt) {
        Object[] tables = list.getSelectedValues();
        evt = null;
        tableList.clear();
        tableList.addAll(Arrays.asList(tables));
        dispose();
    }

    /** Closes the dialog */
    private void closeDialog(WindowEvent evt) {
        tableList.clear();
        evt = null;
        this.dispose();
    }

    private javax.swing.JButton cancelButton;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JList list;

    private javax.swing.JButton selectButton;
}
