package unidadGestion;

import centroGestion.CentroGestionParametros;
import centroGestion.CentroGestionUtil;
import utilidad.vo.ItemComboVO;
import java.util.*;
import utilidad.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author  prog1
 */
public class BuscarUnidadesGestion extends JDialog {

    public static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("unidadGestion/Bundle");

    public BuscarUnidadesGestion(JFrame f) {
        super(f, true);
        initComponents();
        inicializarForm();
    }

    public BuscarUnidadesGestion(JFrame f, UnidadGestionParametros parametrosFijos) {
        super(f, true);
        initComponents();
        this.parametrosFijos = parametrosFijos;
        inicializarForm();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jCkBEstado = new javax.swing.JCheckBox();
        jBBuscar = new javax.swing.JButton();
        jLTitulo = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jCBEstado = new utilidad.componentes.MiJComboBox();
        jCkBCentroGestion = new javax.swing.JCheckBox();
        jCBCentroGestion = new utilidad.componentes.MiJComboBox();
        jCkBNombre = new javax.swing.JCheckBox();
        jTFNombre = new utilidad.componentes.MiJTFTexto();
        setName("Form");
        setResizable(false);
        getContentPane().setLayout(null);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("unidadGestion/Bundle");
        jCkBEstado.setText(bundle.getString("BuscarUnidadesGestion.jCkBEstado.text"));
        jCkBEstado.setName("jCkBEstado");
        jCkBEstado.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCkBEstadoItemStateChanged(evt);
            }
        });
        getContentPane().add(jCkBEstado);
        jCkBEstado.setBounds(10, 80, 100, 23);
        jBBuscar.setText(bundle.getString("BuscarUnidadesGestion.jBBuscar.text"));
        jBBuscar.setName("jBBuscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(jBBuscar);
        jBBuscar.setBounds(280, 180, 90, 23);
        jLTitulo.setFont(new java.awt.Font("Arial", 1, 28));
        jLTitulo.setText(bundle.getString("BuscarUnidadesGestion.jLTitulo.text"));
        jLTitulo.setName("jLTitulo");
        getContentPane().add(jLTitulo);
        jLTitulo.setBounds(10, 9, 390, 40);
        jSeparator2.setName("jSeparator2");
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 60, 410, 10);
        jCBEstado.setName("jCBEstado");
        getContentPane().add(jCBEstado);
        jCBEstado.setBounds(120, 80, 250, 20);
        jCkBCentroGestion.setText(bundle.getString("BuscarUnidadesGestion.jCkBCentroGestion.text"));
        jCkBCentroGestion.setName("jCkBCentroGestion");
        jCkBCentroGestion.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCkBCentroGestionItemStateChanged(evt);
            }
        });
        getContentPane().add(jCkBCentroGestion);
        jCkBCentroGestion.setBounds(10, 110, 110, 23);
        jCBCentroGestion.setName("jCBCentroGestion");
        getContentPane().add(jCBCentroGestion);
        jCBCentroGestion.setBounds(120, 110, 250, 20);
        jCkBNombre.setText(bundle.getString("BuscarUnidadesGestion.jCkBNombre.text"));
        jCkBNombre.setName("jCkBNombre");
        jCkBNombre.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCkBNombreItemStateChanged(evt);
            }
        });
        getContentPane().add(jCkBNombre);
        jCkBNombre.setBounds(10, 140, 110, 23);
        jTFNombre.setName("jTFNombre");
        getContentPane().add(jTFNombre);
        jTFNombre.setBounds(120, 140, 250, 20);
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 415) / 2, (screenSize.height - 255) / 2, 415, 255);
    }

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        buscar();
    }

    private void jCkBEstadoItemStateChanged(java.awt.event.ItemEvent evt) {
        ajustarVisibilidades();
    }

    private void jCkBCentroGestionItemStateChanged(java.awt.event.ItemEvent evt) {
        cambioCheckCentroGestion();
    }

    private void jCkBNombreItemStateChanged(java.awt.event.ItemEvent evt) {
        cambioCheckNombre();
    }

    public void inicializarForm() {
        ajustarVisibilidades();
        cargarCombos();
        fijarParametros();
    }

    private void ajustarVisibilidades() {
        jCBEstado.setVisible(jCkBEstado.isSelected());
        jCBCentroGestion.setVisible(jCkBCentroGestion.isSelected());
        jTFNombre.setVisible(jCkBNombre.isSelected());
    }

    private void cambioCheckCentroGestion() {
        jCBCentroGestion.setVisible(jCkBCentroGestion.isSelected());
    }

    private void cambioCheckNombre() {
        jTFNombre.setVisible(jCkBNombre.isSelected());
    }

    private void cargarCombos() {
        cargarComboEstados();
        cargarComboCentrosGestion();
    }

    private void cargarComboEstados() {
        ArrayList<ItemComboVO> listaItems = Util.listadoCamposLVAL(bundle.getString("ESTADO"));
        jCBEstado.cargarLista(listaItems);
        jCBEstado.setSelectedIndex(0);
    }

    private void cargarComboCentrosGestion() {
        CentroGestionParametros param = new CentroGestionParametros();
        ArrayList lista = CentroGestionUtil.listado(param);
        jCBCentroGestion.cargarLista(lista, "centroGestion.CentroGestionVO", "getNombre");
        jCBCentroGestion.setSelectedIndex(0);
    }

    private void fijarParametros() {
        if (parametrosFijos != null) {
            if (parametrosFijos.estado != null) {
                jCkBEstado.setSelected(true);
                jCkBEstado.setEnabled(false);
                jCBEstado.setSelectedNombre(parametrosFijos.estado);
                jCBEstado.setEnabled(false);
            }
            if (parametrosFijos.idCentroGestion != null) {
                jCkBCentroGestion.setSelected(true);
                jCkBCentroGestion.setEnabled(false);
                jCBCentroGestion.setSelectedId(parametrosFijos.idCentroGestion);
                jCBCentroGestion.setEnabled(false);
            }
        }
    }

    private void buscar() {
        this.parametroSel = new UnidadGestionParametros();
        if (jCkBEstado.isSelected()) {
            this.parametroSel.estado = jCBEstado.getSelectedNombre();
        }
        if (jCkBCentroGestion.isSelected()) {
            this.parametroSel.idCentroGestion = jCBCentroGestion.getSelectedId();
        }
        if (jCkBNombre.isSelected()) {
            this.parametroSel.nombre = jTFNombre.getText();
        }
        this.setVisible(false);
    }

    public UnidadGestionParametros parametroSel = null;

    public UnidadGestionParametros parametrosFijos = null;

    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane = new JRootPane();
        Action actionEscape = new AbstractAction() {

            public void actionPerformed(ActionEvent actionEvent) {
                setVisible(false);
            }
        };
        Action actionEnter = new AbstractAction() {

            public void actionPerformed(ActionEvent actionEvent) {
                buscar();
            }
        };
        KeyStroke strokeEscape = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        KeyStroke strokeEnter = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0);
        rootPane.registerKeyboardAction(actionEscape, strokeEscape, JComponent.WHEN_IN_FOCUSED_WINDOW);
        rootPane.registerKeyboardAction(actionEnter, strokeEnter, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return rootPane;
    }

    private javax.swing.JButton jBBuscar;

    private utilidad.componentes.MiJComboBox jCBCentroGestion;

    private utilidad.componentes.MiJComboBox jCBEstado;

    private javax.swing.JCheckBox jCkBCentroGestion;

    private javax.swing.JCheckBox jCkBEstado;

    private javax.swing.JCheckBox jCkBNombre;

    private javax.swing.JLabel jLTitulo;

    private javax.swing.JSeparator jSeparator2;

    private utilidad.componentes.MiJTFTexto jTFNombre;
}
