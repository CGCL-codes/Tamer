package org.nex.ts.server.relato.model;

import org.nex.ts.smp.api.ISubjectProxy;
import org.nex.ts.smp.api.ITopicSpacesOntology;
import org.nex.ts.server.relato.api.IRelatomizerOntology;
import org.openrdf.model.URI;
import org.openrdf.model.ValueFactory;
import org.openrdf.model.impl.ValueFactoryImpl;

/**
 * 
 * @author jackpark
 *
 */
public class RELATO {

    public static final String NAMESPACE = ISubjectProxy.PROXY_BASE_URI;

    public static final URI RELATOMIZER_LEGEND_ROOT, RELATO_CLASS_TYPE, ADDRESSES_ASSOCIATION_TYPE, AGREES_WITH_ASSOCIATION_TYPE, ANALOGOUS_ASSOCIATION_TYPE, CAPABLE_OF_CAUSING_ASSOCIATION_TYPE, CAUSES_ASSOCIATION_TYPE, CONSISTENT_WITH_ASSOCIATION_TYPE, DIFFERENT_TO_ASSOCIATION_TYPE, DISAGREES_WITH_ASSOCIATION_TYPE, ENABLED_BY_ASSOCIATION_TYPE, ENVISAGES_ASSOCIATION_TYPE, EVIDENCE_AGAINST_ASSOCIATION_TYPE, EVIDENCE_FOR_ASSOCIATION_TYPE, EXAMPLE_OF_ASSOCIATION_TYPE, HAS_NOTHING_TO_DO_WITH_ASSOCIATION_TYPE, IDEA_TYPE_ASSUMPTION, IDEA_TYPE_DATA, IDEA_TYPE_FRAMEWORK, IDEA_TYPE_IDEA, IDEA_TYPE_IDEOLOGY, IDEA_TYPE_METHOD, IDEA_TYPE_NATURAL_PHENOMENON, IDEA_TYPE_OPINION, IDEA_TYPE_PREDICTION, IDEA_TYPE_PROBLEM, IDEA_TYPE_SCENARIO, IDEA_TYPE_SOFTWARE, IDEA_TYPE_SOLUTION, IDEA_TYPE_THEORY, IDENTICAL_TO_ASSOCIATION_TYPE, IMPAIRS_ASSOCIATION_TYPE, IMPLIES_ASSOCIATION_TYPE, IMPROVES_ON_ASSOCIATION_TYPE, INCONSISTENT_WITH_ASSOCIATION_TYPE, IS_ABOUT_ASSOCIATION_TYPE, METAPHOR_ASSOCIATION_TYPE, NOT_ANALOGOUS_ASSOCIATION_TYPE, OPPOSITE_OF_ASSOCIATION_TYPE, PREDICTS_ASSOCIATION_TYPE, PREREQUISITE_FOR_ASSOCIATION_TYPE, PREVENTS_ASSOCIATION_TYPE, PROVES_ASSOCIATION_TYPE, REFUTES_ASSOCIATION_TYPE, RESPONDS_TO_ASSOCIATION_TYPE, SHARES_ISSUES_WITH_ASSOCIATION_TYPE, SIMILAR_TO_ASSOCIATION_TYPE, SOLVES_ASSOCIATION_TYPE, UNLIKELY_TO_AFFECT_ASSOCIATION_TYPE, USES_ASSOCIATION_TYPE, WEBCLIP_RESOURCE_ASSOCIATION_TYPE, WEBCLIP_USER_ASSOCIATION_TYPE, WEBCLIPS_RESOURCE_ROLE, WEBCLIPS_USER_ROLE, RESOURCES_WEBCLIP_ROLE, USERS_WEBCLIP_ROLE, SOURCE_CLIP_PROPERTY, TARGET_CLIP_PROPERTY;

    static {
        ValueFactory factory = ValueFactoryImpl.getInstance();
        RELATOMIZER_LEGEND_ROOT = factory.createURI(NAMESPACE, IRelatomizerOntology.RELATOMIZER_LEGEND_ROOT);
        RELATO_CLASS_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.RELATO_CLASS_TYPE);
        ADDRESSES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.ADDRESSES_ASSOCIATION_TYPE);
        AGREES_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.AGREES_WITH_ASSOCIATION_TYPE);
        ANALOGOUS_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.ANALOGOUS_ASSOCIATION_TYPE);
        CAPABLE_OF_CAUSING_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.CAPABLE_OF_CAUSING_ASSOCIATION_TYPE);
        CAUSES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.CAUSES_ASSOCIATION_TYPE);
        CONSISTENT_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.CONSISTENT_WITH_ASSOCIATION_TYPE);
        DIFFERENT_TO_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.DIFFERENT_TO_ASSOCIATION_TYPE);
        DISAGREES_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.DISAGREES_WITH_ASSOCIATION_TYPE);
        ENABLED_BY_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.ENABLED_BY_ASSOCIATION_TYPE);
        ENVISAGES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.ENVISAGES_ASSOCIATION_TYPE);
        EVIDENCE_AGAINST_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.EVIDENCE_AGAINST_ASSOCIATION_TYPE);
        EVIDENCE_FOR_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.EVIDENCE_FOR_ASSOCIATION_TYPE);
        EXAMPLE_OF_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.EXAMPLE_OF_ASSOCIATION_TYPE);
        HAS_NOTHING_TO_DO_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.HAS_NOTHING_TO_DO_WITH_ASSOCIATION_TYPE);
        IDEA_TYPE_DATA = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_DATA);
        IDEA_TYPE_ASSUMPTION = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_ASSUMPTION);
        IDEA_TYPE_FRAMEWORK = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_FRAMEWORK);
        IDEA_TYPE_IDEA = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_IDEA);
        IDEA_TYPE_IDEOLOGY = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_IDEOLOGY);
        IDEA_TYPE_METHOD = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_METHOD);
        IDEA_TYPE_NATURAL_PHENOMENON = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_NATURAL_PHENOMENON);
        IDEA_TYPE_OPINION = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_OPINION);
        IDEA_TYPE_SCENARIO = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_SCENARIO);
        IDEA_TYPE_PROBLEM = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_PROBLEM);
        IDEA_TYPE_PREDICTION = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_PREDICTION);
        IDEA_TYPE_SOFTWARE = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_SOFTWARE);
        IDEA_TYPE_SOLUTION = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_SOLUTION);
        IDEA_TYPE_THEORY = factory.createURI(NAMESPACE, IRelatomizerOntology.IDEA_TYPE_THEORY);
        IDENTICAL_TO_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.IDENTICAL_TO_ASSOCIATION_TYPE);
        IMPAIRS_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.IMPAIRS_ASSOCIATION_TYPE);
        IMPLIES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.IMPLIES_ASSOCIATION_TYPE);
        IMPROVES_ON_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.IMPROVES_ON_ASSOCIATION_TYPE);
        INCONSISTENT_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.INCONSISTENT_WITH_ASSOCIATION_TYPE);
        IS_ABOUT_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.IS_ABOUT_ASSOCIATION_TYPE);
        METAPHOR_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.METAPHOR_ASSOCIATION_TYPE);
        NOT_ANALOGOUS_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.NOT_ANALOGOUS_ASSOCIATION_TYPE);
        OPPOSITE_OF_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.OPPOSITE_OF_ASSOCIATION_TYPE);
        PREDICTS_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.PREDICTS_ASSOCIATION_TYPE);
        PREREQUISITE_FOR_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.PREREQUISITE_FOR_ASSOCIATION_TYPE);
        PREVENTS_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.PREVENTS_ASSOCIATION_TYPE);
        PROVES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.PROVES_ASSOCIATION_TYPE);
        REFUTES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.REFUTES_ASSOCIATION_TYPE);
        RESPONDS_TO_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.RESPONDS_TO_ASSOCIATION_TYPE);
        SHARES_ISSUES_WITH_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.SHARES_ISSUES_WITH_ASSOCIATION_TYPE);
        SIMILAR_TO_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.SIMILAR_TO_ASSOCIATION_TYPE);
        SOLVES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.SOLVES_ASSOCIATION_TYPE);
        UNLIKELY_TO_AFFECT_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.UNLIKELY_TO_AFFECT_ASSOCIATION_TYPE);
        USES_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.USES_ASSOCIATION_TYPE);
        WEBCLIP_RESOURCE_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.WEBCLIP_RESOURCE_ASSOCIATION_TYPE);
        WEBCLIP_USER_ASSOCIATION_TYPE = factory.createURI(NAMESPACE, IRelatomizerOntology.WEBCLIP_USER_ASSOCIATION_TYPE);
        WEBCLIPS_RESOURCE_ROLE = factory.createURI(NAMESPACE, IRelatomizerOntology.WEBCLIPS_RESOURCE_ROLE);
        WEBCLIPS_USER_ROLE = factory.createURI(NAMESPACE, IRelatomizerOntology.WEBCLIPS_USER_ROLE);
        RESOURCES_WEBCLIP_ROLE = factory.createURI(NAMESPACE, IRelatomizerOntology.RESOURCES_WEBCLIP_ROLE);
        USERS_WEBCLIP_ROLE = factory.createURI(NAMESPACE, IRelatomizerOntology.USERS_WEBCLIP_ROLE);
        SOURCE_CLIP_PROPERTY = factory.createURI(NAMESPACE, IRelatomizerOntology.SOURCE_CLIP_PROPERTY);
        TARGET_CLIP_PROPERTY = factory.createURI(NAMESPACE, IRelatomizerOntology.TARGET_CLIP_PROPERTY);
    }
}
