package org.fudaa.dodico.telemac.dico;

import org.fudaa.dodico.dico.*;

/**
 * @author deniger
 */
public class DicoSubief2dv5p5 extends DicoModelAbstract {

    public DicoSubief2dv5p5() {
        super();
    }

    public DicoSubief2dv5p5(int _l) {
        super(_l);
    }

    public DicoSubief2dv5p5(String _l) {
        super(_l);
    }

    public final String getCodeName() {
        return "subief2d";
    }

    public final String getVersion() {
        return "v5p5";
    }

    protected String[] createNoms() {
        String[] noms;
        if (languageIndex_ == 0) {
            noms = new String[] { "BANCS DECOUVRANTS", "BIBLIOTHEQUES", "BILAN DE MASSE", "BINAIRE DU FICHIER DE GEOMETRIE", "BINAIRE DU FICHIER DES RESULTATS", "BINAIRE DU FICHIER HYDRODYNAMIQUE", "BINAIRE DU FICHIER PRECEDENT", "CALCUL AVEC VASE", "CAS PERMANENT", "COEFFICIENT D'IMPLICITATION", "COEFFICIENT DE FROTTEMENT", "CONCENTRATION DU FOND", "CONCENTRATION MAXIMALE", "CONSTANTE DE PARTHENIADES", "DATE DE L'ORIGINE DES TEMPS", "DESCRIPTION DES LIBRAIRIES", "DICTIONNAIRE", "DICTIONNAIRE DES PARAMETRES DE QE", "DIFFUSION A L'INTERFACE EAU SEDIMENT", "DISCRETISATIONS EN ESPACE", "DISPERSION LONGITUDINALE", "DISPERSION TRANSVERSALE", "DIVISION DU PAS DE TEMPS POUR LE CALCUL DE LA DIFFUSION", "ELEMENTS MASQUES PAR L'UTILISATEUR", "EXECUTABLE PAR DEFAUT", "EXECUTABLE PARALLELE PAR DEFAUT", "FICHIER DE GEOMETRIE", "FICHIER DE REFERENCE", "FICHIER DES CONCENTRATIONS ENTRANTES", "FICHIER DES CONDITIONS AUX LIMITES", "FICHIER DES CONDITIONS INITIALES", "FICHIER DES FONCTIONS DE FORCAGE", "FICHIER DES FONDS", "FICHIER DES PARAMETRES", "FICHIER DES PARAMETRES DE QE", "FICHIER DES RESULTATS", "FICHIER DES SOURCES PONCTUELLES", "FICHIER FORTRAN", "FICHIER FORTRAN DE CHIMIE", "FICHIER FORTRAN DE LECTURE DES DONNEES", "FICHIER HYDRODYNAMIQUE", "FICHIER PRECEDENT SEDIMENTOLOGIQUE", "FORME DE LA CONVECTION", "GRAVITE", "HEURE DE L'ORIGINE DES TEMPS", "IMPRESSION DES VALEURS EXTREMES", "LISTE DES FICHIERS", "LOI DE FROTTEMENT SUR LE FOND", "LONGUEUR DU VECTEUR", "MASSE VOLUMIQUE DE L'EAU", "MASSE VOLUMIQUE DES SEDIMENTS", "MAXIMUM D'ITERATIONS POUR LE SOLVEUR", "MOT DE PASSE CRAY", "NOMBRE DE COUCHES", "NOMBRE DE PAS DE TEMPS", "NOMBRE DE PERIODES CALCULEES", "NOMBRE DE SOUS-PAS DE TEMPS", "NUMERO DE COMPTE", "NUMERO DE VERSION", "OPTION DE SUPG", "OPTION DE TRAITEMENT DES BANCS DECOUVRANTS", "OPTION DU SOLVEUR", "OPTION POUR LA DIFFUSION DU TRACEUR", "OPTION POUR LA DISPERSION", "OPTION POUR LE CALCUL DU FLUX D'EROSION", "PAS DE TEMPS", "PERIODE DE CALCUL", "PERIODE DE SORTIE GRAPHIQUE", "PERIODE DE SORTIE LISTING", "PLACE MEMOIRE CRAY", "POROSITE DE LA VASE", "PRECISION DU SOLVEUR", "PRECONDITIONNEMENT", "PRIORITE", "PRODUIT MATRICE-VECTEUR", "RAPPORT D'EVOLUTION CRITIQUE", "SOLVEUR", "SORTIE LISTING", "STANDARD DU FICHIER DE GEOMETRIE", "STANDARD DU FICHIER DES RESULTATS", "STANDARD DU FICHIER HYDRODYNAMIQUE", "STOCKAGE DES MATRICES", "TEMPS D'ORIGINE DE L'HYDROGRAMME", "TEMPS MACHINE CRAY", "TITRE", "TYPE DES SOURCES", "USER CRAY", "VALEUR MINIMUM DE H", "VALIDATION", "VARIABLES A IMPRIMER", "VARIABLES POUR LES SORTIES GRAPHIQUES", "VISCOSITE CINEMATIQUE DE L'EAU", "VITESSE DE TRANSFERT A L'INTERFACE EAU SEDIMENT", "VITESSES DE CHUTE VARIABLES" };
        } else if (languageIndex_ == 1) {
            noms = new String[] { "ACCOUNT NUMBER", "BOTTOM CONCENTRATION", "BOTTOM TOPOGRAPHY FILE", "BOUNDARY CONDITIONS FILE", "BOUNDARY IMPOSED CONCENTRATIONS FILE", "CALCULATION WITH MUD", "CHIMIE FORTRAN FILE", "CPU TIME", "CRITICAL EVOLUTION RATIO", "DEFAULT EXECUTABLE", "DEFAULT PARALLEL EXECUTABLE", "DESCRIPTION OF THE LIBRARIES", "DICTIONARY", "DIFFUSION AT THE WATER SEDIMENT INTERFACE", "DISCRETIZATION IN SPACE", "DISPERSION ACROSS THE FLOW", "DISPERSION ALONG THE FLOW", "ELEMENTS MASKED BY USER", "FORCING FUNCTIONS FILE", "FORTRAN FILE", "FORTRAN FILE FOR READING DATA", "FRICTION COEFFICIENT", "GEOMETRY FILE", "GEOMETRY FILE BINARY", "GEOMETRY FILE STANDARD", "GRAPHIC PRINTOUT PERIOD", "GRAVITY ACCELERATION", "HYDRODYNAMIC FILE", "HYDRODYNAMIC FILE BINARY", "HYDRODYNAMIC FILE STANDARD", "IMPLICITATION COEFFICIENT", "INITIAL CONDITIONS FILE", "LAW OF BOTTOM FRICTION", "LIBRARIES", "LIST OF FILES", "LISTING PRINTOUT", "LISTING PRINTOUT PERIOD", "MASS-BALANCE", "MATRIX STORAGE", "MATRIX-VECTOR PRODUCT", "MAXIMAL CONCENTRATION", "MAXIMAL VALUES PRINTOUT", "MAXIMUM NUMBER OF ITERATIONS FOR SOLVER", "MEMORY SPACE", "MINIMAL VALUE FOR H", "MUD POROSITY", "NUMBER OF LAYERS", "NUMBER OF PERIODIC EVENTS", "NUMBER OF SUB-TIME STEPS", "NUMBER OF TIME STEPS", "OPTION FOR THE CALCULATION OF THE EROSIVE FLUX", "OPTION FOR THE DIFFUSION OF TRACER", "OPTION FOR THE DISPERSION", "OPTION FOR THE TREATMENT OF DRY BANKS", "ORIGINAL DATE OF TIME", "ORIGINAL HOUR OF TIME", "PARTHENIADES CONSTANT", "PASSWORD", "PERIOD OF COMPUTATION", "PRECONDITIONING", "PREVIOUS SEDIMENTOLOGICAL FILE", "PRIORITY", "QE PARAMETERS DICTIONARY", "REFERENCE FILE", "RELEASE", "RESULTS FILE", "RESULTS FILE BINARY", "RESULTS FILE STANDARD", "SEDIMENT DENSITY", "SEDIMENTOLOGICAL FILE BINARY", "SOLVER", "SOLVER ACCURACY", "SOLVER OPTION", "SOURCE POINTS FILE", "STARTING TIME OF THE HYDROGRAM", "STEADY STATE CASE", "STEERING FILE", "SUPG OPTION", "TIDAL FLATS", "TIME STEP", "TIME STEP DIVISION FOR THE CALCULATION OF DIFFUSION", "TITLE", "TRANSFERT VELOCITY AT THE WATER SEDIMENT INTERFACE", "TYPE OF ADVECTION", "TYPE OF SOURCES", "USER CRAY", "VALIDATION", "VARIABLE SETTLING VELOCITIES", "VARIABLES FOR GRAPHIC PRINTOUTS", "VARIABLES TO BE PRINTED", "VECTOR LENGTH", "WATER CINEMATIC VISCOSITY", "WATER DENSITY", "WQ STEERING FILE" };
        } else noms = null;
        return noms;
    }

    protected final DicoEntite[] createEntites() {
        DicoComportValues[] comportValues;
        DicoEntite.Simple entiteSimple;
        DicoEntite.Tableau entiteTableau;
        DicoEntite.Vecteur entiteVecteur;
        DicoDataType.Entier typeEntier;
        DicoDataType.Binaire typeBinaire;
        DicoDataType.Chaine typeChaine;
        DicoDataType.Reel typeReel;
        String[] choiceKeys;
        String[][] choiceValues;
        String[] valueByLanguage = new String[2];
        DicoEntite[] entites = new DicoEntite[94];
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "TITRE";
        valueByLanguage[1] = "TITLE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PAS DE TITRE DANS LE FICHIER CAS";
        valueByLanguage[1] = "NO TITLE IN THE STEERING FILE";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[0] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = new String[] { "U", "V", "H", "S", "B", "F", "D", "E", "Z", "L", "C", "P" };
        choiceValues = new String[][] { { "COMPOSANTE DE LA VITESSE SELON X", "COMPOSANTE DE LA VITESSE SELON Y", "HAUTEUR D'EAU", "SURFACE LIBRE", "COTE DU FOND", "NOMBRE DE FROUDE", "VISCOSITE", "EVOLUTION DU FOND", "COEFFICIENTS DE FROTTEMENT", "NOMBRE DE COURANT", "CONCENTRATIONS DES TRACEURS", "TABLEAUX UTILISATEURS PRIVE" }, { "COMPOSANTE DE LA VITESSE SELON X", "COMPOSANTE DE LA VITESSE SELON Y", "HAUTEUR D'EAU", "SURFACE LIBRE", "COTE DU FOND", "NOMBRE DE FROUDE", "VISCOSITE", "EVOLUTION DU FOND", "COEFFICIENTS DE FROTTEMENT", "NOMBRE DE COURANT", "CONCENTRATIONS DES TRACEURS", "TABLEAUX UTILISATEURS PRIVE" } };
        typeChaine.setChoice(choiceKeys, choiceValues[languageIndex_]);
        typeChaine.setEditable(true);
        valueByLanguage[0] = "VARIABLES POUR LES SORTIES GRAPHIQUES";
        valueByLanguage[1] = "VARIABLES FOR GRAPHIC PRINTOUTS";
        entiteVecteur = new DicoEntite.Vecteur(valueByLanguage[languageIndex_], typeChaine, ",");
        entiteVecteur.setDataColumn(true);
        entiteVecteur.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteVecteur.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "U,E,V,C,H,Z";
        valueByLanguage[1] = "U,E,V,C,H,Z";
        entiteVecteur.setDefautValue(valueByLanguage[languageIndex_]);
        entites[1] = entiteVecteur.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = new String[] { "", "U", "V", "H", "S", "B", "F", "D", "E", "Z", "L", "C", "P" };
        choiceValues = new String[][] { { "PAS DE VARIABLE", "COMPOSANTE DE LA VITESSE SELON X", "COMPOSANTE DE LA VITESSE SELON Y", "HAUTEUR D'EAU", "SURFACE LIBRE", "COTE DU FOND", "NOMBRE DE FROUDE", "VISCOSITE", "EVOLUTION DU FOND", "COEFFICIENTS DE FROTTEMENT", "NOMBRE DE COURANT", "CONCENTRATIONS DES TRACEURS", "TABLEAUX UTILISATEURS PRIVE" }, { "PAS DE VARIABLE", "COMPOSANTE DE LA VITESSE SELON X", "COMPOSANTE DE LA VITESSE SELON Y", "HAUTEUR D'EAU", "SURFACE LIBRE", "COTE DU FOND", "NOMBRE DE FROUDE", "VISCOSITE", "EVOLUTION DU FOND", "COEFFICIENTS DE FROTTEMENT", "NOMBRE DE COURANT", "CONCENTRATIONS DES TRACEURS", "TABLEAUX UTILISATEURS PRIVE" } };
        typeChaine.setChoice(choiceKeys, choiceValues[languageIndex_]);
        typeChaine.setEditable(true);
        valueByLanguage[0] = "VARIABLES A IMPRIMER";
        valueByLanguage[1] = "VARIABLES TO BE PRINTED";
        entiteVecteur = new DicoEntite.Vecteur(valueByLanguage[languageIndex_], typeChaine, ",");
        entiteVecteur.setDataColumn(true);
        entiteVecteur.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteVecteur.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "";
        valueByLanguage[1] = "";
        entiteVecteur.setDefautValue(valueByLanguage[languageIndex_]);
        entites[2] = entiteVecteur.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "USER CRAY";
        valueByLanguage[1] = "USER CRAY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[3] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "MOT DE PASSE CRAY";
        valueByLanguage[1] = "PASSWORD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[4] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DE GEOMETRIE";
        valueByLanguage[1] = "GEOMETRY FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[5] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER FORTRAN";
        valueByLanguage[1] = "FORTRAN FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[6] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES PARAMETRES";
        valueByLanguage[1] = "STEERING FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[7] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES CONDITIONS AUX LIMITES";
        valueByLanguage[1] = "BOUNDARY CONDITIONS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[8] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER HYDRODYNAMIQUE";
        valueByLanguage[1] = "HYDRODYNAMIC FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[9] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES RESULTATS";
        valueByLanguage[1] = "RESULTS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[10] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5", "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5" }, { "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5", "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "NUMERO DE VERSION";
        valueByLanguage[1] = "RELEASE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5";
        valueByLanguage[1] = "V5P5,V5P5,V5P5,V5P5,V5P5,V5P5";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[11] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "TEMPS MACHINE CRAY";
        valueByLanguage[1] = "CPU TIME";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "200";
        valueByLanguage[1] = "200";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[12] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "PLACE MEMOIRE CRAY";
        valueByLanguage[1] = "MEMORY SPACE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1500000W";
        valueByLanguage[1] = "1500000W";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[13] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES FONDS";
        valueByLanguage[1] = "BOTTOM TOPOGRAPHY FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[14] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "BIBLIOTHEQUES";
        valueByLanguage[1] = "LIBRARIES";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "subief,telemac,util,damo,bief,hp";
        valueByLanguage[1] = "subief,telemac,util,damo,bief,hp";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[15] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER PRECEDENT SEDIMENTOLOGIQUE";
        valueByLanguage[1] = "PREVIOUS SEDIMENTOLOGICAL FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[16] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "STD", "IBM", "I3E" }, { "STD", "IBM", "I3E" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "BINAIRE DU FICHIER DE GEOMETRIE";
        valueByLanguage[1] = "GEOMETRY FILE BINARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "STD";
        valueByLanguage[1] = "STD";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[17] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "STD", "IBM", "I3E" }, { "STD", "IBM", "I3E" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "BINAIRE DU FICHIER HYDRODYNAMIQUE";
        valueByLanguage[1] = "HYDRODYNAMIC FILE BINARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "STD";
        valueByLanguage[1] = "STD";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[18] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "STD", "IBM", "I3E" }, { "STD", "IBM", "I3E" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "BINAIRE DU FICHIER DES RESULTATS";
        valueByLanguage[1] = "RESULTS FILE BINARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "STD";
        valueByLanguage[1] = "STD";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[19] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "STD", "IBM", "I3E" }, { "STD", "IBM", "I3E" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "BINAIRE DU FICHIER PRECEDENT";
        valueByLanguage[1] = "SEDIMENTOLOGICAL FILE BINARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "STD";
        valueByLanguage[1] = "STD";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[20] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        choiceKeys = null;
        choiceValues = new String[][] { { "JOUR", "NUIT", "WEEK-END" }, { "JOUR", "NUIT", "WEEK-END" } };
        typeChaine.setChoice(choiceValues[languageIndex_], choiceKeys);
        valueByLanguage[0] = "PRIORITE";
        valueByLanguage[1] = "PRIORITY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "Utilise par la procedure de lancement sur station de travail";
        valueByLanguage[1] = "Utilise par la procedure de lancement sur station de travail";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "JOUR";
        valueByLanguage[1] = "JOUR";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[21] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "NUMERO DE COMPTE";
        valueByLanguage[1] = "ACCOUNT NUMBER";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "Numero du compte calcul sur lequel sera impute le cout" + "\ndu calcul.";
        valueByLanguage[1] = "Account number to which the cost of computation shall be" + "\ncharged.";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[22] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES PARAMETRES DE QE";
        valueByLanguage[1] = "WQ STEERING FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[23] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "DICTIONNAIRE DES PARAMETRES DE QE";
        valueByLanguage[1] = "QE PARAMETERS DICTIONARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        entites[24] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER FORTRAN DE LECTURE DES DONNEES";
        valueByLanguage[1] = "FORTRAN FILE FOR READING DATA";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        entites[25] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER FORTRAN DE CHIMIE";
        valueByLanguage[1] = "CHIMIE FORTRAN FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        entites[26] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES SOURCES PONCTUELLES";
        valueByLanguage[1] = "SOURCE POINTS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[27] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES CONCENTRATIONS ENTRANTES";
        valueByLanguage[1] = "BOUNDARY IMPOSED CONCENTRATIONS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[28] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES FONCTIONS DE FORCAGE";
        valueByLanguage[1] = "FORCING FUNCTIONS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[29] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DES CONDITIONS INITIALES";
        valueByLanguage[1] = "INITIAL CONDITIONS FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[30] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        typeChaine.setFileType(true);
        valueByLanguage[0] = "FICHIER DE REFERENCE";
        valueByLanguage[1] = "REFERENCE FILE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "Fichier de resultats de reference pour la validation. Les resultats a placer da" + "\nns ce fichier seront a" + "\necrire sur le canal 22.";
        valueByLanguage[1] = "Binary-coded result file for validation. The results to be entered into this f" + "\nile shall be written" + "\non channel 22.";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        entites[31] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "DICTIONNAIRE";
        valueByLanguage[1] = "DICTIONARY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeChaine);
        entiteSimple.setNiveau(-3);
        valueByLanguage[0] = "Dictionnaire des mots cles.";
        valueByLanguage[1] = "Key word dictionary.";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "subief2dv5p5.dico";
        valueByLanguage[1] = "subief2dv5p5.dico";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[32] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "SORTIE LISTING";
        valueByLanguage[1] = "LISTING PRINTOUT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "true";
        valueByLanguage[1] = "true";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[33] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "CAS PERMANENT";
        valueByLanguage[1] = "STEADY STATE CASE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "HYDRODYNAMIQUE TELEMAC";
        valueByLanguage[1] = "TELEMAC HYDRODYNAMIC";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[34] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "VITESSES DE CHUTE VARIABLES";
        valueByLanguage[1] = "VARIABLE SETTLING VELOCITIES";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[35] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "BILAN DE MASSE";
        valueByLanguage[1] = "MASS-BALANCE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[36] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "IMPRESSION DES VALEURS EXTREMES";
        valueByLanguage[1] = "MAXIMAL VALUES PRINTOUT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[37] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "BANCS DECOUVRANTS";
        valueByLanguage[1] = "TIDAL FLATS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[38] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "ELEMENTS MASQUES PAR L'UTILISATEUR";
        valueByLanguage[1] = "ELEMENTS MASKED BY USER";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[39] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "VALIDATION";
        valueByLanguage[1] = "VALIDATION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "Option utilisee principalement pour le dossier de validation. Le" + "\nfichier de reference est alors considere comme une" + "\nreference a laquelle on va comparer le calcul. La comparaison" + "\nest effectuee par le sous-programme VALIDA qui peut etre une comparaison" + "\navec une solution exacte par exemple.";
        valueByLanguage[1] = "This option is primarily used for the validation documents." + "\nThe REFERENCE FILE is then considered as a" + "\nreference which the computation is going to be compared with." + "\nThe comparison is made by the subroutine VALIDA, which can be" + "\nmodified as to" + "\nso as to include, for example,a comparison with an exact solution.";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[40] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "DIFFUSION A L'INTERFACE EAU SEDIMENT";
        valueByLanguage[1] = "DIFFUSION AT THE WATER SEDIMENT INTERFACE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[41] = entiteSimple.getImmutable();
        typeBinaire = DicoDataType.Binaire.EMPTY;
        valueByLanguage[0] = "CALCUL AVEC VASE";
        valueByLanguage[1] = "CALCULATION WITH MUD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeBinaire);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "false";
        valueByLanguage[1] = "false";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[42] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "NOMBRE DE PERIODES CALCULEES";
        valueByLanguage[1] = "NUMBER OF PERIODIC EVENTS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "HYDRODYNAMIQUE TELEMAC";
        valueByLanguage[1] = "TELEMAC HYDRODYNAMIC";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[43] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "PERIODE DE SORTIE GRAPHIQUE";
        valueByLanguage[1] = "GRAPHIC PRINTOUT PERIOD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[44] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "PERIODE DE SORTIE LISTING";
        valueByLanguage[1] = "LISTING PRINTOUT PERIOD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "ENTREES-SORTIES, GRAPHIQUES ET LISTING";
        valueByLanguage[1] = "INPUT-OUTPUT, GRAPHICS AND LISTING";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[45] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "1", "2", "6" };
        choiceValues = new String[][] { { "CARACTERISTIQUES", "SUPG", "SCHEMA PSI" }, { "CHARACTERISTICS", "SUPG", "PSI SCHEME" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "FORME DE LA CONVECTION";
        valueByLanguage[1] = "TYPE OF ADVECTION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "D�termine le sch�ma utilis� pour la convection :" + "\n1: caract�ristiques" + "\n2: sch�ma semi-implicite + supg" + "\n6: sch�ma psi";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[46] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "1", "2" };
        choiceValues = new String[][] { { "CHEZY", "STRICKLER" }, { "CHEZY", "STRICKLER" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "LOI DE FROTTEMENT SUR LE FOND";
        valueByLanguage[1] = "LAW OF BOTTOM FRICTION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "LOI DE FROTTEMENT DE FOND (1:CHEZI 2:STRICKLER)";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2";
        valueByLanguage[1] = "2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[47] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "3", "2", "1" };
        choiceValues = new String[][] { { "selafin", "PABLO 2D", "leonard" }, { "selafin", "PABLO 2D", "leonard" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "STANDARD DU FICHIER DE GEOMETRIE";
        valueByLanguage[1] = "GEOMETRY FILE STANDARD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "1: FORMAT LEONARD" + "\n           2: FORMAT PABLO 2D" + "\n           3: FORMAT SELAFIN";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "3";
        valueByLanguage[1] = "3";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[48] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "3", "2", "1" };
        choiceValues = new String[][] { { "selafin", "PABLO 2D", "leonard" }, { "selafin", "PABLO 2D", "leonard" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "STANDARD DU FICHIER DES RESULTATS";
        valueByLanguage[1] = "RESULTS FILE STANDARD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "1: LEONARD  2: PABLO 2D 3: SELAFIN";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "3";
        valueByLanguage[1] = "3";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[49] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "3", "2", "1" };
        choiceValues = new String[][] { { "selafin", "PABLO 2D", "leonard" }, { "selafin", "PABLO 2D", "leonard" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "STANDARD DU FICHIER HYDRODYNAMIQUE";
        valueByLanguage[1] = "HYDRODYNAMIC FILE STANDARD";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "1: LEONARD  2: PABLO 2D  3: SELAFIN";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, FICHIERS";
        valueByLanguage[1] = "INPUT-OUTPUT, FILES";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "3";
        valueByLanguage[1] = "3";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[50] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "1", "2", "3", "4", "7" };
        choiceValues = new String[][] { { "gradient conjuge", "residu conjuge", "gradient conjuge sur equation normale", "erreur minimale", "gmres (voir ausi option du solveur)" }, { "conjugate gradient", "conjugate residual", "conjugate gradient on a normal equation", "minimum error", "gmres (see option for the solver for tracer diffusion)" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "SOLVEUR";
        valueByLanguage[1] = "SOLVER";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "Permet de choisir le solveur utilis� pour la r�solution" + "\nde l'�tape de propagation. Toutes les m�thodes propos�es" + "\nactuellement s'apparentent au Gradient Conjugu�. Ce sont :" + "\n 1 : gradient conjugu�" + "\n 2 : r�sidu conjugu�" + "\n 3 : gradient conjugu� sur �quation normale" + "\n 4 : erreur minimale" + "\n 7 : gmres";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES, SOLVEUR";
        valueByLanguage[1] = "NUMERICAL PARAMETERS, SOLVER";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "3";
        valueByLanguage[1] = "3";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[51] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "OPTION DU SOLVEUR";
        valueByLanguage[1] = "SOLVER OPTION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "Param�tre suppl�mentaire disponible pour le solveur." + "\nDans le cas du solveur gmres, il s'agit de la dimension" + "\nde l'espace de Krylov.";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES, SOLVEUR";
        valueByLanguage[1] = "NUMERICAL PARAMETERS, SOLVER";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2";
        valueByLanguage[1] = "2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[52] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "2", "0", "3", "7" };
        choiceValues = new String[][] { { "diagonal", "aucun", "diagonal condensee", "crout" }, { "diagonal", "no preconditioning", "diagonal condensee", "crout" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "PRECONDITIONNEMENT";
        valueByLanguage[1] = "PRECONDITIONING";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "Permet de pr�conditionner le syst�me de l'�tape de propagation" + "\nafin d'acc�l�rer la convergence lors de sa r�solution." + "\n   - 0 : pas de pr�conditionnement," + "\n   - 2 : pr�conditionnement diagonal." + "\n   - 3 : pr�conditionnement diagonal avec la matrice condens�e." + "\n   - 7 : pr�conditionnement de Crout par �l�ment." + "\n Certains pr�conditionnements sont cumulables" + "\n (les diagonaux 2 ou 3 avec les autres)" + "\n Pour cette raison on ne retient que les nombres premiers pour" + "\n d�signer les pr�conditionnements. Si l'on souhaite en cumuler" + "\n plusieurs on formera le produit des options correspondantes.";
        valueByLanguage[1] = "";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2";
        valueByLanguage[1] = "2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[53] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "MAXIMUM D'ITERATIONS POUR LE SOLVEUR";
        valueByLanguage[1] = "MAXIMUM NUMBER OF ITERATIONS FOR SOLVER";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES, SOLVEUR";
        valueByLanguage[1] = "NUMERICAL PARAMETERS, SOLVER";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "50";
        valueByLanguage[1] = "50";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[54] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "NOMBRE DE SOUS-PAS DE TEMPS";
        valueByLanguage[1] = "NUMBER OF SUB-TIME STEPS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[55] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "NOMBRE DE PAS DE TEMPS";
        valueByLanguage[1] = "NUMBER OF TIME STEPS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[56] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "NOMBRE DE COUCHES";
        valueByLanguage[1] = "NUMBER OF LAYERS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[57] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "LONGUEUR DU VECTEUR";
        valueByLanguage[1] = "VECTOR LENGTH";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[58] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "OPTION DE TRAITEMENT DES BANCS DECOUVRANTS";
        valueByLanguage[1] = "OPTION FOR THE TREATMENT OF DRY BANKS";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[59] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "OPTION POUR LA DISPERSION";
        valueByLanguage[1] = "OPTION FOR THE DISPERSION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[60] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "OPTION DE SUPG";
        valueByLanguage[1] = "SUPG OPTION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2";
        valueByLanguage[1] = "2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[61] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "DISCRETISATIONS EN ESPACE";
        valueByLanguage[1] = "DISCRETIZATION IN SPACE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "11";
        valueByLanguage[1] = "11";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[62] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "PRODUIT MATRICE-VECTEUR";
        valueByLanguage[1] = "MATRIX-VECTOR PRODUCT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[63] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "STOCKAGE DES MATRICES";
        valueByLanguage[1] = "MATRIX STORAGE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[64] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "DATE DE L'ORIGINE DES TEMPS";
        valueByLanguage[1] = "ORIGINAL DATE OF TIME";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeEntier);
        entiteTableau.setTaille(3);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Permet de fixer la date d'origine des temps du modele lors" + "\nde la prise en compte de la force generatrice de la maree" + "\n( JOUR MOIS ANNEE ).";
        valueByLanguage[1] = "Give the date of the time origin of the model when taking into" + "\naccount the tide generating force (DAY MONTH YEAR).";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "0;0;0";
        valueByLanguage[1] = "0;0;0";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[65] = entiteTableau.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "HEURE DE L'ORIGINE DES TEMPS";
        valueByLanguage[1] = "ORIGINAL HOUR OF TIME";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeEntier);
        entiteTableau.setTaille(3);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Permet de fixer l'heure d'origine des temps du modele lors" + "\nde la prise en compte de la force generatrice de la maree" + "\n(HEURE MINUTE SECONDE).";
        valueByLanguage[1] = "Give the time of the time origin of the model when taking into" + "\naccount of the tide generator force (HOUR MINUTE SECONDE).";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "0;0;0";
        valueByLanguage[1] = "0;0;0";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[66] = entiteTableau.getImmutable();
        typeEntier = new DicoDataType.Entier();
        typeEntier.setControle(1, 2);
        choiceKeys = new String[] { "1", "2" };
        choiceValues = new String[][] { { "Normal", "Dirac" }, { "Normal", "Dirac" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "TYPE DES SOURCES";
        valueByLanguage[1] = "TYPE OF SOURCES";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(2);
        valueByLanguage[0] = "1: Source portee par une base elements finis" + "\n        2: Source portee  par une fonction de Dirac";
        valueByLanguage[1] = "1: Source term multiplied by a finite element basis" + "\n        2: Source term multiplied by a Dirac function";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[67] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "1", "2" };
        choiceValues = new String[][] { { "div( nu grad(T) )", "1/h div ( h nu grad(T)" }, { "div( nu grad(T) )", "1/h div ( h nu grad(T)" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "OPTION POUR LA DIFFUSION DU TRACEUR";
        valueByLanguage[1] = "OPTION FOR THE DIFFUSION OF TRACER";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "1: Diffusion de la forme div( nu grad(T) )" + "\n        2: Diffusion de la forme 1/h div ( h nu grad(T) )";
        valueByLanguage[1] = "1: Diffusion in the form div( nu grad(T) )" + "\n        2: Diffusion in the form 1/h div ( h nu grad(T) )";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[68] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        choiceKeys = new String[] { "1", "2" };
        choiceValues = new String[][] { { "Partheniades", "Puissance hydraulique" }, { "Partheniades", "Hydraulic power" } };
        typeEntier.setChoice(choiceKeys, choiceValues[languageIndex_]);
        valueByLanguage[0] = "OPTION POUR LE CALCUL DU FLUX D'EROSION";
        valueByLanguage[1] = "OPTION FOR THE CALCULATION OF THE EROSIVE FLUX";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(1);
        valueByLanguage[0] = "1: Erosion de type Partheniades" + "\n        2: Erosion de type puissance hydraulique";
        valueByLanguage[1] = "1: Partheniades Erosion" + "\n        2: Erosion with hydraulic power";
        entiteSimple.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[69] = entiteSimple.getImmutable();
        typeEntier = new DicoDataType.Entier();
        valueByLanguage[0] = "DIVISION DU PAS DE TEMPS POUR LE CALCUL DE LA DIFFUSION";
        valueByLanguage[1] = "TIME STEP DIVISION FOR THE CALCULATION OF DIFFUSION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeEntier);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1";
        valueByLanguage[1] = "1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[70] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "RAPPORT D'EVOLUTION CRITIQUE";
        valueByLanguage[1] = "CRITICAL EVOLUTION RATIO";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "5.E-2";
        valueByLanguage[1] = "5.E-2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[71] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "MASSE VOLUMIQUE DE L'EAU";
        valueByLanguage[1] = "WATER DENSITY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1000.";
        valueByLanguage[1] = "1000.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[72] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "MASSE VOLUMIQUE DES SEDIMENTS";
        valueByLanguage[1] = "SEDIMENT DENSITY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2665.";
        valueByLanguage[1] = "2665.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[73] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "COEFFICIENT DE FROTTEMENT";
        valueByLanguage[1] = "FRICTION COEFFICIENT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "50.";
        valueByLanguage[1] = "50.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[74] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "GRAVITE";
        valueByLanguage[1] = "GRAVITY ACCELERATION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "9.81";
        valueByLanguage[1] = "9.81";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[75] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "VALEUR MINIMUM DE H";
        valueByLanguage[1] = "MINIMAL VALUE FOR H";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E-3";
        valueByLanguage[1] = "1.E-3";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[76] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "VISCOSITE CINEMATIQUE DE L'EAU";
        valueByLanguage[1] = "WATER CINEMATIC VISCOSITY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E-6";
        valueByLanguage[1] = "1.E-6";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[77] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "PAS DE TEMPS";
        valueByLanguage[1] = "TIME STEP";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.";
        valueByLanguage[1] = "1.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[78] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "PERIODE DE CALCUL";
        valueByLanguage[1] = "PERIOD OF COMPUTATION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "HYDRODYNAMIQUE TELEMAC";
        valueByLanguage[1] = "TELEMAC HYDRODYNAMIC";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "44640.";
        valueByLanguage[1] = "44640.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[79] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "CONSTANTE DE PARTHENIADES";
        valueByLanguage[1] = "PARTHENIADES CONSTANT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "2.E-5";
        valueByLanguage[1] = "2.E-5";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[80] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "COEFFICIENT D'IMPLICITATION";
        valueByLanguage[1] = "IMPLICITATION COEFFICIENT";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES";
        valueByLanguage[1] = "NUMERICAL PARAMETERS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "0.6";
        valueByLanguage[1] = "0.6";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[81] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "DISPERSION LONGITUDINALE";
        valueByLanguage[1] = "DISPERSION ALONG THE FLOW";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E-2";
        valueByLanguage[1] = "1.E-2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[82] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "DISPERSION TRANSVERSALE";
        valueByLanguage[1] = "DISPERSION ACROSS THE FLOW";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "EQUATIONS";
        valueByLanguage[1] = "EQUATIONS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E-2";
        valueByLanguage[1] = "1.E-2";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[83] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "PRECISION DU SOLVEUR";
        valueByLanguage[1] = "SOLVER ACCURACY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "PARAMETRES NUMERIQUES, SOLVEUR";
        valueByLanguage[1] = "NUMERICAL PARAMETERS, SOLVER";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E-4";
        valueByLanguage[1] = "1.E-4";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[84] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "TEMPS D'ORIGINE DE L'HYDROGRAMME";
        valueByLanguage[1] = "STARTING TIME OF THE HYDROGRAM";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "HYDRODYNAMIQUE TELEMAC";
        valueByLanguage[1] = "TELEMAC HYDRODYNAMIC";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "0.";
        valueByLanguage[1] = "0.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[85] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "CONCENTRATION MAXIMALE";
        valueByLanguage[1] = "MAXIMAL CONCENTRATION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.E+6";
        valueByLanguage[1] = "1.E+6";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[86] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "CONCENTRATION DU FOND";
        valueByLanguage[1] = "BOTTOM CONCENTRATION";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "SEDIMENTOLOGIE";
        valueByLanguage[1] = "SEDIMENTOLOGY";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "500.";
        valueByLanguage[1] = "500.";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[87] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "VITESSE DE TRANSFERT A L'INTERFACE EAU SEDIMENT";
        valueByLanguage[1] = "TRANSFERT VELOCITY AT THE WATER SEDIMENT INTERFACE";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "1.5D-4";
        valueByLanguage[1] = "1.5D-4";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[88] = entiteSimple.getImmutable();
        typeReel = new DicoDataType.Reel();
        valueByLanguage[0] = "POROSITE DE LA VASE";
        valueByLanguage[1] = "MUD POROSITY";
        entiteSimple = new DicoEntite.Simple(valueByLanguage[languageIndex_], typeReel);
        entiteSimple.setNiveau(0);
        valueByLanguage[0] = "CONSTANTES PHYSIQUES";
        valueByLanguage[1] = "PHYSICAL CONSTANTS";
        entiteSimple.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "8.12382739D-1";
        valueByLanguage[1] = "8.12382739D-1";
        entiteSimple.setDefautValue(valueByLanguage[languageIndex_]);
        entites[89] = entiteSimple.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "LISTE DES FICHIERS";
        valueByLanguage[1] = "LIST OF FILES";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeChaine);
        entiteTableau.setTaille(18);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Noms des fichiers exploites par le code";
        valueByLanguage[1] = "File names of the used files";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "FICHIERS";
        valueByLanguage[1] = "FILES";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "FICHIER DE GEOMETRIE;FICHIER DES CONDITIONS AUX LIMITES;FICHIER DES RESULTATS;FICHIER PRECEDENT SEDIMENTOLOGIQUE;FICHIER DES FONDS;FICHIER DE REFERENCE;FICHIER HYDRODYNAMIQUE;FICHIER DES PARAMETRES DE QE;FICHIER FORTRAN DE LECTURE DES DONNEES;FICHIER FORTRAN DE CHIMIE;FICHIER DES SOURCES PONCTUELLES;FICHIER DES CONCENTRATIONS ENTRANTES;FICHIER DES FONCTIONS DE FORCAGE;FICHIER DES CONDITIONS INITIALES;DICTIONNAIRE DES PARAMETRES DE QE;FICHIER FORTRAN;FICHIER DES PARAMETRES;DICTIONNAIRE";
        valueByLanguage[1] = "GEOMETRY FILE;BOUNDARY CONDITIONS FILE;RESULTS FILE;PREVIOUS SEDIMENTOLOGICAL FILE;BOTTOM TOPOGRAPHY FILE;REFERENCE FILE;HYDRODYNAMIC FILE;WQ STEERING FILE;FORTRAN FILE FOR READING DATA;CHIMIE FORTRAN FILE;SOURCE POINTS FILE;IMPOSED CONCENTRATIONS FILE;FORCING FUNCTIONS FILE;INITIAL CONDITIONS FILE;QE PARAMETERS DICTIONARY;FORTRAN FILE;STEERING FILE;DICTIONARY";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[90] = entiteTableau.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "DESCRIPTION DES LIBRAIRIES";
        valueByLanguage[1] = "DESCRIPTION OF THE LIBRARIES";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeChaine);
        entiteTableau.setTaille(6);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Description des librairies de SUBIEF2D";
        valueByLanguage[1] = "LIBRARIES description for SUBIEF2D";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV.LLL;telemac2d|tel2d_VVV|PPP|telemac2dMMMVVV.LLL;bief|bief_VVV|PPP|biefMMMVVV.LLL;damocles|damo_VVV|PPP|damoMMMVVV.LLL;paravoid|paravoid_VVV|PPP|paravoidMMMVVV.LLL;special|special_VVV|PPP|specialMMMVVV.LLL";
        valueByLanguage[1] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV.LLL;telemac2d|tel2d_VVV|PPP|telemac2dMMMVVV.LLL;bief|bief_VVV|PPP|biefMMMVVV.LLL;damocles|damo_VVV|PPP|damoMMMVVV.LLL;paravoid|paravoid_VVV|PPP|paravoidMMMVVV.LLL;special|special_VVV|PPP|specialMMMVVV.LLL";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[91] = entiteTableau.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "EXECUTABLE PAR DEFAUT";
        valueByLanguage[1] = "DEFAULT EXECUTABLE";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeChaine);
        entiteTableau.setTaille(1);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Executable par defaut de SUBIEF2D";
        valueByLanguage[1] = "Default executable for SUBIEF2D";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV.exe";
        valueByLanguage[1] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV.exe";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[92] = entiteTableau.getImmutable();
        typeChaine = new DicoDataType.Chaine();
        valueByLanguage[0] = "EXECUTABLE PARALLELE PAR DEFAUT";
        valueByLanguage[1] = "DEFAULT PARALLEL EXECUTABLE";
        entiteTableau = new DicoEntite.Tableau(valueByLanguage[languageIndex_], typeChaine);
        entiteTableau.setTaille(1);
        entiteTableau.setDynamique(true);
        entiteTableau.setNiveau(1);
        valueByLanguage[0] = "Executable parallele par defaut de Subief-2D";
        valueByLanguage[1] = "Executable parallele par defaut de Subief-2D";
        entiteTableau.setAide(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "ENTREES-SORTIES, GENERALITES";
        valueByLanguage[1] = "INPUT-OUTPUT, INFORMATION";
        entiteTableau.setRubrique(valueByLanguage[languageIndex_]);
        valueByLanguage[0] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV_MP.exe";
        valueByLanguage[1] = "subief2d|subief2d_VVV|PPP|subief2dMMMVVV_MP.exe";
        entiteTableau.setDefautValue(valueByLanguage[languageIndex_]);
        entites[93] = entiteTableau.getImmutable();
        return entites;
    }
}
