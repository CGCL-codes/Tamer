package stms;

/**
 *
 * @author lenovo
 */
public class AnalyseDialog extends javax.swing.JFrame {

    /** Creates new form AnalyseDialog */
    public AnalyseDialog() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        String subject[] = { "线性代数", "大学英语3", "数据结构", "数据结构实验", "数据库", "数据库实验", "数字电子技术", "数字电子技术实验", "电路分析2", "毛邓3", "体育" };
        jComboBoxAve = new javax.swing.JComboBox(subject);
        jButtonAve = new javax.swing.JButton();
        jTextFieldAve = new javax.swing.JTextField(15);
        jPanel1 = new javax.swing.JPanel();
        jComboBoxMax = new javax.swing.JComboBox(subject);
        jTextFieldMax = new javax.swing.JTextField(20);
        jButtonMax = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxMin = new javax.swing.JComboBox(subject);
        jButtonMin = new javax.swing.JButton();
        jTextFieldMin = new javax.swing.JTextField(15);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jComboBoxAve.setModel(new javax.swing.DefaultComboBoxModel(subject));
        jButtonAve.setText("确定");
        jButtonAve.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAveActionPerformed(evt);
            }
        });
        jTextFieldAve.setText(null);
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(44, 44, 44).addComponent(jComboBoxAve, 0, 82, Short.MAX_VALUE).addGap(77, 77, 77).addComponent(jButtonAve, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE).addGap(68, 68, 68)).addGroup(jPanel2Layout.createSequentialGroup().addGap(129, 129, 129).addComponent(jTextFieldAve).addGap(133, 133, 133)));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(44, 44, 44).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jComboBoxAve, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE).addComponent(jButtonAve, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGap(59, 59, 59).addComponent(jTextFieldAve).addGap(82, 82, 82)));
        jTabbedPane1.addTab("查询平均分", jPanel2);
        jComboBoxMax.setModel(new javax.swing.DefaultComboBoxModel(subject));
        jComboBoxMax.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMaxActionPerformed(evt);
            }
        });
        jTextFieldMax.setText(null);
        jButtonMax.setText("确定");
        jButtonMax.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMaxActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(55, 55, 55).addComponent(jComboBoxMax, 0, 79, Short.MAX_VALUE).addGap(96, 96, 96).addComponent(jButtonMax, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE).addGap(41, 41, 41)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addGap(138, 138, 138).addComponent(jTextFieldMax).addGap(124, 124, 124)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(19, 19, 19).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jComboBoxMax)).addGap(60, 60, 60).addComponent(jTextFieldMax).addGap(106, 106, 106)));
        jTabbedPane1.addTab("查询最高分", jPanel1);
        jComboBoxMin.setModel(new javax.swing.DefaultComboBoxModel(subject));
        jButtonMin.setText("确定");
        jButtonMin.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMinActionPerformed(evt);
            }
        });
        jTextFieldMin.setText("");
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(49, 49, 49).addComponent(jComboBoxMin, 0, 76, Short.MAX_VALUE).addGap(79, 79, 79).addComponent(jButtonMin, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE).addGap(67, 67, 67)).addGroup(jPanel3Layout.createSequentialGroup().addGap(124, 124, 124).addComponent(jTextFieldMin).addGap(138, 138, 138)));
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGap(46, 46, 46).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButtonMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jComboBoxMin, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)).addGap(60, 60, 60).addComponent(jTextFieldMin, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE).addGap(77, 77, 77)));
        jTabbedPane1.addTab("查询最低分", jPanel3);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 326, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 258, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)));
        pack();
    }

    private void jButtonAveActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButtonAve) {
            int pos = jComboBoxAve.getSelectedIndex();
            int num = InputDialog.nWords;
            int i;
            double sum = 0;
            if (pos == 0) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getXiandai());
                }
            } else if (pos == 1) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getEng3());
                }
            } else if (pos == 2) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getDs());
                }
            } else if (pos == 3) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getDslab());
                }
            } else if (pos == 4) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getDb());
                }
            } else if (pos == 5) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getDblab());
                }
            } else if (pos == 6) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getShudian());
                }
            } else if (pos == 7) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getShudianlab());
                }
            } else if (pos == 8) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getDianlu());
                }
            } else if (pos == 9) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getMaodeng3());
                }
            } else if (pos == 10) {
                for (i = 0; i < num; i++) {
                    sum = sum + Double.valueOf(InputDialog.data.elementAt(i).getPe());
                }
            }
            jTextFieldAve.setText(Double.toString(sum / num));
        }
    }

    private void jComboBoxMaxActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void jButtonMaxActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButtonMax) {
            int pos = jComboBoxMax.getSelectedIndex();
            int num = InputDialog.nWords;
            double maxGrade = -1;
            int i;
            int record = 0;
            if (pos == 0) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getXiandai());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 1) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getEng3());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 2) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDs());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 3) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDslab());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 4) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDb());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 5) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDblab());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 6) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getShudian());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 7) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getShudianlab());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 8) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDianlu());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 9) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getMaodeng3());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 10) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getPe());
                    if (maxGrade < temp) {
                        maxGrade = temp;
                        record = i;
                    }
                }
            }
            String temp = "";
            temp += InputDialog.data.elementAt(record).getID();
            temp += " ";
            temp += InputDialog.data.elementAt(record).getName();
            temp += " ";
            temp += Double.toString(maxGrade);
            jTextFieldMax.setText(temp);
        }
    }

    private void jButtonMinActionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == jButtonMin) {
            int pos = jComboBoxMin.getSelectedIndex();
            int num = InputDialog.nWords;
            double minGrade = 101;
            int i;
            int record = 0;
            if (pos == 0) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getXiandai());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 1) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getEng3());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 2) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDs());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 3) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDslab());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 4) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDb());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 5) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDblab());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 6) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getShudian());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 7) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getShudianlab());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 8) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getDianlu());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 9) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getMaodeng3());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            } else if (pos == 10) {
                for (i = 0; i < num; i++) {
                    double temp = Double.valueOf(InputDialog.data.elementAt(i).getPe());
                    if (minGrade > temp) {
                        minGrade = temp;
                        record = i;
                    }
                }
            }
            String temp = "";
            temp += InputDialog.data.elementAt(record).getID();
            temp += " ";
            temp += InputDialog.data.elementAt(record).getName();
            temp += " ";
            temp += Double.toString(minGrade);
            jTextFieldMin.setText(temp);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new AnalyseDialog().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButtonAve;

    private javax.swing.JButton jButtonMax;

    private javax.swing.JButton jButtonMin;

    private javax.swing.JComboBox jComboBoxAve;

    private javax.swing.JComboBox jComboBoxMax;

    private javax.swing.JComboBox jComboBoxMin;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JTabbedPane jTabbedPane1;

    private javax.swing.JTextField jTextFieldAve;

    private javax.swing.JTextField jTextFieldMax;

    private javax.swing.JTextField jTextFieldMin;
}
