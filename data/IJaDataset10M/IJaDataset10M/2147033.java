package solarex.ui.panels;

import javax.swing.DefaultListModel;
import solarex.ship.Ship;
import solarex.ship.components.ShipComponent;
import solarex.util.FontFactory;

/**
 *
 * @author Hj. Malthaner
 */
public class ShipInfoPanel extends javax.swing.JPanel {

    /** Creates new form ShipInfoPanel */
    public ShipInfoPanel(Ship ship) {
        ship.recalculateCargoSpace();
        initComponents();
        shipNameField.setFont(FontFactory.getLabelHeading());
        cargoModuleLabel.setFont(FontFactory.getLabelHeading());
        driveLabel.setFont(FontFactory.getLabelHeading());
        cabinsLabel.setFont(FontFactory.getLabelHeading());
        sensorsLabel.setFont(FontFactory.getLabelHeading());
        installedEquipmentLabel.setFont(FontFactory.getLabelHeading());
        shieldingLabel.setFont(FontFactory.getLabelHeading());
        cashLabel.setFont(FontFactory.getLabelHeading());
        cargoModuleField.setFont(FontFactory.getLarger());
        driveField.setFont(FontFactory.getLarger());
        cabinsField.setFont(FontFactory.getLarger());
        sensorsField.setFont(FontFactory.getLarger());
        shieldingField1.setFont(FontFactory.getLarger());
        cashField.setFont(FontFactory.getLarger());
        descriptionField.setFont(FontFactory.getNormal());
        equipmentList.setFont(FontFactory.getLarger());
        descriptionField.setText("<html>Small but reliable, this is usually the first ship" + " of most space prospectors. It is cheap to purchase and" + " easy to repair, even with limited repair abilities or" + " materials.<br><br>" + "The biggest drawback of the ship the limited payload, " + " which even must be shared between cargo and equipment. " + " The ship can be controlled by" + " a single person, but it doesn't even provide room and" + " support for a second passenger unless a passenger cabin " + " is installed.</html>");
        fillComponentList(ship);
    }

    private void fillComponentList(Ship ship) {
        final DefaultListModel shipModel = new DefaultListModel();
        for (final ShipComponent comp : ship.equipment.components) {
            shipModel.addElement(new EquipmentWrapper(comp));
        }
        equipmentList.setModel(shipModel);
        driveField.setText("" + ship.equipment.getHyperjumpRange() + "ly");
        cabinsField.setText("" + ship.equipment.getPassengerCapacity());
        cashField.setText("" + ship.cargo.money + "$");
        cargoModuleField.setText("" + ship.equipment.getWeight() + "/" + ship.equipmentSpace + "t");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        contenPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        cashField = new javax.swing.JLabel();
        shipNameField = new javax.swing.JLabel();
        cashLabel = new javax.swing.JLabel();
        driveLabel = new javax.swing.JLabel();
        driveField = new javax.swing.JLabel();
        cargoModuleLabel = new javax.swing.JLabel();
        cargoModuleField = new javax.swing.JLabel();
        cabinsLabel = new javax.swing.JLabel();
        cabinsField = new javax.swing.JLabel();
        descriptionField = new javax.swing.JLabel();
        sensorsLabel = new javax.swing.JLabel();
        sensorsField = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        equipmentList = new javax.swing.JList();
        installedEquipmentLabel = new javax.swing.JLabel();
        shieldingField1 = new javax.swing.JLabel();
        shieldingLabel = new javax.swing.JLabel();
        setBackground(java.awt.Color.black);
        setForeground(java.awt.Color.green);
        setLayout(new java.awt.GridBagLayout());
        contenPanel.setBackground(new java.awt.Color(51, 51, 0));
        contenPanel.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.darkGray));
        contenPanel.setMinimumSize(new java.awt.Dimension(800, 600));
        contenPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        contenPanel.setLayout(null);
        titleLabel.setFont(new java.awt.Font("SansSerif", 1, 18));
        titleLabel.setForeground(java.awt.Color.white);
        titleLabel.setText("Ship Information");
        contenPanel.add(titleLabel);
        titleLabel.setBounds(20, 10, 420, 40);
        cashField.setForeground(java.awt.Color.white);
        cashField.setText("0$");
        contenPanel.add(cashField);
        cashField.setBounds(140, 510, 290, 30);
        shipNameField.setForeground(java.awt.Color.orange);
        shipNameField.setText("Space Bug, a \"Tin Can\" class ship. ");
        contenPanel.add(shipNameField);
        shipNameField.setBounds(20, 60, 270, 30);
        cashLabel.setForeground(java.awt.Color.green);
        cashLabel.setText("Cash:");
        contenPanel.add(cashLabel);
        cashLabel.setBounds(20, 510, 100, 30);
        driveLabel.setForeground(java.awt.Color.green);
        driveLabel.setText("Drive Range:");
        contenPanel.add(driveLabel);
        driveLabel.setBounds(20, 110, 100, 30);
        driveField.setForeground(java.awt.Color.white);
        driveField.setText("Short range interstellar jump drive");
        contenPanel.add(driveField);
        driveField.setBounds(150, 110, 290, 30);
        cargoModuleLabel.setForeground(java.awt.Color.green);
        cargoModuleLabel.setText("Cargo Space:");
        contenPanel.add(cargoModuleLabel);
        cargoModuleLabel.setBounds(20, 130, 100, 30);
        cargoModuleField.setForeground(java.awt.Color.white);
        cargoModuleField.setText("Standard cargo module (5t)");
        contenPanel.add(cargoModuleField);
        cargoModuleField.setBounds(150, 130, 290, 30);
        cabinsLabel.setForeground(java.awt.Color.green);
        cabinsLabel.setText("Passenger Cap.:");
        contenPanel.add(cabinsLabel);
        cabinsLabel.setBounds(20, 150, 130, 30);
        cabinsField.setForeground(java.awt.Color.white);
        cabinsField.setText("None (1 max.)");
        contenPanel.add(cabinsField);
        cabinsField.setBounds(150, 150, 290, 30);
        descriptionField.setForeground(java.awt.Color.lightGray);
        descriptionField.setText("Ship description.");
        descriptionField.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        contenPanel.add(descriptionField);
        descriptionField.setBounds(400, 40, 300, 160);
        sensorsLabel.setForeground(java.awt.Color.green);
        sensorsLabel.setText("Sensors:");
        contenPanel.add(sensorsLabel);
        sensorsLabel.setBounds(20, 170, 100, 30);
        sensorsField.setForeground(java.awt.Color.white);
        sensorsField.setText("Optical Standard");
        contenPanel.add(sensorsField);
        sensorsField.setBounds(150, 170, 290, 30);
        equipmentList.setBackground(java.awt.Color.darkGray);
        equipmentList.setForeground(java.awt.Color.lightGray);
        equipmentList.setModel(new javax.swing.AbstractListModel() {

            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane1.setViewportView(equipmentList);
        contenPanel.add(jScrollPane1);
        jScrollPane1.setBounds(20, 270, 340, 210);
        installedEquipmentLabel.setForeground(java.awt.Color.green);
        installedEquipmentLabel.setText("Installed Equipment");
        contenPanel.add(installedEquipmentLabel);
        installedEquipmentLabel.setBounds(20, 230, 250, 30);
        shieldingField1.setForeground(java.awt.Color.white);
        shieldingField1.setText("Low radiation shielding");
        contenPanel.add(shieldingField1);
        shieldingField1.setBounds(150, 190, 290, 30);
        shieldingLabel.setForeground(java.awt.Color.green);
        shieldingLabel.setText("Shielding:");
        contenPanel.add(shieldingLabel);
        shieldingLabel.setBounds(20, 190, 100, 30);
        add(contenPanel, new java.awt.GridBagConstraints());
    }

    private javax.swing.JLabel cabinsField;

    private javax.swing.JLabel cabinsLabel;

    private javax.swing.JLabel cargoModuleField;

    private javax.swing.JLabel cargoModuleLabel;

    private javax.swing.JLabel cashField;

    private javax.swing.JLabel cashLabel;

    private javax.swing.JPanel contenPanel;

    private javax.swing.JLabel descriptionField;

    private javax.swing.JLabel driveField;

    private javax.swing.JLabel driveLabel;

    private javax.swing.JList equipmentList;

    private javax.swing.JLabel installedEquipmentLabel;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JLabel sensorsField;

    private javax.swing.JLabel sensorsLabel;

    private javax.swing.JLabel shieldingField1;

    private javax.swing.JLabel shieldingLabel;

    private javax.swing.JLabel shipNameField;

    private javax.swing.JLabel titleLabel;

    private class EquipmentWrapper {

        private ShipComponent comp;

        public EquipmentWrapper(ShipComponent comp) {
            this.comp = comp;
        }

        @Override
        public String toString() {
            StringBuilder buf = new StringBuilder(" ");
            buf.append(comp.getName());
            return buf.toString();
        }

        private ShipComponent getComponent() {
            return comp;
        }
    }
}
