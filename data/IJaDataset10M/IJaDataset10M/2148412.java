package org.eucontract.agents.stubs.AgentFactory;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.2-hudson-181-RC1
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "AgentFactoryService", targetNamespace = "http://agents.eucontract.org/", wsdlLocation = "http://localhost:8107/AgentWebServiceLib/AgentFactoryService?wsdl")
public class AgentFactoryService extends Service {

    private static URL AGENTFACTORYSERVICE_WSDL_LOCATION;

    private static final Logger logger = Logger.getLogger(org.eucontract.agents.stubs.AgentFactory.AgentFactoryService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.eucontract.agents.stubs.AgentFactory.AgentFactoryService.class.getResource(".");
            url = new URL(baseUrl, "http://localhost:8107/AgentWebServiceLib/AgentFactoryService?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost:8107/AgentWebServiceLib/AgentFactoryService?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        AGENTFACTORYSERVICE_WSDL_LOCATION = url;
    }

    public void setURL(String stURL) {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.eucontract.agents.stubs.AgentFactory.AgentFactoryService.class.getResource(".");
            url = new URL(baseUrl, stURL + "?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '" + stURL + "?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        AGENTFACTORYSERVICE_WSDL_LOCATION = url;
    }

    public AgentFactoryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AgentFactoryService() {
        super(AGENTFACTORYSERVICE_WSDL_LOCATION, new QName("http://agents.eucontract.org/", "AgentFactoryService"));
    }

    /**
     * 
     * @return
     *     returns AgentFactory
     */
    @WebEndpoint(name = "AgentFactoryPort")
    public AgentFactory getAgentFactoryPort() {
        return super.getPort(new QName("http://agents.eucontract.org/", "AgentFactoryPort"), AgentFactory.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AgentFactory
     */
    @WebEndpoint(name = "AgentFactoryPort")
    public AgentFactory getAgentFactoryPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://agents.eucontract.org/", "AgentFactoryPort"), AgentFactory.class, features);
    }
}
