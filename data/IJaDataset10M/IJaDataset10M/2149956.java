package fr.cpbrennestt.metier.entite;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import fr.cpbrennestt.metier.entite.comparateurs.ComparateurBureau;
import fr.cpbrennestt.metier.entite.comparateurs.ComparateurBureauOrdre;

/**
 * MembreBureau generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "membre_bureau", catalog = "cpbrennestt")
public class MembreBureau implements java.io.Serializable, Comparable<MembreBureau> {

    public static String DEFAUT_PHOTO = "silhouette.GIF";

    private Integer idBureau;

    private Joueur joueur;

    private int ordreAffichage;

    private String fonction;

    private boolean afficheCoordonnees;

    private String nomPhoto;

    private ComparateurBureau comparateur;

    public MembreBureau() {
        comparateur = new ComparateurBureauOrdre();
    }

    public MembreBureau(Joueur joueur, int ordreAffichage, boolean afficheCoordonnees) {
        this.joueur = joueur;
        this.ordreAffichage = ordreAffichage;
        this.afficheCoordonnees = afficheCoordonnees;
        comparateur = new ComparateurBureauOrdre();
    }

    public MembreBureau(Joueur joueur, int ordreAffichage, String fonction, boolean afficheCoordonnees, String nomPhoto) {
        this.joueur = joueur;
        this.ordreAffichage = ordreAffichage;
        this.fonction = fonction;
        this.afficheCoordonnees = afficheCoordonnees;
        this.nomPhoto = nomPhoto;
        comparateur = new ComparateurBureauOrdre();
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id_bureau", unique = true, nullable = false)
    public Integer getIdBureau() {
        return this.idBureau;
    }

    public void setIdBureau(Integer idBureau) {
        this.idBureau = idBureau;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "joueur", nullable = false)
    public Joueur getJoueur() {
        return this.joueur;
    }

    public void setJoueur(Joueur joueur) {
        this.joueur = joueur;
    }

    @Column(name = "ordre_affichage", nullable = false)
    public int getOrdreAffichage() {
        return this.ordreAffichage;
    }

    public void setOrdreAffichage(int ordreAffichage) {
        this.ordreAffichage = ordreAffichage;
    }

    @Column(name = "fonction", length = 100)
    public String getFonction() {
        return this.fonction;
    }

    public void setFonction(String fonction) {
        this.fonction = fonction;
    }

    @Column(name = "affiche_coordonnees", nullable = false)
    public boolean isAfficheCoordonnees() {
        return this.afficheCoordonnees;
    }

    public void setAfficheCoordonnees(boolean afficheCoordonnees) {
        this.afficheCoordonnees = afficheCoordonnees;
    }

    @Column(name = "nom_photo", length = 150)
    public String getNomPhoto() {
        return this.nomPhoto;
    }

    public void setNomPhoto(String nomPhoto) {
        this.nomPhoto = nomPhoto;
    }

    public int compareTo(MembreBureau m) {
        return comparateur.comparer(this, m);
    }

    @Override
    public boolean equals(Object obj) {
        return super.equals(obj);
    }

    @Override
    public int hashCode() {
        return super.hashCode();
    }
}
