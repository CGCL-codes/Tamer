package com.aufa.elSecreto.modelo.gui.producto;

import com.aufa.elSecreto.modelo.dominio.Producto;
import com.aufa.elSecreto.modelo.excepcion.ExcepcionProducto;
import com.aufa.elSecreto.modelo.servicios.ServicioProducto;
import java.awt.Frame;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Esta ventana nos muestra los productos disponibles
 * Nos permite realizar alta, baja o modificacion.
 * @author fabricio
 * @author Caligares Miguel Augusto
 * @email mcaligares@gmail.com
 * @version 1.1
 */
public class ListaProducto extends javax.swing.JDialog {

    private Frame frame;

    private List<Producto> productoList;

    private ServicioProducto servicioProducto = new ServicioProducto();

    /** Creates new form ListaProducto */
    public ListaProducto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        frame = parent;
        actualizarTabla();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        productoTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        descripcionTextField = new javax.swing.JTextField();
        buscarButton = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        altaProductoMenuItem = new javax.swing.JMenuItem();
        modificarProductoMenuItem = new javax.swing.JMenuItem();
        eliminarProductoMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gesti√≥n de Productos");
        setResizable(false);
        productoTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        productoTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] { "Descripcion", "Precio" }) {

            boolean[] canEdit = new boolean[] { false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(productoTable);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar"));
        jLabel1.setText("Descripcion:");
        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aufa/elSecreto/resources/buscar.png")));
        buscarButton.setText("Buscar producto");
        buscarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(descripcionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE).addComponent(buscarButton).addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(descripcionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarButton)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aufa/elSecreto/resources/agregar.png")));
        btnNuevo.setText("Nuevo producto");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aufa/elSecreto/resources/remover.png")));
        btnEliminar.setText("Quitar producto");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aufa/elSecreto/resources/actualizar.png")));
        btnModificar.setText("Modificar producto");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/aufa/elSecreto/resources/confirmar.png")));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        jMenu1.setText("Producto");
        altaProductoMenuItem.setText("Agregar");
        altaProductoMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaProductoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(altaProductoMenuItem);
        modificarProductoMenuItem.setText("Modificar");
        modificarProductoMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarProductoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(modificarProductoMenuItem);
        eliminarProductoMenuItem.setText("Eliminar");
        eliminarProductoMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarProductoMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(eliminarProductoMenuItem);
        jMenuBar1.add(jMenu1);
        jMenu2.setText("Ventana");
        jMenuItem1.setText("Cerrar Ventana");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);
        jMenuBar1.add(jMenu2);
        setJMenuBar(jMenuBar1);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE).addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addGroup(layout.createSequentialGroup().addGap(33, 33, 33).addComponent(btnNuevo).addGap(69, 69, 69).addComponent(btnEliminar).addGap(64, 64, 64).addComponent(btnModificar)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(618, Short.MAX_VALUE).addComponent(btnAceptar))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnNuevo).addComponent(btnEliminar).addComponent(btnModificar)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(btnAceptar).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        pack();
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void altaProductoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        NuevoProducto();
    }

    private void modificarProductoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        ModificarProducto();
    }

    private void eliminarProductoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        EliminarProducto();
    }

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {
        actualizarTabla(descripcionTextField.getText());
    }

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {
        NuevoProducto();
    }

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {
        EliminarProducto();
    }

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {
        ModificarProducto();
    }

    private javax.swing.JMenuItem altaProductoMenuItem;

    private javax.swing.JButton btnAceptar;

    private javax.swing.JButton btnEliminar;

    private javax.swing.JButton btnModificar;

    private javax.swing.JButton btnNuevo;

    private javax.swing.JButton buscarButton;

    private javax.swing.JTextField descripcionTextField;

    private javax.swing.JMenuItem eliminarProductoMenuItem;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JMenu jMenu1;

    private javax.swing.JMenu jMenu2;

    private javax.swing.JMenuBar jMenuBar1;

    private javax.swing.JMenuItem jMenuItem1;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JMenuItem modificarProductoMenuItem;

    private javax.swing.JTable productoTable;

    /**
     * Insertar un nuevo Producto
     */
    private void NuevoProducto() {
        new AltaProducto(frame, true).setVisible(true);
        actualizarTabla();
    }

    /**
     * Eliminar un producto.
     */
    private void EliminarProducto() {
        try {
            Producto producto = productoList.get(productoTable.getSelectedRow());
            int op = JOptionPane.showConfirmDialog(null, "Esta seguro que desea eliminar este producto?", "Eliminar Producto", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (op == JOptionPane.OK_OPTION) {
                servicioProducto.EliminarProducto(producto);
                actualizarTabla();
            }
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } catch (ExcepcionProducto ex) {
            JOptionPane.showMessageDialog(null, ex.getErrorCode() + " " + ex.getErrorMessage());
        } catch (Exception ex) {
            System.out.println("ERROR EXCEPTION:\n" + ex);
        }
    }

    /**
     * Modificar  un producto.
     */
    private void ModificarProducto() {
        try {
            Producto producto = productoList.get(productoTable.getSelectedRow());
            new AltaProducto(frame, true, producto).setVisible(true);
            actualizarTabla();
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ningun producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * Actualizamos la tabla con los productos disponibles
     */
    private void actualizarTabla() {
        try {
            DefaultTableModel modelProducto = new DefaultTableModel();
            modelProducto.addColumn("Descripcion");
            modelProducto.addColumn("Precio");
            productoList = servicioProducto.ObtenerProductos();
            for (Producto producto : productoList) {
                Object[] datoProducto = { producto.getDescripcion(), producto.getPrecio() };
                modelProducto.addRow(datoProducto);
            }
            productoTable.setModel(modelProducto);
        } catch (ExcepcionProducto ex) {
            JOptionPane.showMessageDialog(null, ex.getErrorCode() + " " + ex.getErrorMessage());
        } catch (Exception ex) {
            System.out.println("ERROR EXCEPTION:\n" + ex);
        }
    }

    /**
     * Llenamos la tabla con los productos que pertenescan a la descripcion
     * @param descripcion
     */
    private void actualizarTabla(String descripcion) {
        try {
            DefaultTableModel modelProducto = new DefaultTableModel();
            modelProducto.addColumn("Descripcion");
            modelProducto.addColumn("Precio");
            productoList = servicioProducto.ObtenerProductosByStartDescripcion(descripcion);
            for (Producto producto : productoList) {
                Object[] datoProducto = { producto.getDescripcion(), producto.getPrecio() };
                modelProducto.addRow(datoProducto);
            }
            productoTable.setModel(modelProducto);
        } catch (ExcepcionProducto ex) {
            JOptionPane.showMessageDialog(null, ex.getErrorCode() + " " + ex.getErrorMessage());
        } catch (Exception ex) {
            System.out.println("ERROR EXCEPTION:\n" + ex);
        }
    }
}
