package org.gwanted.gwt.core.client.util;

import java.util.ArrayList;
import java.util.Iterator;

/**
 * @author Diego Fernandez Santos
 */
public class RingBuffer implements IRingBuffer {

    private static final int DEFAULT_SIZE = 5;

    private Object[] buffer;

    private int first;

    private int last;

    public RingBuffer() {
        this(DEFAULT_SIZE);
    }

    /**
   * @param size int, The capacity of the buffer
   */
    public RingBuffer(final int size) {
        this.buffer = new Object[size + 1];
        this.first = 0;
        this.last = 0;
    }

    /**
   * Returns an Iterator generated by the elements contained within
   * the internal object array
   * @return Iterator, Iterator, contains the Objects stored within the
   * object array
   */
    public final Iterator getValues() {
        final ArrayList col = new ArrayList();
        int itemIndex;
        itemIndex = this.first;
        while (itemIndex != this.last) {
            col.add(this.buffer[itemIndex]);
            itemIndex = (itemIndex + 1) % this.buffer.length;
        }
        return col.iterator();
    }

    public final void putValue(final Object value) {
        int size;
        size = this.buffer.length;
        this.buffer[this.last] = value;
        this.last = (this.last + 1) % size;
        if (this.first == this.last) {
            this.first = (this.first + 1) % size;
        }
    }

    /**
   * Clear the buffer an create a new buffer of the specify size
   * @param size int, the new buffer size
   */
    public final void setSize(final int size) {
        this.buffer = new Object[size + 1];
        clear();
    }

    public final int getSize() {
        return this.buffer.length - 1;
    }

    /**
   * Clear the current buffer content
   */
    public final void clear() {
        this.first = 0;
        this.last = 0;
    }
}
