package org.dmd.dmr.server.ldap.generated.dmw;

import org.dmd.dmc.*;
import org.dmd.dmc.types.FullyQualifiedName;
import org.dmd.dmr.server.base.extended.HierarchicObject;
import org.dmd.dmr.server.ldap.extended.LDAPHierarchicObject;
import org.dmd.dmr.shared.ldap.generated.dmo.LDAPHierarchicObjectDMO;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.MetaDMSAG;
import org.dmd.dms.generated.types.DmcTypeModifierMV;

/**
 * The LDAPHierarchicObject provides some additional structure and
 * conventions to the HierarchicObject to make it usable in conjunction with
 * an LDAP enabled directory server. Classes derived from
 * LDAPHierarchicObject must be defined in a schema that has been extended
 * with the LDAPSchemaExtension auxiliary class and must themselves be
 * extended with the LDAPClassExtension auxiliary class; the class must have
 * a defined naming attribute. Furthermore, naming attributes should be
 * unique for each defined class.
 * <P>
 * Generated from the dmr.ldap schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGeneratorNew.dumpWrapper(BaseDMWGeneratorNew.java:365)
 */
public abstract class LDAPHierarchicObjectDMW extends HierarchicObject implements DmcNamedObjectIF {

    public LDAPHierarchicObjectDMW() {
        super(new LDAPHierarchicObjectDMO(), org.dmd.dmr.server.ldap.generated.DmrLdapSchemaAG._LDAPHierarchicObject);
    }

    public LDAPHierarchicObjectDMW(DmcTypeModifierMV mods) {
        super(new LDAPHierarchicObjectDMO(mods), org.dmd.dmr.server.ldap.generated.DmrLdapSchemaAG._LDAPHierarchicObject);
    }

    public LDAPHierarchicObject getModificationRecorder() {
        LDAPHierarchicObject rc = new LDAPHierarchicObject();
        rc.setFQN(getFQN());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return (rc);
    }

    public LDAPHierarchicObjectDMW(LDAPHierarchicObjectDMO obj) {
        super(obj, org.dmd.dmr.server.ldap.generated.DmrLdapSchemaAG._LDAPHierarchicObject);
    }

    public LDAPHierarchicObject cloneIt() {
        LDAPHierarchicObject rc = new LDAPHierarchicObject();
        rc.setDmcObject(getDMO().cloneIt());
        return (rc);
    }

    public LDAPHierarchicObjectDMO getDMO() {
        return ((LDAPHierarchicObjectDMO) core);
    }

    protected LDAPHierarchicObjectDMW(LDAPHierarchicObjectDMO obj, ClassDefinition cd) {
        super(obj, cd);
    }

    public FullyQualifiedName getObjectName() {
        return (((LDAPHierarchicObjectDMO) core).getFQN());
    }

    public int hashCode() {
        return (getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute() {
        return (((LDAPHierarchicObjectDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj) {
        if (obj instanceof LDAPHierarchicObjectDMW) {
            return (getObjectName().equals(((LDAPHierarchicObjectDMW) obj).getObjectName()));
        }
        return (false);
    }

    public FullyQualifiedName getFQN() {
        return (((LDAPHierarchicObjectDMO) core).getFQN());
    }

    public void setFQN(Object value) throws DmcValueException {
        ((LDAPHierarchicObjectDMO) core).setFQN(value);
    }

    public void setFQN(FullyQualifiedName value) {
        ((LDAPHierarchicObjectDMO) core).setFQN(value);
    }

    public void remFQN() {
        ((LDAPHierarchicObjectDMO) core).remFQN();
    }
}
