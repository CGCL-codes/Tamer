package ispyb.server.webservice.AutoGenerated.WSDL2Java;

public class DiffractionPlanWebServiceFacadeLocalServiceLocator extends org.apache.axis.client.Service implements ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceFacadeLocalService {

    private final java.lang.String DiffractionPlanWebService_address = "http://ehtpx1.embl-grenoble.fr:8080/jboss-net/services/DiffractionPlanWebService";

    public java.lang.String getDiffractionPlanWebServiceAddress() {
        return DiffractionPlanWebService_address;
    }

    private java.lang.String DiffractionPlanWebServiceWSDDServiceName = "DiffractionPlanWebService";

    public java.lang.String getDiffractionPlanWebServiceWSDDServiceName() {
        return DiffractionPlanWebServiceWSDDServiceName;
    }

    public void setDiffractionPlanWebServiceWSDDServiceName(java.lang.String name) {
        DiffractionPlanWebServiceWSDDServiceName = name;
    }

    public ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceFacadeLocal getDiffractionPlanWebService() throws javax.xml.rpc.ServiceException {
        java.net.URL endpoint;
        try {
            endpoint = new java.net.URL(DiffractionPlanWebService_address);
        } catch (java.net.MalformedURLException e) {
            throw new javax.xml.rpc.ServiceException(e);
        }
        return getDiffractionPlanWebService(endpoint);
    }

    public ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceFacadeLocal getDiffractionPlanWebService(java.net.URL portAddress) throws javax.xml.rpc.ServiceException {
        try {
            ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceSoapBindingStub _stub = new ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceSoapBindingStub(portAddress, this);
            _stub.setPortName(getDiffractionPlanWebServiceWSDDServiceName());
            return _stub;
        } catch (org.apache.axis.AxisFault e) {
            return null;
        }
    }

    /**
     * For the given interface, get the stub implementation.
     * If this service has no port for the given interface,
     * then ServiceException is thrown.
     */
    public java.rmi.Remote getPort(Class serviceEndpointInterface) throws javax.xml.rpc.ServiceException {
        try {
            if (ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceFacadeLocal.class.isAssignableFrom(serviceEndpointInterface)) {
                ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceSoapBindingStub _stub = new ispyb.server.webservice.AutoGenerated.WSDL2Java.DiffractionPlanWebServiceSoapBindingStub(new java.net.URL(DiffractionPlanWebService_address), this);
                _stub.setPortName(getDiffractionPlanWebServiceWSDDServiceName());
                return _stub;
            }
        } catch (java.lang.Throwable t) {
            throw new javax.xml.rpc.ServiceException(t);
        }
        throw new javax.xml.rpc.ServiceException("There is no stub implementation for the interface:  " + (serviceEndpointInterface == null ? "null" : serviceEndpointInterface.getName()));
    }

    /**
     * For the given interface, get the stub implementation.
     * If this service has no port for the given interface,
     * then ServiceException is thrown.
     */
    public java.rmi.Remote getPort(javax.xml.namespace.QName portName, Class serviceEndpointInterface) throws javax.xml.rpc.ServiceException {
        if (portName == null) {
            return getPort(serviceEndpointInterface);
        }
        String inputPortName = portName.getLocalPart();
        if ("DiffractionPlanWebService".equals(inputPortName)) {
            return getDiffractionPlanWebService();
        } else {
            java.rmi.Remote _stub = getPort(serviceEndpointInterface);
            ((org.apache.axis.client.Stub) _stub).setPortName(portName);
            return _stub;
        }
    }

    public javax.xml.namespace.QName getServiceName() {
        return new javax.xml.namespace.QName("http://193.48.220.44:8080/jboss-net/services/DiffractionPlanWebService", "DiffractionPlanWebServiceFacadeLocalService");
    }

    private java.util.HashSet ports = null;

    public java.util.Iterator getPorts() {
        if (ports == null) {
            ports = new java.util.HashSet();
            ports.add(new javax.xml.namespace.QName("DiffractionPlanWebService"));
        }
        return ports.iterator();
    }
}
