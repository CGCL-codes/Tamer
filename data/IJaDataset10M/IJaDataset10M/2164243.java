package gatchan.highlight.color;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 04/11/10 13:35 from the specification file
 * <tt>Colors.flex</tt>
 */
class FlexColorScanner {

    /** This character denotes the end of file */
    public static final int YYEOF = -1;

    /** initial size of the lookahead buffer */
    private static final int ZZ_BUFFERSIZE = 16384;

    /** lexical states */
    public static final int YYINITIAL = 0;

    /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
    private static final int ZZ_LEXSTATE[] = { 0, 0 };

    /** 
   * Translates characters to character classes
   */
    private static final String ZZ_CMAP_PACKED = "\11\0\1\0\26\0\1\0\2\0\1\13\11\0\1\0\2\0\1\16" + "\5\14\1\14\2\14\1\14\7\0\1\10\1\22\1\11\1\15\1\5" + "\1\23\1\21\1\2\1\3\1\36\1\32\1\24\1\30\1\26\1\33" + "\1\7\1\27\1\20\1\6\1\4\1\25\1\34\1\1\1\17\1\35" + "\1\31\1\0\1\0\1\0\3\0\1\10\1\22\1\11\1\15\1\5" + "\1\23\1\21\1\2\1\3\1\36\1\32\1\24\1\30\1\26\1\33" + "\1\7\1\27\1\20\1\6\1\4\1\25\1\34\1\1\1\17\1\35" + "\1\31\1\0\1\0\1\0\54\0\1\12\12\0\1\12\4\0\1\12" + "\5\0\27\12\1\0\37\12\1\0Ŀ\12\31\0\162\12\4\0\14\12" + "\16\0\5\12\11\0\1\12\213\0\1\12\13\0\1\12\1\0\3\12" + "\1\0\1\12\1\0\24\12\1\0\54\12\1\0\46\12\1\0\5\12" + "\4\0\202\12\10\0\105\12\1\0\46\12\2\0\2\12\6\0\20\12" + "\41\0\46\12\2\0\1\12\7\0\47\12\110\0\33\12\5\0\3\12" + "\56\0\32\12\5\0\13\12\43\0\2\12\1\0\143\12\1\0\1\12" + "\17\0\2\12\7\0\2\12\12\0\3\12\2\0\1\12\20\0\1\12" + "\1\0\36\12\35\0\3\12\60\0\46\12\13\0\1\12Œ\0\66\12" + "\3\0\1\12\22\0\1\12\7\0\12\12\43\0\10\12\2\0\2\12" + "\2\0\26\12\1\0\7\12\1\0\1\12\3\0\4\12\3\0\1\12" + "\36\0\2\12\1\0\3\12\16\0\2\12\23\0\6\12\4\0\2\12" + "\2\0\26\12\1\0\7\12\1\0\2\12\1\0\2\12\1\0\2\12" + "\37\0\4\12\1\0\1\12\23\0\3\12\20\0\11\12\1\0\3\12" + "\1\0\26\12\1\0\7\12\1\0\2\12\1\0\5\12\3\0\1\12" + "\22\0\1\12\17\0\2\12\43\0\10\12\2\0\2\12\2\0\26\12" + "\1\0\7\12\1\0\2\12\1\0\5\12\3\0\1\12\36\0\2\12" + "\1\0\3\12\17\0\1\12\21\0\1\12\1\0\6\12\3\0\3\12" + "\1\0\4\12\3\0\2\12\1\0\1\12\1\0\2\12\3\0\2\12" + "\3\0\3\12\3\0\10\12\1\0\3\12\113\0\10\12\1\0\3\12" + "\1\0\27\12\1\0\12\12\1\0\5\12\46\0\2\12\43\0\10\12" + "\1\0\3\12\1\0\27\12\1\0\12\12\1\0\5\12\3\0\1\12" + "\40\0\1\12\1\0\2\12\43\0\10\12\1\0\3\12\1\0\27\12" + "\1\0\20\12\46\0\2\12\43\0\22\12\3\0\30\12\1\0\11\12" + "\1\0\1\12\2\0\7\12\72\0\60\12\1\0\2\12\14\0\7\12" + "\72\0\2\12\1\0\1\12\2\0\2\12\1\0\1\12\2\0\1\12" + "\6\0\4\12\1\0\7\12\1\0\3\12\1\0\1\12\1\0\1\12" + "\2\0\2\12\1\0\4\12\1\0\2\12\11\0\1\12\2\0\5\12" + "\1\0\1\12\25\0\2\12\42\0\1\12\77\0\10\12\1\0\42\12" + "\35\0\4\12\164\0\42\12\1\0\5\12\1\0\2\12\45\0\6\12" + "\112\0\46\12\12\0\51\12\7\0\132\12\5\0\104\12\5\0\122\12" + "\6\0\7\12\1\0\77\12\1\0\1\12\1\0\4\12\2\0\7\12" + "\1\0\1\12\1\0\4\12\2\0\47\12\1\0\1\12\1\0\4\12" + "\2\0\37\12\1\0\1\12\1\0\4\12\2\0\7\12\1\0\1\12" + "\1\0\4\12\2\0\7\12\1\0\7\12\1\0\27\12\1\0\37\12" + "\1\0\1\12\1\0\4\12\2\0\7\12\1\0\47\12\1\0\23\12" + "\105\0\125\12\14\0ɬ\12\2\0\10\12\12\0\32\12\5\0\113\12" + "\25\0\15\12\1\0\4\12\16\0\22\12\16\0\22\12\16\0\15\12" + "\1\0\3\12\17\0\64\12\43\0\1\12\4\0\1\12\103\0\130\12" + "\10\0\51\12\127\0\35\12\63\0\36\12\2\0\5\12΋\0\154\12" + "\224\0\234\12\4\0\132\12\6\0\26\12\2\0\6\12\2\0\46\12" + "\2\0\6\12\2\0\10\12\1\0\1\12\1\0\1\12\1\0\1\12" + "\1\0\37\12\2\0\65\12\1\0\7\12\1\0\1\12\3\0\3\12" + "\1\0\7\12\3\0\4\12\2\0\6\12\4\0\15\12\5\0\3\12" + "\1\0\7\12\164\0\1\12\15\0\1\12\202\0\1\12\4\0\1\12" + "\2\0\12\12\1\0\1\12\3\0\5\12\6\0\1\12\1\0\1\12" + "\1\0\1\12\1\0\4\12\1\0\3\12\1\0\7\12\3\0\3\12" + "\5\0\5\12ົ\0\2\12\52\0\5\12\5\0\2\12\4\0\126\12" + "\6\0\3\12\1\0\132\12\1\0\4\12\5\0\50\12\4\0\136\12" + "\21\0\30\12\70\0\20\12Ȁ\0ᦶ\12\112\0冦\12\132\0ҍ\12" + "ݳ\0⮤\12⅜\0Į\12\2\0\73\12\225\0\7\12\14\0\5\12" + "\5\0\1\12\1\0\12\12\1\0\15\12\1\0\5\12\1\0\1\12" + "\1\0\2\12\1\0\2\12\1\0\154\12\41\0ū\12\22\0\100\12" + "\2\0\66\12\50\0\14\12\164\0\5\12\1\0\207\12\44\0\32\12" + "\6\0\32\12\13\0\131\12\3\0\6\12\2\0\6\12\2\0\6\12" + "\2\0\3\12\43\0";

    /** 
   * Translates characters to character classes
   */
    private static final char[] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

    /** 
   * Translates DFA states to action switch labels.
   */
    private static final int[] ZZ_ACTION = zzUnpackAction();

    private static final String ZZ_ACTION_PACKED_0 = "\1\0\70\1\1\0\4\1\1\0\44\1\1\2\37\1" + "\1\0\4\1\1\0\1\3\55\1\1\4\14\1\1\5" + "\1\1\1\6\1\1\1\7\2\1\1\10\4\1\1\11" + "\7\1\1\11\1\0\4\1\1\0\5\1\1\12\1\13" + "\5\1\1\14\7\1\1\15\4\1\1\16\16\1\1\17" + "\1\20\4\1\1\21\30\1\1\22\4\1\1\23\2\1" + "\1\0\16\1\1\0\4\1\1\24\2\1\1\25\1\26" + "\1\27\10\1\1\30\14\1\1\31\2\1\1\32\7\1" + "\1\33\2\1\1\34\1\35\1\36\5\1\1\37\12\1" + "\1\40\12\1\1\0\22\1\1\0\6\1\1\41\26\1" + "\1\42\1\1\1\43\1\44\2\1\1\45\1\46\1\1" + "\1\47\2\1\1\50\11\1\1\51\15\1\1\52\2\1" + "\1\53\1\54\7\1\1\55\13\1\1\0\13\1\1\56" + "\37\1\1\57\2\1\1\60\3\1\1\61\1\62\22\1" + "\1\63\2\1\1\64\4\1\1\65\1\1\1\66\1\1" + "\1\67\7\1\1\70\34\1\1\71\15\1\1\72\4\1" + "\1\73\1\74\1\75\3\1\1\76\1\77\1\100\2\1" + "\1\101\3\1\1\102\3\1\1\103\1\104\6\1\1\105" + "\2\1\1\106\5\1\1\107\1\110\1\1\1\111\1\1" + "\1\112\2\1\1\113\1\114\7\1\1\115\1\1\1\116" + "\1\1\1\117\1\1\1\120\1\1\1\121\1\1\1\122" + "\2\1\1\123\1\1\1\124\11\1\1\125\1\126\1\1" + "\1\127\2\1\1\130\1\131\3\1\1\132\1\1\1\133" + "\1\134\4\1\1\135\4\1\1\136\1\137\1\1\1\140" + "\1\141\1\142\2\1\1\143\7\1\1\144\1\145\14\1" + "\1\146\3\1\1\147\1\150\5\1\1\151\5\1\1\152" + "\1\1\1\153\1\1\1\154\1\155\2\1\1\156\3\1" + "\1\157\2\1\1\160\11\1\1\161\3\1\1\162\2\1" + "\1\163\10\1\1\164\1\1\1\165\1\1\1\166\4\1" + "\1\167\1\1\1\170\1\1\1\171\1\172\1\173\1\1" + "\1\174\1\175\1\176\1\177\3\1\1\200\2\1\1\201" + "\6\1\1\202\1\203\1\204\1\205\1\206\2\1\1\207" + "\5\1\1\210\1\1\1\211\1\1\1\212\2\1\1\213" + "\1\1\1\214\2\1\1\215";

    private static int[] zzUnpackAction() {
        int[] result = new int[891];
        int offset = 0;
        offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /** 
   * Translates a state to a row index in the transition table
   */
    private static final int[] ZZ_ROWMAP = zzUnpackRowMap();

    private static final String ZZ_ROWMAP_PACKED_0 = "\0\0\0\37\0\76\0\135\0\174\0\233\0\272\0\331" + "\0\370\0ė\0Ķ\0ŕ\0Ŵ\0Ɠ\0Ʋ\0Ǒ" + "\0ǰ\0ȏ\0Ȯ\0ɍ\0ɬ\0ʋ\0ʪ\0ˉ" + "\0˨\0̇\0̦\0ͅ\0ͤ\0΃\0΢\0ρ" + "\0Ϡ\0Ͽ\0О\0н\0ќ\0ѻ\0Қ\0ҹ" + "\0Ә\0ӷ\0Ԗ\0Ե\0Ք\0ճ\0֒\0ֱ" + "\0א\0ׯ\0؎\0ح\0ٌ\0٫\0ڊ\0ک" + "\0ۈ\0ۧ\0܆\0ܥ\0݄\0ݣ\0ނ\0ޡ" + "\0߀\0ߟ\0߾\0ࠝ\0࠼\0࡛\0ࡺ\0࢙" + "\0ࢸ\0ࣗ\0ࣶ\0क\0ऴ\0॓\0ॲ\0঑" + "\0র\0৏\0৮\0਍\0ਬ\0ੋ\0੪\0ઉ" + "\0ન\0ે\0૦\0ଅ\0ତ\0ୃ\0ୢ\0஁" + "\0஠\0ி\0௞\0\272\0௽\0జ\0఻\0ౚ" + "\0౹\0ಘ\0ಷ\0ೖ\0೵\0ഔ\0ള\0൒" + "\0൱\0ඐ\0ද\0෎\0෭\0ฌ\0ห\0๊" + "\0๩\0ຈ\0ວ\0ໆ\0໥\0༄\0༣\0ག" + "\0ཡ\0ྀ\0ྟ\0྾\0࿝\0࿼\0ရ\0်" + "\0ၙ\0\272\0ၸ\0႗\0Ⴖ\0ვ\0ჴ\0ᄓ" + "\0ᄲ\0ᅑ\0ᅰ\0ᆏ\0ᆮ\0ᇍ\0ᇬ\0ላ" + "\0ሪ\0቉\0ቨ\0ኇ\0ኦ\0ዅ\0ዤ\0ጃ" + "\0ጢ\0ፁ\0፠\0፿\0᎞\0Ꮍ\0Ꮬ\0ᏻ" + "\0ᐚ\0ᐹ\0ᑘ\0ᑷ\0ᒖ\0ᒵ\0ᓔ\0ᓳ" + "\0ᔒ\0ᔱ\0ᕐ\0ᕯ\0ᖎ\0ᖭ\0ᗌ\0\272" + "\0ᗫ\0ᘊ\0ᘩ\0ᙈ\0ᙧ\0ᚆ\0ᚥ\0ᛄ" + "\0ᛣ\0ᜂ\0ᜡ\0ᝀ\0\272\0᝟\0\272\0᝾" + "\0\272\0ឝ\0ូ\0\272\0៛\0៺\0᠙\0ᠸ" + "\0ᡗ\0ᡶ\0ᢕ\0ᢴ\0ᣓ\0ᣲ\0ᤑ\0ᤰ" + "\0\272\0᥏\0᥮\0ᦍ\0᦬\0᧋\0᧪\0ᨉ" + "\0ᨨ\0ᩇ\0ᩦ\0᪅\0\272\0᪤\0᫃\0᫢" + "\0ᬁ\0ᬠ\0ᬿ\0᭞\0᭽\0ᮜ\0ᮻ\0ᯚ" + "\0᯹\0ᰘ\0᰷\0᱖\0ᱵ\0Ე\0Ჳ\0᳒" + "\0\272\0ᳱ\0ᴐ\0ᴯ\0ᵎ\0ᵭ\0ᶌ\0ᶫ" + "\0᷊\0ᷩ\0Ḉ\0ḧ\0Ṇ\0ṥ\0Ẅ\0ả" + "\0\272\0Ể\0ỡ\0ἀ\0἟\0\272\0Ἶ\0Ὕ" + "\0ὼ\0ᾛ\0Ὰ\0Ῑ\0Ὸ\0‗\0‶\0⁕" + "\0⁴\0ₓ\0₲\0⃑\0⃰\0ℏ\0℮\0⅍" + "\0Ⅼ\0↋\0↪\0⇉\0⇨\0∇\0\272\0∦" + "\0≅\0≤\0⊃\0\272\0⊢\0⋁\0⋠\0⋿" + "\0⌞\0⌽\0⍜\0⍻\0⎚\0⎹\0⏘\0⏷" + "\0␖\0␵\0⑔\0⑳\0⒒\0⒱\0ⓐ\0⓯" + "\0┎\0┭\0╌\0╫\0▊\0\272\0\272\0\272" + "\0▩\0◈\0◧\0☆\0☥\0♄\0♣\0⚂" + "\0\272\0⚡\0⛀\0⛟\0⛾\0✝\0✼\0❛" + "\0❺\0➙\0➸\0⟗\0⟶\0\272\0⠕\0⠴" + "\0⡓\0⡲\0⢑\0⢰\0⣏\0⣮\0⤍\0⤬" + "\0\272\0⥋\0⥪\0\272\0\272\0\272\0⦉\0⦨" + "\0⧇\0⧦\0⨅\0\272\0⨤\0⩃\0⩢\0⪁" + "\0⪠\0⪿\0⫞\0⫽\0⬜\0⬻\0\272\0⭚" + "\0⭹\0⮘\0⮷\0⯖\0⯵\0Ⱄ\0ⰳ\0ⱒ" + "\0ⱱ\0Ⲑ\0ⲯ\0Ⳏ\0Ⳮ\0ⴌ\0⴫\0ⵊ" + "\0⵩\0ⶈ\0⶧\0ⷆ\0ⷥ\0⸄\0⸣\0⹂" + "\0⹡\0⺀\0⺟\0⺾\0⻝\0⻼\0⼛\0⼺" + "\0⽙\0⽸\0⾗\0\272\0⾶\0⿕\0⿴\0〓" + "\0〲\0け\0ば\0わ\0ギ\0ネ\0レ\0ㄋ" + "\0ㄪ\0ㅉ\0ㅨ\0ㆇ\0ㆦ\0㇅\0㇤\0㈃" + "\0㈢\0㉁\0\272\0㉠\0㉿\0\272\0㊞\0㊽" + "\0\272\0㋜\0㋻\0\272\0㌚\0㌹\0\272\0㍘" + "\0㍷\0㎖\0㎵\0㏔\0㏳\0㐒\0㐱\0㑐" + "\0\272\0㑯\0㒎\0㒭\0㓌\0㓫\0㔊\0㔩" + "\0㕈\0㕧\0㖆\0㖥\0㗄\0㗣\0\272\0㘂" + "\0㘡\0\37\0\272\0㙀\0㙟\0㙾\0㚝\0㚼" + "\0㛛\0㛺\0\272\0㜙\0㜸\0㝗\0㝶\0㞕" + "\0㞴\0㟓\0㟲\0㠑\0㠰\0㡏\0㡮\0㢍" + "\0㢬\0㣋\0㣪\0㤉\0㤨\0㥇\0㥦\0㦅" + "\0㦤\0㧃\0\272\0㧢\0㨁\0㨠\0㨿\0㩞" + "\0㩽\0㪜\0㪻\0㫚\0㫹\0㬘\0㬷\0㭖" + "\0㭵\0㮔\0㮳\0㯒\0㯱\0㰐\0㰯\0㱎" + "\0㱭\0㲌\0㲫\0㳊\0㳩\0㴈\0㴧\0㵆" + "\0㵥\0㶄\0\272\0㶣\0㷂\0\272\0㷡\0㸀" + "\0㸟\0\272\0\272\0㸾\0㹝\0㹼\0㺛\0㺺" + "\0㻙\0㻸\0㼗\0㼶\0㽕\0㽴\0㾓\0㾲" + "\0㿑\0㿰\0䀏\0䀮\0䁍\0\272\0䁬\0䂋" + "\0\272\0䂪\0䃉\0䃨\0䄇\0\272\0䄦\0\272" + "\0䅅\0\272\0䅤\0䆃\0䆢\0䇁\0䇠\0䇿" + "\0䈞\0\37\0䈽\0䉜\0䉻\0䊚\0䊹\0䋘" + "\0䋷\0䌖\0䌵\0䍔\0䍳\0䎒\0䎱\0䏐" + "\0䏯\0䐎\0䐭\0䑌\0䑫\0䒊\0䒩\0䓈" + "\0䓧\0䔆\0䔥\0䕄\0䕣\0䖂\0䖡\0䗀" + "\0䗟\0䗾\0䘝\0䘼\0䙛\0䙺\0䚙\0䚸" + "\0䛗\0䛶\0䜕\0䜴\0\272\0䝓\0䝲\0䞑" + "\0䞰\0\272\0\272\0\272\0䟏\0䟮\0䠍\0\272" + "\0\272\0\272\0䠬\0䡋\0\272\0䡪\0䢉\0䢨" + "\0\272\0䣇\0䣦\0䤅\0\272\0\272\0䤤\0䥃" + "\0䥢\0䦁\0䦠\0䦿\0\272\0䧞\0䧽\0\272" + "\0䨜\0䨻\0䩚\0䩹\0䪘\0\272\0\272\0䪷" + "\0\272\0䫖\0\272\0䫵\0䬔\0\272\0\272\0䬳" + "\0䭒\0䭱\0䮐\0䮯\0䯎\0䯭\0\272\0䰌" + "\0\272\0䰫\0\272\0䱊\0\272\0䱩\0\272\0䲈" + "\0\272\0䲧\0䳆\0\272\0䳥\0\272\0䴄\0䴣" + "\0䵂\0䵡\0䶀\0䶟\0䶾\0䷝\0䷼\0\272" + "\0\272\0丛\0\272\0为\0乙\0\272\0\272\0乸" + "\0亗\0亶\0\272\0仕\0\272\0\272\0仴\0伓" + "\0伲\0佑\0\272\0佰\0侏\0侮\0俍\0\272" + "\0\272\0俬\0\272\0\272\0\272\0個\0倪\0\272" + "\0偉\0偨\0傇\0傦\0僅\0僤\0儃\0\272" + "\0\272\0儢\0允\0兠\0兿\0冞\0冽\0凜" + "\0击\0刚\0刹\0剘\0剷\0\272\0劖\0劵" + "\0勔\0\272\0\272\0勳\0匒\0匱\0卐\0卯" + "\0\272\0厎\0厭\0双\0叫\0吊\0\272\0吩" + "\0\272\0呈\0\272\0\272\0呧\0咆\0\272\0咥" + "\0哄\0哣\0\272\0唂\0唡\0\272\0啀\0啟" + "\0啾\0喝\0喼\0嗛\0嗺\0嘙\0嘸\0\272" + "\0噗\0噶\0嚕\0\272\0嚴\0囓\0\272\0囲" + "\0圑\0地\0坏\0坮\0垍\0垬\0埋\0\272" + "\0埪\0\272\0堉\0\272\0堨\0塇\0塦\0墅" + "\0\272\0墤\0\272\0壃\0\272\0\272\0\272\0壢" + "\0\272\0\272\0\272\0\272\0夁\0夠\0夿\0\272" + "\0奞\0好\0\272\0妜\0妻\0姚\0姹\0娘" + "\0娷\0\272\0\272\0\272\0\272\0\272\0婖\0婵" + "\0\272\0媔\0媳\0嫒\0嫱\0嬐\0\272\0嬯" + "\0\272\0孎\0\272\0孭\0完\0\272\0宫\0\272" + "\0寊\0審\0\272";

    private static int[] zzUnpackRowMap() {
        int[] result = new int[891];
        int offset = 0;
        offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }
        return j;
    }

    /** 
   * The transition table of the DFA
   */
    private static final int[] ZZ_TRANS = zzUnpackTrans();

    private static final String ZZ_TRANS_PACKED_0 = "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11" + "\1\12\1\13\1\7\1\14\1\2\1\15\1\16\1\7" + "\1\17\1\20\1\21\1\22\1\23\1\7\1\24\1\7" + "\1\25\1\7\1\26\1\27\1\30\1\31\1\7\40\0" + "\1\7\1\32\10\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\14\7\1\33\3\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1\34\5\7\1\35" + "\2\7\1\0\1\7\1\36\2\7\1\37\2\7\1\40" + "\2\7\2\0\1\7\1\0\6\7\1\41\5\7\1\42" + "\3\7\1\0\12\7\2\0\1\7\1\0\20\7\1\0" + "\2\7\1\43\1\44\1\45\1\7\1\46\1\47\2\7" + "\2\0\1\7\1\0\5\7\1\50\1\7\1\51\3\7" + "\1\52\4\7\1\0\2\7\1\53\1\7\1\54\2\7" + "\1\55\2\7\2\0\1\7\1\0\5\7\1\56\1\57" + "\5\7\1\60\3\7\1\0\12\7\2\0\1\7\1\0" + "\5\7\1\61\1\7\1\62\1\63\1\7\1\64\5\7" + "\1\0\1\7\1\65\5\7\1\66\2\7\2\0\1\7" + "\1\0\1\7\1\67\12\7\1\70\1\7\1\71\1\7" + "\5\0\1\72\2\0\2\72\2\0\3\72\3\0\2\72" + "\14\0\2\7\1\73\1\7\1\74\2\7\1\75\2\7" + "\2\0\1\7\1\0\14\7\1\76\3\7\17\0\1\77" + "\20\0\4\7\1\100\5\7\2\0\1\7\1\0\14\7" + "\1\101\3\7\1\0\1\7\1\102\5\7\1\103\2\7" + "\2\0\1\7\1\0\1\7\1\104\12\7\1\105\3\7" + "\1\0\2\7\1\106\1\7\1\107\5\7\2\0\1\7" + "\1\0\1\7\1\110\3\7\1\111\1\112\11\7\1\0" + "\2\7\1\113\7\7\2\0\1\7\1\0\5\7\1\114" + "\1\115\5\7\1\116\3\7\1\0\2\7\1\117\1\7" + "\1\120\2\7\1\121\2\7\2\0\1\7\1\0\20\7" + "\1\0\7\7\1\122\2\7\2\0\1\7\1\0\20\7" + "\1\0\2\7\1\123\1\7\1\124\2\7\1\125\2\7" + "\2\0\1\7\1\0\14\7\1\126\3\7\1\0\1\7" + "\1\127\10\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\1\7\1\130\3\7\1\131\12\7" + "\1\0\2\7\1\132\7\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1\133\5\7\2\0\1\7\1\0\20\7" + "\1\0\2\7\1\134\1\7\1\135\5\7\2\0\1\7" + "\1\0\20\7\1\0\3\7\1\136\6\7\2\0\1\7" + "\1\0\7\7\1\137\10\7\1\0\12\7\2\0\1\140" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1\141\3\7\1\0\2\7\1\142\7\7\2\0\1\7" + "\1\0\20\7\1\0\7\7\1\143\2\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1\144\10\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1\145\16\7\1\0\12\7\2\0\1\7\1\0\11\7" + "\1\146\6\7\1\0\4\7\1\147\5\7\2\0\1\7" + "\1\0\5\7\1\150\12\7\1\0\4\7\1\151\5\7" + "\2\0\1\7\1\0\20\7\1\0\7\7\1\152\2\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1\153\16\7\1\0\12\7\2\0\1\154" + "\1\0\5\7\1\155\1\7\1\156\10\7\1\0\7\7" + "\1\157\2\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\14\7\1\160\3\7\1\0\12\7" + "\2\0\1\7\1\0\16\7\1\161\1\7\1\0\12\7" + "\2\0\1\7\1\0\7\7\1\162\10\7\1\0\7\7" + "\1\163\2\7\2\0\1\7\1\0\1\7\1\164\16\7" + "\1\0\6\7\1\165\3\7\2\0\1\7\1\0\5\7" + "\1\166\12\7\1\0\12\7\2\0\1\7\1\0\6\7" + "\1\167\11\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1\170\16\7\1\0\1\171\11\7\2\0\1\7\1\0" + "\20\7\1\0\2\7\1\172\7\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1\173\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1\174" + "\11\7\1\0\12\7\2\0\1\7\1\0\6\7\1\175" + "\11\7\1\0\7\7\1\176\2\7\2\0\1\7\1\0" + "\14\7\1\177\3\7\1\0\12\7\2\0\1\200\1\0" + "\20\7\1\0\2\7\1\201\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\202" + "\16\7\1\0\7\7\1\203\2\7\2\0\1\7\1\0" + "\20\7\5\0\1\204\2\0\2\204\2\0\3\204\3\0" + "\2\204\14\0\12\7\2\0\1\7\1\0\11\7\1\205" + "\6\7\1\0\4\7\1\206\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1\207" + "\16\7\1\0\12\7\2\0\1\210\1\0\20\7\5\0" + "\1\211\2\0\2\211\2\0\3\211\3\0\2\211\14\0" + "\12\7\2\0\1\212\1\0\20\7\1\0\5\7\1\213" + "\4\7\2\0\1\7\1\0\16\7\1\214\1\7\1\0" + "\12\7\2\0\1\7\1\0\14\7\1\215\3\7\1\0" + "\2\7\1\216\7\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1\217\2\7\1\220\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1\221" + "\12\7\1\0\5\7\1\222\4\7\2\0\1\7\1\0" + "\20\7\1\0\2\7\1\223\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1\224" + "\3\7\1\0\7\7\1\225\2\7\2\0\1\7\1\0" + "\6\7\1\226\11\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1\227\16\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1\230\16\7\1\0\12\7\2\0\1\7\1\0" + "\14\7\1\231\3\7\1\0\10\7\1\232\1\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1\233\16\7\1\0\12\7\2\0\1\7\1\0" + "\2\7\1\234\4\7\1\235\1\7\1\236\6\7\1\0" + "\12\7\2\0\1\7\1\0\11\7\1\237\6\7\1\0" + "\1\240\11\7\2\0\1\7\1\0\15\7\1\241\2\7" + "\1\0\12\7\2\0\1\7\1\0\15\7\1\242\2\7" + "\1\0\5\7\1\243\4\7\2\0\1\244\1\0\7\7" + "\1\245\10\7\1\0\12\7\2\0\1\246\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\1\7\1\247\1\250" + "\15\7\1\0\10\7\1\251\1\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1\252\2\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1\253\1\254\1\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1\255\7\7\2\0\1\256" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1\257\3\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1\260\12\7\1\0\3\7\1\261\6\7\2\0\1\7" + "\1\0\20\7\1\0\7\7\1\262\2\7\2\0\1\7" + "\1\0\20\7\1\0\6\7\1\263\3\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1\264\5\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1\265\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1\266\16\7\1\0\5\7\1\267\4\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1\270\12\7\1\0\12\7\2\0\1\7\1\0\10\7" + "\1\271\7\7\1\0\7\7\1\272\2\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1\273\10\7\1\0\12\7\2\0\1\7\1\0\15\7" + "\1\274\2\7\1\0\4\7\1\275\5\7\2\0\1\7" + "\1\0\20\7\1\0\5\7\1\276\4\7\2\0\1\7" + "\1\0\2\7\1\277\15\7\1\0\2\7\1\300\7\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\301" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\11\7" + "\1\302\6\7\1\0\12\7\2\0\1\303\1\0\20\7" + "\1\0\3\7\1\304\6\7\2\0\1\7\1\0\20\7" + "\1\0\1\305\11\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\3\7\1\306\14\7\1\0" + "\12\7\2\0\1\7\1\0\13\7\1\307\4\7\1\0" + "\10\7\1\310\1\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1\311\11\7\1\0" + "\7\7\1\312\2\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1\313\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\11\7\1\314\6\7\1\0" + "\6\7\1\315\3\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\316\1\0\20\7\1\0\10\7\1\317" + "\1\7\2\0\1\7\1\0\20\7\1\0\2\7\1\320" + "\7\7\2\0\1\7\1\0\20\7\1\0\7\7\1\321" + "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\1\7\1\322\16\7\1\0\12\7\2\0" + "\1\7\1\0\1\7\1\323\16\7\1\0\10\7\1\324" + "\1\7\2\0\1\7\1\0\20\7\1\0\4\7\1\325" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\11\7\1\326\6\7\1\0\7\7\1\327" + "\2\7\2\0\1\7\1\0\7\7\1\330\10\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1\331\10\7\5\0" + "\1\332\2\0\2\332\2\0\3\332\3\0\2\332\14\0" + "\12\7\2\0\1\7\1\0\2\7\1\333\15\7\1\0" + "\6\7\1\334\3\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\13\7\1\335\4\7\1\0" + "\12\7\2\0\1\7\1\0\2\7\1\336\15\7\5\0" + "\1\337\2\0\2\337\2\0\3\337\3\0\2\337\14\0" + "\12\7\2\0\1\7\1\0\16\7\1\340\1\7\1\0" + "\7\7\1\341\2\7\2\0\1\7\1\0\20\7\1\0" + "\5\7\1\342\4\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1\343\10\7\1\0" + "\4\7\1\344\5\7\2\0\1\7\1\0\16\7\1\345" + "\1\7\1\0\12\7\2\0\1\7\1\0\16\7\1\345" + "\1\7\1\0\12\7\2\0\1\346\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\10\7\1\347\7\7\1\0" + "\12\7\2\0\1\7\1\0\2\7\1\350\15\7\1\0" + "\1\351\11\7\2\0\1\7\1\0\20\7\1\0\10\7" + "\1\352\1\7\2\0\1\7\1\0\7\7\1\353\10\7" + "\1\0\4\7\1\354\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1\355\12\7" + "\1\0\4\7\1\356\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\1\7\1\357\16\7" + "\1\0\1\7\1\360\10\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1\361\5\7\2\0\1\7\1\0\20\7" + "\1\0\1\7\1\362\10\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1\363\5\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1\364\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1\365\3\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1\366\10\7" + "\1\0\4\7\1\367\5\7\2\0\1\7\1\0\20\7" + "\1\0\7\7\1\370\2\7\2\0\1\7\1\0\16\7" + "\1\371\1\7\1\0\3\7\1\372\6\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1\373\10\7\1\0\3\7\1\374\6\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1\375\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1\376\3\7\1\0\4\7\1\377\5\7\2\0\1\7" + "\1\0\20\7\1\0\10\7\1Ā\1\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\13\7" + "\1ā\4\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1Ă\10\7\1\0\1\7\1ă\10\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\15\7" + "\1Ą\2\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1ą\12\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1Ć\12\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1ć\12\7\1\0\4\7\1Ĉ\5\7\2\0\1\7" + "\1\0\20\7\1\0\3\7\1ĉ\6\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1Ċ\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\16\7" + "\1ċ\1\7\1\0\7\7\1Č\2\7\2\0\1\7" + "\1\0\2\7\1č\15\7\1\0\12\7\2\0\1\7" + "\1\0\16\7\1Ď\1\7\1\0\3\7\1ď\6\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\6\7\1Đ\11\7\1\0\3\7\1đ\6\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\7\7\1Ē\10\7\1\0\4\7\1ē\5\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\5\7\1Ĕ\12\7\1\0\1\7\1ĕ\10\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1Ė\16\7\1\0\12\7\2\0\1\7" + "\1\0\7\7\1ė\10\7\1\0\12\7\2\0\1\7" + "\1\0\5\7\1Ę\12\7\1\0\12\7\2\0\1\7" + "\1\0\14\7\1ę\3\7\1\0\12\7\2\0\1\7" + "\1\0\16\7\1Ě\1\7\1\0\4\7\1ě\5\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\5\7\1Ĝ\12\7\1\0\1\7\1ĝ\10\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\16\7\1Ğ\1\7\1\0\3\7\1ğ\6\7" + "\2\0\1\7\1\0\2\7\1Ġ\12\7\1ġ\2\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1Ģ\12\7" + "\1\0\4\7\1ģ\5\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1Ĥ\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\10\7\1ĥ\7\7" + "\1\0\12\7\2\0\1\7\1\0\11\7\1Ħ\6\7" + "\1\0\4\7\1ħ\5\7\2\0\1\7\1\0\20\7" + "\1\0\3\7\1Ĩ\6\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1ĩ\3\7" + "\1\0\3\7\1Ī\6\7\2\0\1\7\1\0\20\7" + "\1\0\5\7\1ī\4\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1Ĭ\12\7" + "\1\0\5\7\1ĭ\4\7\2\0\1\7\1\0\4\7" + "\1Į\13\7\5\0\1į\2\0\2į\2\0\3į" + "\3\0\2į\14\0\12\7\2\0\1\7\1\0\1\7" + "\1İ\16\7\1\0\5\7\1ı\1Ĳ\3\7\2\0" + "\1\7\1\0\20\7\1\0\3\7\1ĳ\1\7\1Ĵ" + "\2\7\1ĵ\1\7\2\0\1\7\1\0\1\7\1Ķ" + "\1ķ\1ĸ\5\7\1Ĺ\1\7\1ĺ\1Ļ\1ļ" + "\2\7\1\0\4\7\1Ľ\5\7\2\0\1\7\1\0" + "\20\7\5\0\1ľ\2\0\2ľ\2\0\3ľ\3\0" + "\2ľ\14\0\12\7\2\0\1\7\1\0\3\7\1Ŀ" + "\14\7\1\0\12\7\2\0\1\7\1\0\5\7\1ŀ" + "\12\7\1\0\3\7\1Ł\6\7\2\0\1\7\1\0" + "\20\7\1\0\5\7\1ł\4\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1Ń" + "\10\7\1\0\4\7\1ń\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1Ņ" + "\11\7\1\0\4\7\1ņ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1Ň" + "\10\7\1\0\12\7\2\0\1\7\1\0\13\7\1ň" + "\4\7\1\0\10\7\1ŉ\1\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\15\7\1Ŋ" + "\2\7\1\0\12\7\2\0\1\7\1\0\16\7\1ŋ" + "\1\7\1\0\12\7\2\0\1\7\1\0\3\7\1Ō" + "\14\7\1\0\7\7\1ō\2\7\2\0\1\7\1\0" + "\20\7\1\0\5\7\1Ŏ\4\7\2\0\1\7\1\0" + "\20\7\1\0\5\7\1ŏ\4\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1Ő\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1ő" + "\10\7\1\0\12\7\2\0\1\7\1\0\2\7\1Œ" + "\15\7\1\0\12\7\2\0\1\7\1\0\7\7\1œ" + "\10\7\1\0\12\7\2\0\1\7\1\0\2\7\1Ŕ" + "\15\7\1\0\12\7\2\0\1\7\1\0\7\7\1ŕ" + "\10\7\1\0\12\7\2\0\1\7\1\0\17\7\1Ŗ" + "\1\0\12\7\2\0\1\7\1\0\16\7\1ŗ\1\7" + "\1\0\2\7\1Ř\7\7\2\0\1\7\1\0\20\7" + "\1\0\10\7\1ř\1\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\6\7\1Ś\11\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1ś\3\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1Ŝ\10\7" + "\1\0\7\7\1ŝ\2\7\2\0\1\7\1\0\20\7" + "\1\0\2\7\1Ş\7\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\2\7\1ş\15\7" + "\1\0\2\7\1Š\7\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1š\5\7\2\0\1\7\1\0\20\7" + "\1\0\7\7\1Ţ\2\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1ţ\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1Ť\3\7" + "\1\0\5\7\1ť\4\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1Ŧ\10\7" + "\1\0\12\7\2\0\1ŧ\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\7\7\1Ũ\10\7\1\0\12\7" + "\2\0\1\7\1\0\14\7\1ũ\3\7\1\0\12\7" + "\2\0\1\7\1\0\5\7\1Ū\12\7\1\0\12\7" + "\2\0\1\7\1\0\14\7\1ū\3\7\1\0\12\7" + "\2\0\1\7\1\0\14\7\1Ŭ\3\7\1\0\7\7" + "\1ŭ\2\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\1\7\1Ů\16\7\1\0\12\7" + "\2\0\1\7\1\0\3\7\1ů\14\7\1\0\4\7" + "\1Ű\5\7\2\0\1\7\1\0\20\7\1\0\4\7" + "\1ű\5\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\2\7\1Ų\15\7\1\0\4\7" + "\1ų\5\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\7\7\1Ŵ\10\7\1\0\12\7" + "\2\0\1\7\1\0\3\7\1ŵ\14\7\1\0\12\7" + "\2\0\1\7\1\0\2\7\1Ŷ\1ŷ\14\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1Ÿ\11\7\1\0" + "\6\7\1Ź\3\7\2\0\1\7\1\0\20\7\1\0" + "\7\7\1ź\2\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1Ż\11\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1ż\12\7\1Ž" + "\3\7\1\0\2\7\1ž\7\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ſ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1ƀ" + "\16\7\1\0\12\7\2\0\1\7\1\0\3\7\1Ɓ" + "\14\7\1\0\12\7\2\0\1\7\1\0\6\7\1Ƃ" + "\11\7\1\0\7\7\1ƃ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1Ƅ" + "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1ƅ" + "\12\7\1\0\12\7\2\0\1\7\1\0\3\7\1Ɔ" + "\14\7\1\0\12\7\2\0\1\7\1\0\14\7\1Ƈ" + "\3\7\1\0\2\7\1ƈ\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ɖ" + "\12\7\5\0\1Ɗ\2\0\2Ɗ\2\0\3Ɗ\3\0" + "\2Ɗ\14\0\4\7\1Ƌ\2\7\1Ƌ\2\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\13\7\1ƌ\4\7\1\0\2\7\1ƍ\7\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\6\7\1Ǝ\11\7\1\0\4\7\1Ə\2\7\1Ɛ" + "\2\7\2\0\1\7\1\0\5\7\1Ƒ\12\7\1\0" + "\12\7\2\0\1\7\1\0\16\7\1ƒ\1\7\1\0" + "\4\7\1Ɠ\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1Ɣ\12\7\1ƕ" + "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ɩ" + "\12\7\1\0\7\7\1Ɨ\2\7\2\0\1\7\1\0" + "\20\7\1\0\1\7\1Ƙ\10\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1ƙ" + "\3\7\1ƚ\12\7\1\0\2\7\1ƛ\7\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1Ɯ\16\7\5\0\1Ɲ\2\0\2Ɲ\2\0" + "\3Ɲ\3\0\2Ɲ\14\0\12\7\2\0\1\7\1\0" + "\1\7\1ƞ\16\7\1\0\12\7\2\0\1\7\1\0" + "\3\7\1Ɵ\14\7\1\0\1Ơ\11\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\3\7" + "\1ơ\14\7\1\0\12\7\2\0\1\7\1\0\16\7" + "\1Ƣ\1\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1ƣ\10\7\1\0\4\7\1Ƥ\5\7\2\0\1\7" + "\1\0\20\7\1\0\1\7\1ƥ\10\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1Ʀ\7\7\2\0\1\7" + "\1\0\20\7\1\0\1Ƨ\11\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1ƨ" + "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ʃ" + "\12\7\1\0\2\7\1ƪ\7\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1ƫ\6\7\2\0\1\7\1\0" + "\20\7\1\0\5\7\1Ƭ\1ƭ\1\7\1Ʈ\1\7" + "\2\0\1\7\1\0\2\7\1Ư\1ư\12\7\1Ʊ" + "\1\7\1\0\12\7\2\0\1\7\1\0\1\7\1Ʋ" + "\16\7\1\0\10\7\1Ƴ\1\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1ƴ" + "\16\7\1\0\12\7\2\0\1Ƶ\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\14\7\1ƶ\3\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1Ʒ\16\7\1\0" + "\12\7\2\0\1\7\1\0\2\7\1Ƹ\15\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1ƹ\16\7\1\0" + "\12\7\2\0\1\7\1\0\11\7\1ƺ\6\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1ƻ\10\7\1\0" + "\3\7\1ƪ\6\7\2\0\1\7\1\0\20\7\1\0" + "\5\7\1Ƽ\4\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1ƽ\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1ƾ\1\0\20\7\1\0\12\7\2\0" + "\1ƿ\1\0\20\7\1\0\10\7\1ǀ\1\7\2\0" + "\1\7\1\0\20\7\1\0\3\7\1ǁ\6\7\2\0" + "\1\7\1\0\20\7\1\0\1ǂ\11\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\11\7" + "\1ǃ\6\7\1\0\12\7\2\0\1\7\1\0\13\7" + "\1Ǆ\4\7\1\0\4\7\1ǅ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1ǆ\16\7\1\0\4\7\1Ǉ\5\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1ǈ\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1ǉ\12\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1Ǌ\12\7\1\0\4\7\1ǋ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\2\7" + "\1ǌ\15\7\1\0\12\7\2\0\1\7\1\0\3\7" + "\1Ǎ\14\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1ǎ\16\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1Ǐ\16\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1ǐ\12\7\1\0\4\7\1Ǒ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7" + "\1ǒ\11\7\1\0\1Ǔ\11\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1ǔ" + "\16\7\1\0\4\7\1Ǖ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1ǖ" + "\12\7\1\0\12\7\2\0\1\7\1\0\14\7\1Ǘ" + "\3\7\1\0\12\7\2\0\1\7\1\0\3\7\1ǘ" + "\14\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ǚ" + "\12\7\1\0\4\7\1ǚ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1Ǜ" + "\16\7\1\0\4\7\1ǜ\5\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1ǝ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ǟ" + "\12\7\1\0\12\7\2\0\1\7\1\0\7\7\1ǟ" + "\10\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ǡ" + "\12\7\1\0\12\7\2\0\1\7\1\0\14\7\1ǡ" + "\3\7\5\0\1Ǣ\2\0\2Ǣ\2\0\3Ǣ\3\0" + "\2Ǣ\14\0\12\7\2\0\1\7\1\0\16\7\1ǣ" + "\1\7\1\0\12\7\2\0\1\7\1\0\16\7\1Ǥ" + "\1\7\1\0\12\7\2\0\1\7\1\0\7\7\1ǥ" + "\10\7\1\0\12\7\2\0\1\7\1\0\1\7\1Ǧ" + "\16\7\1\0\7\7\1ǧ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ǩ" + "\12\7\1\0\7\7\1ǩ\2\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1Ǫ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1ǫ\1\0\20\7\1\0" + "\4\7\1Ǭ\2\7\1ǭ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1Ǯ" + "\12\7\1\0\12\7\2\0\1\7\1\0\6\7\1ǯ" + "\11\7\1\0\12\7\2\0\1\7\1\0\2\7\1ǰ" + "\15\7\1\0\7\7\1Ǳ\2\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1ǲ\1ǳ\1\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1Ǵ\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1ǵ\3\7\1\0\12\7\2\0\1\7\1\0\3\7" + "\1Ƕ\14\7\5\0\1Ƿ\2\0\2Ƿ\2\0\3Ƿ" + "\3\0\2Ƿ\14\0\12\7\2\0\1\7\1\0\14\7" + "\1Ǹ\3\7\1\0\12\7\2\0\1\7\1\0\5\7" + "\1ǹ\12\7\1\0\1\7\1Ǻ\10\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1ǻ\3\7\1\0\4\7\1Ǽ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1ǽ\16\7\1\0\4\7\1Ǿ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1ǿ\3\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1Ȁ\3\7\1\0\2\7\1ȁ\7\7\2\0\1\7" + "\1\0\20\7\1\0\1Ȃ\11\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1ȃ\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1Ȅ" + "\15\7\1\0\3\7\1ȅ\1Ȇ\2\7\1ȇ\2\7" + "\2\0\1\7\1\0\5\7\1Ȉ\5\7\1ȉ\4\7" + "\1\0\2\7\1Ȋ\7\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1ȋ\1\7" + "\1Ȍ\1\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1ȍ\12\7\1Ȏ\3\7\1\0\12\7\2\0\1\7" + "\1\0\5\7\1ȏ\12\7\1\0\4\7\1Ȑ\5\7" + "\2\0\1\7\1\0\20\7\1\0\4\7\1ȑ\5\7" + "\2\0\1\7\1\0\20\7\1\0\1\7\1Ȓ\10\7" + "\2\0\1\7\1\0\20\7\1\0\4\7\1ȓ\5\7" + "\2\0\1\7\1\0\20\7\1\0\4\7\1Ȕ\5\7" + "\2\0\1\7\1\0\20\7\1\0\1ȕ\11\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\14\7\1Ȗ\3\7\1\0\1\7\1ȗ\10\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1Ș\5\7\2\0" + "\1\7\1\0\20\7\1\0\3\7\1ș\1\7\1Ț" + "\1ț\1Ȝ\2\7\2\0\1\7\1\0\3\7\1ȝ" + "\10\7\1Ȟ\1ȟ\2\7\1\0\2\7\1Ƞ\7\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1ȡ\16\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1Ȣ\16\7\1\0\4\7\1ȣ\5\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\2\7\1Ȥ\15\7\1\0\12\7\2\0\1\7" + "\1\0\14\7\1ȥ\3\7\1\0\1Ȧ\11\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1ȧ\5\7\2\0" + "\1\7\1\0\20\7\1\0\5\7\1Ȩ\4\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\6\7\1ȩ\11\7\1\0\12\7\2\0\1\7\1\0" + "\5\7\1Ȫ\12\7\1\0\12\7\2\0\1\7\1\0" + "\7\7\1ȫ\10\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1Ȭ\16\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1ȭ\16\7\1\0\12\7\2\0\1\7\1\0" + "\14\7\1Ȯ\3\7\1\0\4\7\1ȯ\2\7\1ȯ" + "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\6\7\1Ȱ\11\7\1\0\12\7\2\0" + "\1\7\1\0\4\7\1ȱ\13\7\1\0\1\7\1Ȳ" + "\10\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\10\7\1ȳ\7\7\1\0\4\7\1ȴ" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1ȵ\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\5\7\1ȶ\12\7\1\0\12\7\2\0\1\7\1\0" + "\5\7\1ȷ\12\7\1\0\12\7\2\0\1\7\1\0" + "\6\7\1ȸ\11\7\1\0\1ȹ\11\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1Ⱥ\7\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7" + "\1Ȼ\11\7\1\0\3\7\1ȼ\6\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\6\7" + "\1Ƚ\11\7\1\0\12\7\2\0\1\7\1\0\13\7" + "\1Ⱦ\4\7\1\0\1ȿ\11\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\3\7\1ɀ" + "\14\7\1\0\12\7\2\0\1\7\1\0\13\7\1Ɂ" + "\4\7\1\0\12\7\2\0\1\7\1\0\10\7\1ɂ" + "\7\7\1\0\12\7\2\0\1\7\1\0\2\7\1Ƀ" + "\15\7\1\0\12\7\2\0\1\7\1\0\11\7\1Ʉ" + "\6\7\1\0\3\7\1Ʌ\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1Ɇ" + "\10\7\1\0\4\7\1ɇ\5\7\2\0\1\7\1\0" + "\16\7\1Ɉ\1\7\1\0\12\7\2\0\1\7\1\0" + "\16\7\1Ɉ\1\7\1\0\12\7\2\0\1ɉ\1\0" + "\20\7\1\0\4\7\1Ɋ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ɋ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\13\7\1Ɍ" + "\4\7\1\0\12\7\2\0\1\7\1\0\7\7\1ɍ" + "\10\7\1\0\1\7\1Ɏ\10\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\15\7\1ɏ" + "\2\7\1\0\12\7\2\0\1\7\1\0\5\7\1ɐ" + "\12\7\1\0\12\7\2\0\1\7\1\0\5\7\1ɑ" + "\12\7\5\0\1ɒ\2\0\2ɒ\2\0\3ɒ\3\0" + "\2ɒ\14\0\1ɓ\11\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\6\7\1ɔ\11\7" + "\1\0\2\7\1ɕ\7\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\1\7\1ɖ\16\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1ɗ\12\7" + "\1\0\12\7\2\0\1\7\1\0\14\7\1ɘ\3\7" + "\1\0\12\7\2\0\1ə\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\5\7\1ɚ\12\7\1\0\12\7" + "\2\0\1\7\1\0\14\7\1ɛ\3\7\1\0\10\7" + "\1ɜ\1\7\2\0\1\7\1\0\20\7\1\0\1\7" + "\1ɝ\10\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\1\7\1ɞ\16\7\1\0\4\7" + "\1ɟ\5\7\2\0\1\7\1\0\20\7\1\0\7\7" + "\1ɠ\2\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\5\7\1ɡ\12\7\1\0\7\7" + "\1ɢ\2\7\2\0\1\7\1\0\20\7\1\0\12\7" + "\2\0\1\7\1\0\16\7\1ɣ\1\7\1\0\12\7" + "\2\0\1\7\1\0\7\7\1ɤ\10\7\1\0\12\7" + "\2\0\1\7\1\0\1\7\1ɥ\16\7\1\0\7\7" + "\1ɦ\2\7\2\0\1\7\1\0\20\7\1\0\4\7" + "\1ɧ\2\7\1ɨ\2\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1ɩ\12\7" + "\1\0\12\7\2\0\1\7\1\0\6\7\1ɪ\11\7" + "\1\0\12\7\2\0\1\7\1\0\5\7\1ɫ\12\7" + "\1\0\4\7\1ɬ\5\7\2\0\1\7\1\0\20\7" + "\1\0\2\7\1ɭ\7\7\2\0\1\7\1\0\20\7" + "\1\0\4\7\1ɮ\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\1\7\1ɯ\16\7" + "\1\0\1\7\1ɰ\10\7\2\0\1\7\1\0\20\7" + "\1\0\5\7\1ɱ\4\7\2\0\1\7\1\0\20\7" + "\1\0\3\7\1ɲ\6\7\2\0\1\7\1\0\20\7" + "\1\0\7\7\1ɳ\2\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\6\7\1ɴ\11\7" + "\1\0\4\7\1ɵ\1\7\1ɶ\3\7\2\0\1\7" + "\1\0\5\7\1ɷ\12\7\1\0\12\7\2\0\1\7" + "\1\0\6\7\1ɸ\11\7\1\0\12\7\2\0\1\7" + "\1\0\10\7\1ɹ\7\7\1\0\12\7\2\0\1\7" + "\1\0\5\7\1ɺ\12\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1ɻ\16\7\1\0\2\7\1ɼ\7\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\7\7\1ɽ\10\7\1\0\4\7\1ɾ\5\7" + "\2\0\1\7\1\0\20\7\1\0\7\7\1ɿ\2\7" + "\2\0\1\7\1\0\20\7\1\0\12\7\2\0\1\7" + "\1\0\1\7\1ʀ\16\7\1\0\12\7\2\0\1\7" + "\1\0\13\7\1ʁ\4\7\1\0\12\7\2\0\1ʂ" + "\1\0\20\7\1\0\4\7\1ʃ\5\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1ʄ\5\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1ʅ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1ʆ\3\7\1\0\1ʇ\11\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\16\7\1ʈ" + "\1\7\1\0\4\7\1ʉ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\4\7\1ʊ" + "\13\7\1\0\2\7\1ʋ\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1ʌ" + "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1ʍ" + "\10\7\1\0\4\7\1ʎ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʏ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1ʐ" + "\11\7\1\0\4\7\1ʑ\5\7\2\0\1\7\1\0" + "\20\7\1\0\1\7\1ʒ\10\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1ʓ" + "\10\7\1\0\5\7\1ʔ\4\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʕ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʖ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʗ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1ʘ" + "\12\7\1\0\12\7\2\0\1\7\1\0\6\7\1ʙ" + "\11\7\1\0\12\7\2\0\1\7\1\0\1\7\1ʚ" + "\16\7\1\0\12\7\2\0\1\7\1\0\14\7\1ʛ" + "\3\7\1\0\4\7\1ʜ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1ʝ" + "\10\7\1\0\4\7\1ʞ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1ʟ" + "\10\7\1\0\2\7\1ʠ\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1ʡ" + "\15\7\1\0\2\7\1ʢ\7\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʣ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ʤ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1ʥ" + "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1ʦ" + "\10\7\1\0\4\7\1ʧ\5\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1ʨ\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1ʩ" + "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1ʪ" + "\12\7\1\0\12\7\2\0\1ʫ\1\0\20\7\1\0" + "\7\7\1ʬ\2\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1ʭ\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1ʮ\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\13\7\1ʯ\4\7\1\0\2\7\1ʰ" + "\7\7\2\0\1\7\1\0\20\7\1\0\4\7\1ʱ" + "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1ʲ" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\2\7\1ʳ\15\7\1\0\12\7\2\0" + "\1\7\1\0\11\7\1ʴ\6\7\1\0\3\7\1ʵ" + "\6\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\3\7\1ʶ\14\7\1\0\12\7\2\0" + "\1\7\1\0\13\7\1ʷ\4\7\1\0\7\7\1ʸ" + "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\7\7\1ʹ\10\7\1\0\4\7\1ʺ" + "\5\7\2\0\1\7\1\0\16\7\1ʻ\1\7\1\0" + "\12\7\2\0\1\7\1\0\16\7\1ʻ\1\7\1\0" + "\12\7\2\0\1ʼ\1\0\20\7\1\0\4\7\1ʽ" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\5\7\1ʾ\12\7\1\0\12\7\2\0" + "\1\7\1\0\7\7\1ʿ\10\7\1\0\12\7\2\0" + "\1\7\1\0\4\7\1ˀ\13\7\1\0\12\7\2\0" + "\1\7\1\0\7\7\1ˁ\10\7\1\0\12\7\2\0" + "\1\7\1\0\3\7\1˂\14\7\1\0\2\7\1˃" + "\7\7\2\0\1\7\1\0\20\7\1\0\4\7\1˄" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\3\7\1˅\14\7\1\0\12\7\2\0" + "\1\7\1\0\11\7\1ˆ\6\7\1\0\12\7\2\0" + "\1\7\1\0\1\7\1ˇ\16\7\1\0\7\7\1ˈ" + "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\1\7\1ˉ\16\7\1\0\7\7\1ˊ" + "\2\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\1\7\1ˋ\16\7\1\0\12\7\2\0" + "\1\7\1\0\6\7\1ˌ\11\7\1\0\12\7\2\0" + "\1\7\1\0\6\7\1ˍ\11\7\1\0\10\7\1ˎ" + "\1\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\14\7\1ˏ\3\7\1\0\12\7\2\0" + "\1ː\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\3\7\1ˑ\14\7\1\0\4\7\1˒\5\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1˓\5\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1˔\5\7\2\0" + "\1\7\1\0\20\7\1\0\1˕\11\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1˖\10\7\1\0\6\7\1˗\3\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1˘\3\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1˙\10\7\1\0\3\7\1˚\6\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1˛\5\7\2\0\1\7" + "\1\0\20\7\1\0\2\7\1˜\7\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1˝\5\7\2\0\1\7" + "\1\0\20\7\1\0\4\7\1˞\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\1\7" + "\1˟\16\7\1\0\12\7\2\0\1\7\1\0\6\7" + "\1ˠ\11\7\1\0\12\7\2\0\1\7\1\0\14\7" + "\1ˡ\3\7\1\0\4\7\1ˢ\5\7\2\0\1\7" + "\1\0\20\7\1\0\12\7\2\0\1\7\1\0\7\7" + "\1ˣ\10\7\1\0\12\7\2\0\1\7\1\0\2\7" + "\1ˤ\1˥\14\7\1\0\12\7\2\0\1\7\1\0" + "\7\7\1˦\10\7\1\0\3\7\1˧\6\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1˨\5\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1˩\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1˪" + "\15\7\1\0\3\7\1˫\6\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1ˬ\5\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1˭\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1ˮ" + "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1˯" + "\12\7\1\0\3\7\1˰\6\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1˱\6\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1˲\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1˳" + "\12\7\1\0\12\7\2\0\1\7\1\0\1\7\1˴" + "\16\7\1\0\12\7\2\0\1\7\1\0\14\7\1˵" + "\3\7\1\0\4\7\1˶\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1˷" + "\12\7\1\0\12\7\2\0\1\7\1\0\5\7\1˸" + "\12\7\1\0\12\7\2\0\1\7\1\0\7\7\1˹" + "\10\7\1\0\4\7\1˺\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1˻" + "\3\7\1\0\12\7\2\0\1\7\1\0\4\7\1˼" + "\13\7\1\0\12\7\2\0\1\7\1\0\5\7\1˽" + "\12\7\1\0\3\7\1˾\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1˿" + "\12\7\1\0\12\7\2\0\1\7\1\0\10\7\1̀" + "\7\7\1\0\12\7\2\0\1\7\1\0\2\7\1́" + "\15\7\1\0\2\7\1̂\7\7\2\0\1\7\1\0" + "\20\7\1\0\3\7\1̃\6\7\2\0\1\7\1\0" + "\20\7\1\0\6\7\1̄\3\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1̅\2\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1̆\5\7\2\0\1\7\1\0" + "\20\7\1\0\1\7\1̇\10\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\5\7\1̈" + "\12\7\1\0\4\7\1̉\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1̊" + "\10\7\1\0\12\7\2\0\1\7\1\0\7\7\1̋" + "\10\7\1\0\2\7\1̌\7\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1̍" + "\16\7\1\0\12\7\2\0\1\7\1\0\1\7\1̎" + "\16\7\1\0\3\7\1̏\6\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\3\7\1̐" + "\14\7\1\0\4\7\1̑\5\7\2\0\1\7\1\0" + "\20\7\1\0\2\7\1̒\7\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1̓\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1̔" + "\16\7\1\0\12\7\2\0\1\7\1\0\5\7\1̕" + "\12\7\1\0\12\7\2\0\1\7\1\0\1\7\1̖" + "\16\7\1\0\7\7\1̗\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1̘" + "\16\7\1\0\1̙\11\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\11\7\1̚\6\7" + "\1\0\4\7\1̛\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1̜\10\7" + "\1\0\12\7\2\0\1\7\1\0\3\7\1̝\14\7" + "\1\0\4\7\1̞\5\7\2\0\1\7\1\0\20\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1̟\10\7" + "\1\0\12\7\2\0\1\7\1\0\2\7\1̠\15\7" + "\1\0\12\7\2\0\1\7\1\0\6\7\1̡\11\7" + "\1\0\12\7\2\0\1\7\1\0\7\7\1̢\10\7" + "\1\0\1̣\11\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\14\7\1̤\3\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1̥\11\7\1\0" + "\4\7\1̦\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1̧\11\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1̨\11\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1̩\16\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1̪\10\7\1\0" + "\4\7\1̫\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\5\7\1̬\12\7\1\0" + "\12\7\2\0\1\7\1\0\11\7\1̭\6\7\1\0" + "\2\7\1̮\7\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1̯\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1̰\10\7\1\0" + "\5\7\1̱\4\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\14\7\1̲\3\7\1\0" + "\4\7\1̳\5\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1̴\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\5\7\1̵\12\7\1\0" + "\5\7\1̶\4\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1̷\10\7\1\0" + "\4\7\1̸\2\7\1̸\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\6\7\1̹" + "\11\7\1\0\12\7\2\0\1\7\1\0\14\7\1̺" + "\3\7\1\0\4\7\1̻\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1̼" + "\3\7\1\0\12\7\2\0\1\7\1\0\5\7\1̽" + "\12\7\1\0\4\7\1̾\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1̿" + "\16\7\1\0\4\7\1̀\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\1\7\1́" + "\16\7\1\0\12\7\2\0\1\7\1\0\7\7\1͂" + "\10\7\1\0\5\7\1̓\4\7\2\0\1\7\1\0" + "\20\7\1\0\4\7\1̈́\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\14\7\1ͅ" + "\3\7\1\0\4\7\1͆\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\2\7\1͇" + "\15\7\1\0\12\7\2\0\1\7\1\0\3\7\1͈" + "\14\7\1\0\4\7\1͉\5\7\2\0\1\7\1\0" + "\20\7\1\0\7\7\1͊\2\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1͋\1\0\20\7\1\0" + "\3\7\1͌\6\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1͍\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1͎\1\0\20\7\1\0\12\7\2\0" + "\1͏\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\6\7\1͐\11\7\1\0\4\7\1͑\5\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\16\7\1͒\1\7\1\0\4\7\1͓\5\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1͔\1\0" + "\20\7\1\0\4\7\1͕\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\7\7\1͖" + "\10\7\1\0\12\7\2\0\1\7\1\0\6\7\1͗" + "\11\7\1\0\12\7\2\0\1\7\1\0\7\7\1͘" + "\10\7\1\0\4\7\1͙\2\7\1͙\2\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\14\7\1͚\3\7\1\0\1\7\1͛\10\7\2\0" + "\1\7\1\0\20\7\1\0\2\7\1͜\7\7\2\0" + "\1\7\1\0\20\7\1\0\4\7\1͝\5\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\2\7\1͞\15\7\1\0\12\7\2\0\1\7\1\0" + "\5\7\1͟\12\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1͠\16\7\1\0\12\7\2\0\1\7\1\0" + "\1\7\1͡\16\7\1\0\4\7\1͢\5\7\2\0" + "\1\7\1\0\20\7\1\0\12\7\2\0\1\7\1\0" + "\7\7\1ͣ\10\7\1\0\12\7\2\0\1ͤ\1\0" + "\20\7\1\0\4\7\1ͥ\5\7\2\0\1\7\1\0" + "\20\7\1\0\12\7\2\0\1\7\1\0\16\7\1ͦ" + "\1\7\1\0\12\7\2\0\1ͧ\1\0\20\7\1\0" + "\5\7\1ͨ\4\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1ͩ\10\7\1\0" + "\12\7\2\0\1\7\1\0\1\7\1ͪ\16\7\1\0" + "\12\7\2\0\1\7\1\0\6\7\1ͫ\11\7\1\0" + "\2\7\1ͬ\7\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1ͭ\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\16\7\1ͮ\1\7\1\0" + "\4\7\1ͯ\5\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1Ͱ\5\7\2\0\1\7\1\0\20\7\1\0" + "\4\7\1ͱ\5\7\2\0\1\7\1\0\20\7\1\0" + "\12\7\2\0\1\7\1\0\7\7\1Ͳ\10\7\1\0" + "\12\7\2\0\1ͳ\1\0\20\7\1\0\4\7\1ʹ" + "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1͵" + "\5\7\2\0\1\7\1\0\20\7\1\0\4\7\1Ͷ" + "\5\7\2\0\1\7\1\0\20\7\1\0\12\7\2\0" + "\1\7\1\0\5\7\1ͷ\12\7\1\0\12\7\2\0" + "\1\7\1\0\7\7\1͸\10\7\1\0\12\7\2\0" + "\1\7\1\0\5\7\1͹\12\7\1\0\12\7\2\0" + "\1\7\1\0\14\7\1ͺ\3\7\1\0\1ͻ\11\7" + "\2\0\1\7\1\0\20\7";

    private static int[] zzUnpackTrans() {
        int[] result = new int[23560];
        int offset = 0;
        offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    private static final int ZZ_UNKNOWN_ERROR = 0;

    private static final int ZZ_NO_MATCH = 1;

    private static final int ZZ_PUSHBACK_2BIG = 2;

    private static final String ZZ_ERROR_MSG[] = { "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large" };

    /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
    private static final int[] ZZ_ATTRIBUTE = zzUnpackAttribute();

    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\1\0\1\11\67\1\1\0\4\1\1\0\104\1\1\0" + "\4\1\1\0\120\1\1\0\4\1\1\0\117\1\1\0" + "\16\1\1\0\113\1\1\0\22\1\1\0\104\1\1\11" + "\24\1\1\0\132\1\1\11ĩ\1";

    private static int[] zzUnpackAttribute() {
        int[] result = new int[891];
        int offset = 0;
        offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int[] result) {
        int i = 0;
        int j = offset;
        int l = packed.length();
        while (i < l) {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do result[j++] = value; while (--count > 0);
        }
        return j;
    }

    /** the input device */
    private java.io.Reader zzReader;

    /** the current state of the DFA */
    private int zzState;

    /** the current lexical state */
    private int zzLexicalState = YYINITIAL;

    /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
    private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

    /** the textposition at the last accepting state */
    private int zzMarkedPos;

    /** the current text position in the buffer */
    private int zzCurrentPos;

    /** startRead marks the beginning of the yytext() string in the buffer */
    private int zzStartRead;

    /** endRead marks the last character in the buffer, that has been read
      from input */
    private int zzEndRead;

    /** number of newlines encountered up to the start of the matched text */
    private int yyline;

    /** the number of characters up to the start of the matched text */
    private int yychar;

    /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
    private int yycolumn;

    /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
    private boolean zzAtBOL = true;

    /** zzAtEOF == true <=> the scanner is at the EOF */
    private boolean zzAtEOF;

    /** denotes if the user-EOF-code has already been executed */
    private boolean zzEOFDone;

    /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
    FlexColorScanner(java.io.Reader in) {
        this.zzReader = in;
    }

    /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
    FlexColorScanner(java.io.InputStream in) {
        this(new java.io.InputStreamReader(in));
    }

    /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
    private static char[] zzUnpackCMap(String packed) {
        char[] map = new char[0x10000];
        int i = 0;
        int j = 0;
        while (i < 1246) {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do map[j++] = value; while (--count > 0);
        }
        return map;
    }

    /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
    private boolean zzRefill() throws java.io.IOException {
        if (zzStartRead > 0) {
            System.arraycopy(zzBuffer, zzStartRead, zzBuffer, 0, zzEndRead - zzStartRead);
            zzEndRead -= zzStartRead;
            zzCurrentPos -= zzStartRead;
            zzMarkedPos -= zzStartRead;
            zzStartRead = 0;
        }
        if (zzCurrentPos >= zzBuffer.length) {
            char newBuffer[] = new char[zzCurrentPos * 2];
            System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
            zzBuffer = newBuffer;
        }
        int numRead = zzReader.read(zzBuffer, zzEndRead, zzBuffer.length - zzEndRead);
        if (numRead > 0) {
            zzEndRead += numRead;
            return false;
        }
        if (numRead == 0) {
            int c = zzReader.read();
            if (c == -1) {
                return true;
            } else {
                zzBuffer[zzEndRead++] = (char) c;
                return false;
            }
        }
        return true;
    }

    /**
   * Closes the input stream.
   */
    public final void yyclose() throws java.io.IOException {
        zzAtEOF = true;
        zzEndRead = zzStartRead;
        if (zzReader != null) zzReader.close();
    }

    /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
    public final void yyreset(java.io.Reader reader) {
        zzReader = reader;
        zzAtBOL = true;
        zzAtEOF = false;
        zzEOFDone = false;
        zzEndRead = zzStartRead = 0;
        zzCurrentPos = zzMarkedPos = 0;
        yyline = yychar = yycolumn = 0;
        zzLexicalState = YYINITIAL;
    }

    /**
   * Returns the current lexical state.
   */
    public final int yystate() {
        return zzLexicalState;
    }

    /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
    public final void yybegin(int newState) {
        zzLexicalState = newState;
    }

    /**
   * Returns the text matched by the current regular expression.
   */
    public final String yytext() {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }

    /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
    public final char yycharat(int pos) {
        return zzBuffer[zzStartRead + pos];
    }

    /**
   * Returns the length of the matched text region.
   */
    public final int yylength() {
        return zzMarkedPos - zzStartRead;
    }

    /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
    private void zzScanError(int errorCode) {
        String message;
        try {
            message = ZZ_ERROR_MSG[errorCode];
        } catch (ArrayIndexOutOfBoundsException e) {
            message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
        }
        throw new Error(message);
    }

    /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
    public void yypushback(int number) {
        if (number > yylength()) zzScanError(ZZ_PUSHBACK_2BIG);
        zzMarkedPos -= number;
    }

    /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
    public ColorToken yylex() throws java.io.IOException {
        int zzInput;
        int zzAction;
        int zzCurrentPosL;
        int zzMarkedPosL;
        int zzEndReadL = zzEndRead;
        char[] zzBufferL = zzBuffer;
        char[] zzCMapL = ZZ_CMAP;
        int[] zzTransL = ZZ_TRANS;
        int[] zzRowMapL = ZZ_ROWMAP;
        int[] zzAttrL = ZZ_ATTRIBUTE;
        while (true) {
            zzMarkedPosL = zzMarkedPos;
            yychar += zzMarkedPosL - zzStartRead;
            zzAction = -1;
            zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
            zzState = ZZ_LEXSTATE[zzLexicalState];
            zzForAction: {
                while (true) {
                    if (zzCurrentPosL < zzEndReadL) zzInput = zzBufferL[zzCurrentPosL++]; else if (zzAtEOF) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if (eof) {
                            zzInput = YYEOF;
                            break zzForAction;
                        } else {
                            zzInput = zzBufferL[zzCurrentPosL++];
                        }
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if (zzNext == -1) break zzForAction;
                    zzState = zzNext;
                    int zzAttributes = zzAttrL[zzState];
                    if ((zzAttributes & 1) == 1) {
                        zzAction = zzState;
                        zzMarkedPosL = zzCurrentPosL;
                        if ((zzAttributes & 8) == 8) break zzForAction;
                    }
                }
            }
            zzMarkedPos = zzMarkedPosL;
            switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
                case 55:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00008B");
                    }
                case 142:
                    break;
                case 79:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xD3D3D3");
                    }
                case 143:
                    break;
                case 75:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDEB887");
                    }
                case 144:
                    break;
                case 9:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00FFFF");
                    }
                case 145:
                    break;
                case 109:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x228B22");
                    }
                case 146:
                    break;
                case 33:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFE4C4");
                    }
                case 147:
                    break;
                case 23:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x000000");
                    }
                case 148:
                    break;
                case 17:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFFF0");
                    }
                case 149:
                    break;
                case 107:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xADFF2F");
                    }
                case 150:
                    break;
                case 76:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xB22222");
                    }
                case 151:
                    break;
                case 16:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF5DEB3");
                    }
                case 152:
                    break;
                case 67:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xD2691E");
                    }
                case 153:
                    break;
                case 46:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF00FF");
                    }
                case 154:
                    break;
                case 70:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xBDB76B");
                    }
                case 155:
                    break;
                case 49:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFF5EE");
                    }
                case 156:
                    break;
                case 101:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x90EE90");
                    }
                case 157:
                    break;
                case 97:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x1E90FF");
                    }
                case 158:
                    break;
                case 92:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x7FFF00");
                    }
                case 159:
                    break;
                case 43:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x" + yytext().substring(1));
                    }
                case 160:
                    break;
                case 94:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF8C00");
                    }
                case 161:
                    break;
                case 106:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x8B008B");
                    }
                case 162:
                    break;
                case 4:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x008080");
                    }
                case 163:
                    break;
                case 6:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFC0CB");
                    }
                case 164:
                    break;
                case 95:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x9932CC");
                    }
                case 165:
                    break;
                case 57:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xE6E6FA");
                    }
                case 166:
                    break;
                case 45:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x8B0000");
                    }
                case 167:
                    break;
                case 66:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF0F8FF");
                    }
                case 168:
                    break;
                case 68:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x5F9EA0");
                    }
                case 169:
                    break;
                case 124:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00CED1");
                    }
                case 170:
                    break;
                case 136:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x48D1CC");
                    }
                case 171:
                    break;
                case 38:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFF00");
                    }
                case 172:
                    break;
                case 82:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x7CFC00");
                    }
                case 173:
                    break;
                case 104:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x8B4513");
                    }
                case 174:
                    break;
                case 11:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFD700");
                    }
                case 175:
                    break;
                case 116:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x87CEFA");
                    }
                case 176:
                    break;
                case 111:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFFE0");
                    }
                case 177:
                    break;
                case 37:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xEE82EE");
                    }
                case 178:
                    break;
                case 58:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFE4B5");
                    }
                case 179:
                    break;
                case 62:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x708090");
                    }
                case 180:
                    break;
                case 80:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xADD8E6");
                    }
                case 181:
                    break;
                case 126:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x483D8B");
                    }
                case 182:
                    break;
                case 18:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF0FFFF");
                    }
                case 183:
                    break;
                case 108:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFAF0");
                    }
                case 184:
                    break;
                case 127:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xB8860B");
                    }
                case 185:
                    break;
                case 99:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x8A2BE2");
                    }
                case 186:
                    break;
                case 32:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x800080");
                    }
                case 187:
                    break;
                case 135:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x3CB371");
                    }
                case 188:
                    break;
                case 123:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xD87093");
                    }
                case 189:
                    break;
                case 21:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF5F5DC");
                    }
                case 190:
                    break;
                case 141:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFAFAD2");
                    }
                case 191:
                    break;
                case 117:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFACD");
                    }
                case 192:
                    break;
                case 50:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x2E8B57");
                    }
                case 193:
                    break;
                case 71:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xBC8F8F");
                    }
                case 194:
                    break;
                case 128:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x20B2AA");
                    }
                case 195:
                    break;
                case 73:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDCDCDC");
                    }
                case 196:
                    break;
                case 61:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x4682B4");
                    }
                case 197:
                    break;
                case 65:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x98FB98");
                    }
                case 198:
                    break;
                case 35:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFA500");
                    }
                case 199:
                    break;
                case 26:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x808000");
                    }
                case 200:
                    break;
                case 60:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x40E0D0");
                    }
                case 201:
                    break;
                case 122:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xEEE8AA");
                    }
                case 202:
                    break;
                case 113:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x9ACD32");
                    }
                case 203:
                    break;
                case 53:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x008B8B");
                    }
                case 204:
                    break;
                case 121:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xAFEEEE");
                    }
                case 205:
                    break;
                case 138:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xC71585");
                    }
                case 206:
                    break;
                case 130:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x6495ED");
                    }
                case 207:
                    break;
                case 41:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x87CEEB");
                    }
                case 208:
                    break;
                case 91:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x7FFFD4");
                    }
                case 209:
                    break;
                case 84:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF5FFFA");
                    }
                case 210:
                    break;
                case 12:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x0000FF");
                    }
                case 211:
                    break;
                case 36:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDA70D6");
                    }
                case 212:
                    break;
                case 63:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x6A5ACD");
                    }
                case 213:
                    break;
                case 100:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF08080");
                    }
                case 214:
                    break;
                case 96:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x9400D3");
                    }
                case 215:
                    break;
                case 8:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDDA0DD");
                    }
                case 216:
                    break;
                case 137:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x7B68EE");
                    }
                case 217:
                    break;
                case 14:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x000080");
                    }
                case 218:
                    break;
                case 52:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF1493");
                    }
                case 219:
                    break;
                case 56:
                    {
                        return new ColorToken(yychar, yychar + yylength(), yytext());
                    }
                case 220:
                    break;
                case 140:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00FA9A");
                    }
                case 221:
                    break;
                case 28:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF6347");
                    }
                case 222:
                    break;
                case 25:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF0E68C");
                    }
                case 223:
                    break;
                case 83:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFE4E1");
                    }
                case 224:
                    break;
                case 133:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xB0C4DE");
                    }
                case 225:
                    break;
                case 13:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00FF00");
                    }
                case 226:
                    break;
                case 93:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xE9967A");
                    }
                case 227:
                    break;
                case 44:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x696969");
                    }
                case 228:
                    break;
                case 87:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF5F5F5");
                    }
                case 229:
                    break;
                case 24:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFAF0E6");
                    }
                case 230:
                    break;
                case 139:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x66CDAA");
                    }
                case 231:
                    break;
                case 118:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x191970");
                    }
                case 232:
                    break;
                case 81:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x32CD32");
                    }
                case 233:
                    break;
                case 112:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFDEAD");
                    }
                case 234:
                    break;
                case 54:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xA9A9A9");
                    }
                case 235:
                    break;
                case 15:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFFFF");
                    }
                case 236:
                    break;
                case 64:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFDAB9");
                    }
                case 237:
                    break;
                case 132:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFEBCD");
                    }
                case 238:
                    break;
                case 20:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x008000");
                    }
                case 239:
                    break;
                case 69:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x006400");
                    }
                case 240:
                    break;
                case 39:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF69B4");
                    }
                case 241:
                    break;
                case 31:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFA8072");
                    }
                case 242:
                    break;
                case 3:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF0000");
                    }
                case 243:
                    break;
                case 42:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDC143C");
                    }
                case 244:
                    break;
                case 29:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xA0522D");
                    }
                case 245:
                    break;
                case 48:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF0FFF0");
                    }
                case 246:
                    break;
                case 89:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFEFD5");
                    }
                case 247:
                    break;
                case 85:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF4500");
                    }
                case 248:
                    break;
                case 120:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xBA55D3");
                    }
                case 249:
                    break;
                case 131:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x556B2F");
                    }
                case 250:
                    break;
                case 5:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFFAFA");
                    }
                case 251:
                    break;
                case 7:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xCD853F");
                    }
                case 252:
                    break;
                case 74:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xDAA520");
                    }
                case 253:
                    break;
                case 47:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFDF5E6");
                    }
                case 254:
                    break;
                case 129:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFF0F5");
                    }
                case 255:
                    break;
                case 51:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFF8DC");
                    }
                case 256:
                    break;
                case 110:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFA07A");
                    }
                case 257:
                    break;
                case 105:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00BFFF");
                    }
                case 258:
                    break;
                case 88:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF4A460");
                    }
                case 259:
                    break;
                case 77:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFFB6C1");
                    }
                case 260:
                    break;
                case 114:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFAEBD7");
                    }
                case 261:
                    break;
                case 2:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xD2B48C");
                    }
                case 262:
                    break;
                case 72:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x4169E1");
                    }
                case 263:
                    break;
                case 125:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x2F4F4F");
                    }
                case 264:
                    break;
                case 22:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xA52A2A");
                    }
                case 265:
                    break;
                case 86:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x6B8E23");
                    }
                case 266:
                    break;
                case 34:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x800000");
                    }
                case 267:
                    break;
                case 103:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x00FF7F");
                    }
                case 268:
                    break;
                case 40:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xD8BFD8");
                    }
                case 269:
                    break;
                case 1:
                    {
                    }
                case 270:
                    break;
                case 98:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xF8F8FF");
                    }
                case 271:
                    break;
                case 78:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xE0FFFF");
                    }
                case 272:
                    break;
                case 27:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x4B0082");
                    }
                case 273:
                    break;
                case 19:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xFF7F50");
                    }
                case 274:
                    break;
                case 10:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x808080");
                    }
                case 275:
                    break;
                case 119:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x9370D8");
                    }
                case 276:
                    break;
                case 30:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xC0C0C0");
                    }
                case 277:
                    break;
                case 115:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x8FBC8F");
                    }
                case 278:
                    break;
                case 59:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xCD5C5C");
                    }
                case 279:
                    break;
                case 134:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x778899");
                    }
                case 280:
                    break;
                case 102:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0x0000CD");
                    }
                case 281:
                    break;
                case 90:
                    {
                        return new ColorToken(yychar, yychar + yylength(), "0xB0E0E6");
                    }
                case 282:
                    break;
                default:
                    if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                        zzAtEOF = true;
                        return null;
                    } else {
                        zzScanError(ZZ_NO_MATCH);
                    }
            }
        }
    }
}
