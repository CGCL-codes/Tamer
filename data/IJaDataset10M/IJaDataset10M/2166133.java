package Interface;

import Interface.Combos.Itens;
import Modelo.ConexaoBD;
import java.io.FileInputStream;
import java.sql.*;
import java.util.Iterator;
import java.util.Map;
import java.util.Properties;
import java.util.Set;
import javax.swing.JButton;

/**
 * Form para cadastro de formulários
 * @author Jonas Gualberto Diel [jonasdiel@gmail.com]
 */
public class FormRespostas extends javax.swing.JInternalFrame {

    public static Connection con;

    public static Statement stmt;

    private static String FUNCTION;

    private int questionCategoryId;

    /** Creates new form FormPessoa */
    public FormRespostas() {
        abreConexao();
        initComponents();
        preparaComboBoxFormulario();
    }

    private void abreConexao() {
        try {
            con = ConexaoBD.getInstance().getConnection();
            stmt = con.createStatement();
        } catch (Exception e) {
            System.out.print(e);
        }
    }

    public void preparaComboBoxFormulario() {
        Combos cmb = new Combos("rshForm");
        Map<String, Itens> m = cmb.getMap();
        formId.removeAllItems();
        formId.addItem("::Selecione::");
        Set<String> chaves = m.keySet();
        Iterator<String> it = chaves.iterator();
        while (it.hasNext()) {
            String chave = it.next();
            formId.addItem(chave);
        }
    }

    /**
     * @param aFUNCTION the FUNCTION to set
     */
    public static void setFunction(String aFUNCTION) {
        FUNCTION = aFUNCTION;
    }

    /**
     * @return the FUNCTION
     */
    public static String getFunction() {
        return FUNCTION;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        btnGerar = new javax.swing.JButton();
        validaFormId = new javax.swing.JLabel();
        labelFormId = new javax.swing.JLabel();
        formId = new javax.swing.JComboBox();
        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Cadastrar respostas");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("FormRelatorio");
        btnGerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/imagens/save_as.png")));
        btnGerar.setText("Gerar");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });
        validaFormId.setForeground(new java.awt.Color(255, 0, 0));
        labelFormId.setText("Formulário:");
        formId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        formId.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formIdActionPerformed(evt);
            }
        });
        formId.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyPressed(java.awt.event.KeyEvent evt) {
                formIdKeyPressed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(btnGerar).addGroup(layout.createSequentialGroup().addComponent(labelFormId).addGap(59, 59, 59).addComponent(formId, 0, 277, Short.MAX_VALUE).addGap(18, 18, 18).addComponent(validaFormId, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(30, 30, 30)))));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(validaFormId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(labelFormId).addComponent(formId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE).addComponent(btnGerar).addGap(19, 19, 19)));
        getAccessibleContext().setAccessibleName("");
        pack();
    }

    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {
        String fileQuestionario = "";
        if (true) {
            try {
                Properties prop = new Properties();
                prop.load(new FileInputStream("REPORTS.properties"));
                fileQuestionario = prop.getProperty("report.questionario.path");
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }

    private void formIdActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void formIdKeyPressed(java.awt.event.KeyEvent evt) {
    }

    @Override
    public void setDefaultCloseOperation(int operation) {
        super.setDefaultCloseOperation(operation);
    }

    private javax.swing.JButton btnGerar;

    private javax.swing.JComboBox formId;

    private javax.swing.JLabel labelFormId;

    private javax.swing.JLabel validaFormId;
}
