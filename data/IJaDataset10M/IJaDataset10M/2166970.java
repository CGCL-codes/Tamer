package newgen.presentation.component;

/**
 *
 * @author  Administrator
 */
public class BibliographicDetails extends javax.swing.JPanel {

    public static BibliographicDetails getInstance() {
        return SINGLETON;
    }

    /** Creates new form BibliographicDetailsPanel */
    private BibliographicDetails() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        lTitle = new javax.swing.JLabel();
        tTitle = new newgen.presentation.UnicodeTextField();
        lAuthor = new javax.swing.JLabel();
        tAuthor = new newgen.presentation.UnicodeTextField();
        lEdition = new javax.swing.JLabel();
        tEdition = new newgen.presentation.UnicodeTextField();
        lPublisher = new javax.swing.JLabel();
        tPublisher = new newgen.presentation.UnicodeTextField();
        lSeries = new javax.swing.JLabel();
        tSeries = new newgen.presentation.UnicodeTextField();
        lISBN = new javax.swing.JLabel();
        tISBN = new newgen.presentation.UnicodeTextField();
        lPublishYear = new javax.swing.JLabel();
        tPublishYear = new newgen.presentation.component.NTextField();
        lPublishPlace = new javax.swing.JLabel();
        tPublishPlace = new newgen.presentation.UnicodeTextField();
        lVolumes = new javax.swing.JLabel();
        tVolumes = new newgen.presentation.UnicodeTextField();
        bEditVolume = new javax.swing.JButton();
        bDeleteVolume = new javax.swing.JButton();
        setLayout(new java.awt.GridBagLayout());
        lTitle.setForeground(new java.awt.Color(170, 0, 0));
        lTitle.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Title"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lTitle, gridBagConstraints);
        tTitle.setColumns(30);
        tTitle.setMinimumSize(new java.awt.Dimension(4, 19));
        tTitle.setPreferredSize(new java.awt.Dimension(334, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(tTitle, gridBagConstraints);
        lAuthor.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Author"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lAuthor, gridBagConstraints);
        tAuthor.setColumns(30);
        tAuthor.setMinimumSize(new java.awt.Dimension(4, 19));
        tAuthor.setPreferredSize(new java.awt.Dimension(334, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tAuthor, gridBagConstraints);
        lEdition.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Edition"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lEdition, gridBagConstraints);
        tEdition.setMinimumSize(new java.awt.Dimension(4, 19));
        tEdition.setPreferredSize(new java.awt.Dimension(169, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tEdition, gridBagConstraints);
        lPublisher.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Publisher"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lPublisher, gridBagConstraints);
        tPublisher.setColumns(25);
        tPublisher.setMinimumSize(new java.awt.Dimension(4, 19));
        tPublisher.setPreferredSize(new java.awt.Dimension(279, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tPublisher, gridBagConstraints);
        lSeries.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Series"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lSeries, gridBagConstraints);
        tSeries.setMinimumSize(new java.awt.Dimension(4, 19));
        tSeries.setPreferredSize(new java.awt.Dimension(169, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tSeries, gridBagConstraints);
        lISBN.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("ISBN"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lISBN, gridBagConstraints);
        tISBN.setMinimumSize(new java.awt.Dimension(4, 19));
        tISBN.setPreferredSize(new java.awt.Dimension(169, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tISBN, gridBagConstraints);
        lPublishYear.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Publishyear"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lPublishYear, gridBagConstraints);
        tPublishYear.setText("");
        tPublishYear.setMinimumSize(new java.awt.Dimension(4, 19));
        tPublishYear.setPreferredSize(new java.awt.Dimension(169, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        add(tPublishYear, gridBagConstraints);
        lPublishPlace.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Placeofpublication"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lPublishPlace, gridBagConstraints);
        tPublishPlace.setColumns(25);
        tPublishPlace.setMinimumSize(new java.awt.Dimension(4, 19));
        tPublishPlace.setPreferredSize(new java.awt.Dimension(279, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(tPublishPlace, gridBagConstraints);
        lVolumes.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Volumes"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        add(lVolumes, gridBagConstraints);
        tVolumes.setEditable(false);
        tVolumes.setFont(new java.awt.Font("Arial Unicode MS", 1, 12));
        tVolumes.setMinimumSize(new java.awt.Dimension(4, 19));
        tVolumes.setPreferredSize(new java.awt.Dimension(184, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        add(tVolumes, gridBagConstraints);
        bEditVolume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/general/Edit16.gif")));
        bEditVolume.setToolTipText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("EditVolume"));
        bEditVolume.setMinimumSize(new java.awt.Dimension(43, 19));
        bEditVolume.setPreferredSize(new java.awt.Dimension(43, 19));
        bEditVolume.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditVolumeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        add(bEditVolume, gridBagConstraints);
        bDeleteVolume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/general/Delete16.gif")));
        bDeleteVolume.setToolTipText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("DeleteVolume"));
        bDeleteVolume.setMinimumSize(new java.awt.Dimension(43, 19));
        bDeleteVolume.setPreferredSize(new java.awt.Dimension(43, 19));
        bDeleteVolume.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteVolumeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(bDeleteVolume, gridBagConstraints);
    }

    private void bDeleteVolumeActionPerformed(java.awt.event.ActionEvent evt) {
        tVolumes.setText("");
    }

    private void bEditVolumeActionPerformed(java.awt.event.ActionEvent evt) {
        newgen.presentation.acquisitions.acqAdv.StartEndVolumeEnumChronDialog startEndVolumeEnumChronDialog = newgen.presentation.acquisitions.acqAdv.StartEndVolumeEnumChronDialog.getInstance();
        startEndVolumeEnumChronDialog.disablePanel3();
        startEndVolumeEnumChronDialog.cancelValues();
        startEndVolumeEnumChronDialog.cancelCaptions();
        startEndVolumeEnumChronDialog.setDataToStartAndEndVol(volume, "0.0", "1", "US Dollar");
        startEndVolumeEnumChronDialog.setSize(420, 430);
        startEndVolumeEnumChronDialog.show();
        if (startEndVolumeEnumChronDialog.getMODE() == startEndVolumeEnumChronDialog.OK_MODE) {
            volume = startEndVolumeEnumChronDialog.getXmlDump();
            tVolumes.setText(startEndVolumeEnumChronDialog.getVolDisplayString());
        }
    }

    public int getReturnCode() {
        return returnCode;
    }

    public void setBibliographicDetails(String mode, String id, String libId) {
        this.mode = mode;
        this.id = id;
        this.libId = libId;
        java.util.Hashtable ht = new java.util.Hashtable();
        ht.put("Mode", mode);
        ht.put("Id", id);
        ht.put("LibId", libId);
        org.jdom.Element response = newgen.presentation.component.NewGenXMLGenerator.getInstance().getRootElement(newgen.presentation.component.ServletConnector.getInstance().sendRequest("Utility", newgen.presentation.component.NewGenXMLGenerator.getInstance().buildXMLDocument("14", ht)));
        if (response.getChildText("Success").equals("Y")) {
            try {
                tTitle.setText(response.getChildText("Title"));
                tAuthor.setText(response.getChildText("Author"));
                tEdition.setText(response.getChildText("Edition"));
                tISBN.setText(response.getChildText("ISBN"));
                tSeries.setText(response.getChildText("Series"));
                tPublishYear.setText(response.getChildText("PublishYear"));
                tPublisher.setText(response.getChildText("Publisher"));
                tPublishPlace.setText(response.getChildText("PublishPlace"));
                this.volume = response.getChildText("Volume");
                if (volume.startsWith("<")) tVolumes.setText(util.Utility.getInstance().getEnumChronoDisplayString(volume)); else tVolumes.setText(volume);
            } catch (Exception e) {
            }
        }
    }

    public void modifyBibliographicDetails() {
        if (tTitle.getText().trim().length() > 0) {
            java.util.Hashtable ht = new java.util.Hashtable();
            ht.put("Mode", mode);
            ht.put("Id", id);
            ht.put("LibId", libId);
            ht.put("Title", tTitle.getText());
            ht.put("Author", tAuthor.getText());
            ht.put("Edition", tEdition.getText());
            ht.put("ISBN", tISBN.getText());
            ht.put("Series", tSeries.getText());
            ht.put("PublishYear", tPublishYear.getText());
            ht.put("Publisher", tPublisher.getText());
            ht.put("PublishPlace", tPublishPlace.getText());
            if (tVolumes.getText().equals("")) ht.put("Volume", ""); else ht.put("Volume", volume);
            org.jdom.Element success = newgen.presentation.component.NewGenXMLGenerator.getInstance().getRootElement(newgen.presentation.component.ServletConnector.getInstance().sendRequest("Utility", newgen.presentation.component.NewGenXMLGenerator.getInstance().buildXMLDocument("15", ht)));
            if (success.getText().equals("Y")) returnCode = 1; else returnCode = 0;
        } else {
            newgen.presentation.NewGenMain.getAppletInstance().showInformationMessage(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Entertitle"));
            returnCode = 2;
        }
    }

    private javax.swing.JButton bDeleteVolume;

    private javax.swing.JButton bEditVolume;

    private javax.swing.JLabel lAuthor;

    private javax.swing.JLabel lEdition;

    private javax.swing.JLabel lISBN;

    private javax.swing.JLabel lPublishPlace;

    private javax.swing.JLabel lPublishYear;

    private javax.swing.JLabel lPublisher;

    private javax.swing.JLabel lSeries;

    private javax.swing.JLabel lTitle;

    private javax.swing.JLabel lVolumes;

    private newgen.presentation.UnicodeTextField tAuthor;

    private newgen.presentation.UnicodeTextField tEdition;

    private newgen.presentation.UnicodeTextField tISBN;

    private newgen.presentation.UnicodeTextField tPublishPlace;

    private newgen.presentation.component.NTextField tPublishYear;

    private newgen.presentation.UnicodeTextField tPublisher;

    private newgen.presentation.UnicodeTextField tSeries;

    private newgen.presentation.UnicodeTextField tTitle;

    private newgen.presentation.UnicodeTextField tVolumes;

    private String mode = null;

    private String id = null;

    private String libId = null;

    private String volume = null;

    private int returnCode = 0;

    private static final BibliographicDetails SINGLETON = new BibliographicDetails();
}
