package com.pavisoft.shuffler.gui;

import com.pavisoft.shuffler.backend.StudentList;
import com.pavisoft.shuffler.backend.StudentListIO;
import com.pavisoft.shuffler.gui.ClassEditor;
import com.pavisoft.shuffler.util.Utilities;
import java.awt.FileDialog;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JSeparator;

/**
 *
 * @author hsg_rsmorris
 */
public class MainWindow extends javax.swing.JFrame {

    private static StudentList stuList;

    ArrayList<JComponent> stuLabels;

    private File stuListFile;

    GridBagLayout lmGridBag;

    Font stuFont;

    /** Creates new form MainWindow */
    public MainWindow() {
        initComponents();
        lmGridBag = new GridBagLayout();
        this.setLayout(lmGridBag);
        stuLabels = new ArrayList<JComponent>();
        stuList = new StudentList();
        String[] students = { "Robert", "Andy", "Jamie", "Wenyu", "Arash", "Mikhael", "Sarah", "John", "Travis", "Libby", "Mariah C." };
        students = new String[] { "Robert", "Andy", "Jamie", "Wenyu", "Arash", "Mikhael", "Sarah", "John", "Travis", "Libby", "Mariah", "Amaia", "Adolfo" };
        stuList = new StudentList();
        for (String s : students) stuList.addStudent(s);
        stuList.addDispreferredPair("1", "2");
        stuList.addDispreferredPair("2", "3");
        studentListChanged();
        stuFont = new JLabel().getFont();
        stuFont = new Font(new JLabel().getFont().getFontName(), Font.BOLD, 40);
    }

    /**
     * Reisizes the text of the label to best fit and fill the
     * availalable space.
     * @param label The Label to resize
     */
    private void resizeLabelText(JButton label) {
    }

    private void resizeLabelText(JLabel label) {
        return;
    }

    private void resizeLabelText(JComponent label) {
        label.setFont(stuFont);
        if (label instanceof JButton) resizeLabelText((JButton) label); else if (label instanceof JLabel) resizeLabelText((JLabel) label);
    }

    /**
     * Clears the frame of all student group labels. Call before
     * creating new ones after shuffling.
     */
    private void clearStuLabels() {
        for (JComponent jLbl : stuLabels) {
            this.remove(jLbl);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        btngrpGroupSize = new javax.swing.ButtonGroup();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuNew = new javax.swing.JMenuItem();
        mnuOpen = new javax.swing.JMenuItem();
        mnuOpenRecent = new javax.swing.JMenu();
        mnuSave = new javax.swing.JMenuItem();
        mnuSaveAs = new javax.swing.JMenuItem();
        mnuFileSep1 = new javax.swing.JPopupMenu.Separator();
        mnuExit = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuEditClass = new javax.swing.JMenuItem();
        mnuAttendance = new javax.swing.JMenu();
        mnuShuffle = new javax.swing.JMenu();
        jmnuShuffe = new javax.swing.JMenuItem();
        mnuGroupSize = new javax.swing.JMenu();
        mnuGroupSize2 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize3 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize4 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize5 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize6 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize7 = new javax.swing.JRadioButtonMenuItem();
        mnuGroupSize8 = new javax.swing.JRadioButtonMenuItem();
        mnuIgnorePrefs = new javax.swing.JCheckBoxMenuItem();
        mnuHelp = new javax.swing.JMenu();
        mnuHelpAbout = new javax.swing.JMenuItem();
        mnuShuffleNow = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Shuffler");
        mnuFile.setText("File");
        mnuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnuNew.setText("New class");
        mnuNew.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuNewActionPerformed(evt);
            }
        });
        mnuFile.add(mnuNew);
        mnuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mnuOpen.setText("Open...");
        mnuOpen.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuOpen);
        mnuOpenRecent.setText("Open recent");
        mnuFile.add(mnuOpenRecent);
        mnuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnuSave.setText("Save");
        mnuSave.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuSave);
        mnuSaveAs.setText("Save As...");
        mnuSaveAs.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSaveAsActionPerformed(evt);
            }
        });
        mnuFile.add(mnuSaveAs);
        mnuFile.add(mnuFileSep1);
        mnuExit.setText("Exit");
        mnuFile.add(mnuExit);
        jMenuBar1.add(mnuFile);
        mnuEdit.setText("Edit");
        mnuEditClass.setText("Edit class");
        mnuEditClass.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditClassActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditClass);
        jMenuBar1.add(mnuEdit);
        mnuAttendance.setText("Attendance");
        jMenuBar1.add(mnuAttendance);
        mnuShuffle.setText("Shuffle");
        jmnuShuffe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jmnuShuffe.setText("Shuffle");
        jmnuShuffe.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuShuffleActionPerformed(evt);
            }
        });
        mnuShuffle.add(jmnuShuffe);
        mnuGroupSize.setText("Group size");
        mnuGroupSize2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize2);
        mnuGroupSize2.setSelected(true);
        mnuGroupSize2.setText("2");
        mnuGroupSize.add(mnuGroupSize2);
        mnuGroupSize3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize3);
        mnuGroupSize3.setText("3");
        mnuGroupSize.add(mnuGroupSize3);
        mnuGroupSize4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize4);
        mnuGroupSize4.setText("4");
        mnuGroupSize.add(mnuGroupSize4);
        mnuGroupSize5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize5);
        mnuGroupSize5.setText("5");
        mnuGroupSize.add(mnuGroupSize5);
        mnuGroupSize6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize6);
        mnuGroupSize6.setText("6");
        mnuGroupSize.add(mnuGroupSize6);
        mnuGroupSize7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize7);
        mnuGroupSize7.setText("7");
        mnuGroupSize.add(mnuGroupSize7);
        mnuGroupSize8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.CTRL_MASK));
        btngrpGroupSize.add(mnuGroupSize8);
        mnuGroupSize8.setText("8");
        mnuGroupSize.add(mnuGroupSize8);
        mnuShuffle.add(mnuGroupSize);
        mnuIgnorePrefs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_0, java.awt.event.InputEvent.CTRL_MASK));
        mnuIgnorePrefs.setText("Ignore grouping preferences");
        mnuShuffle.add(mnuIgnorePrefs);
        jMenuBar1.add(mnuShuffle);
        mnuHelp.setText("Help");
        mnuHelpAbout.setText("About");
        mnuHelpAbout.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHelpAbout_actionPerformed(evt);
            }
        });
        mnuHelp.add(mnuHelpAbout);
        mnuShuffleNow.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        mnuShuffleNow.setText("Shuffle");
        mnuHelp.add(mnuShuffleNow);
        jMenuBar1.add(mnuHelp);
        setJMenuBar(jMenuBar1);
        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 546, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 430, Short.MAX_VALUE));
        pack();
    }

    /**
     * This method should be called when the class/student list has been changed.
     * Appropriate updates will be made--e.g., refreshing the "Attendance"
     * menu, clearing the existing display of shuffled names, etc.
     */
    private void studentListChanged() {
        ArrayList<JCheckBoxMenuItem> arrStuAttendMenuItems = new ArrayList<JCheckBoxMenuItem>();
        for (final String stu : stuList.getStudentList()) {
            final JCheckBoxMenuItem menuItem = new JCheckBoxMenuItem(stu, null, true);
            arrStuAttendMenuItems.add(menuItem);
            mnuAttendance.add(menuItem);
            menuItem.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    if (menuItem.isSelected()) stuList.absentStudents.remove(stu); else stuList.absentStudents.add(stu);
                }
            });
        }
        clearStuLabels();
    }

    private void mnuEditClassActionPerformed(java.awt.event.ActionEvent evt) {
        ClassEditor cledit = new ClassEditor(this, true, stuList);
        cledit.setVisible(true);
    }

    private void mnuSaveAsActionPerformed(java.awt.event.ActionEvent evt) {
        FileDialog dlgFile = new FileDialog(this);
        dlgFile.setMode(FileDialog.SAVE);
        dlgFile.setVisible(true);
        if (dlgFile.getFile() != null) {
            String strFile = dlgFile.getDirectory() + File.separator + dlgFile.getFile();
            stuListFile = new File(strFile);
            mnuSaveActionPerformed(evt);
        }
    }

    private void mnuHelpAbout_actionPerformed(java.awt.event.ActionEvent evt) {
        new jdlgAbout(this, false).setVisible(true);
    }

    private void mnuNewActionPerformed(java.awt.event.ActionEvent evt) {
        int res = JOptionPane.showConfirmDialog(this, "Do you want to save changes to the" + "current class first?", "Save changes", JOptionPane.YES_NO_CANCEL_OPTION);
        switch(res) {
            case JOptionPane.YES_OPTION:
                mnuSaveActionPerformed(evt);
            case JOptionPane.NO_OPTION:
                stuList = new StudentList();
                stuListFile = null;
                studentListChanged();
                break;
            case JOptionPane.CANCEL_OPTION:
                break;
        }
    }

    private void mnuSaveActionPerformed(java.awt.event.ActionEvent evt) {
        if (stuListFile == null) {
            mnuSaveAsActionPerformed(evt);
            return;
        }
        StudentListIO.writeToFile(stuList, stuListFile);
    }

    private void mnuOpenActionPerformed(java.awt.event.ActionEvent evt) {
        FileDialog dlgFile = new FileDialog(this);
        dlgFile.setMode(FileDialog.LOAD);
        dlgFile.setVisible(true);
        if (dlgFile.getFile() != null) {
            String strFile = dlgFile.getDirectory() + File.separator + dlgFile.getFile();
            stuListFile = new File(strFile);
            stuList = StudentListIO.readFromFile(stuListFile);
            studentListChanged();
        }
    }

    private void mnuShuffleActionPerformed(java.awt.event.ActionEvent evt) {
        clearStuLabels();
        stuLabels = new ArrayList<JComponent>();
        int groupSize = 2;
        int numStus = stuList.getStudents().size();
        int numCols = 2;
        int numRows = numStus / numCols;
        if (numStus % numCols != 0) numRows += 1;
        int numPadRows = numRows / groupSize;
        int numTotalRows = numRows + numPadRows;
        int numRowsPerCol = numStus / numCols + (numStus % numCols == 0 ? 0 : 1);
        int numTotalRowsPerCol = numRowsPerCol + numPadRows;
        List<List<String>> students = stuList.makeGroups(groupSize);
        GridBagConstraints c = new GridBagConstraints();
        GridBagConstraints cPad = new GridBagConstraints();
        cPad.ipady = 16;
        int currRow = 0;
        int currTotalRow = 0;
        int currPadRow = 0;
        int currCol = 0;
        for (int currGroup = 0; currGroup < students.size(); currGroup++) {
            if (currRow >= numRowsPerCol) {
                currCol += 2;
                currRow = 0;
                currPadRow = 0;
                GridBagConstraints cCol = new GridBagConstraints();
                cCol.gridx = currCol - 1;
                cCol.gridy = 0;
                cCol.weightx = 1.0;
                cCol.weighty = 1.0;
                cCol.ipadx = 0;
                cCol.ipady = 0;
                cCol.fill = GridBagConstraints.VERTICAL;
                cCol.gridheight = numRows + numPadRows;
                cCol.anchor = GridBagConstraints.CENTER;
                JSeparator jColSpace = new JSeparator(JSeparator.VERTICAL);
                this.add(jColSpace, cCol);
            }
            for (int i = 0; i < students.get(currGroup).size(); i++) {
                c.ipadx = 32;
                c.ipady = 32;
                c.gridx = currCol;
                c.weightx = 1.0;
                c.weighty = 1.0;
                c.fill = GridBagConstraints.BOTH;
                c.gridy = (currRow + currPadRow);
                JLabel stuLbl = new JLabel(" " + students.get(currGroup).get(i) + " ");
                stuLabels.add(stuLbl);
                this.add(stuLbl, c);
                currRow += 1;
                currTotalRow += 1;
            }
            JSeparator stuPad = new JSeparator();
            stuLabels.add(stuPad);
            cPad.gridy = (currRow + currPadRow);
            cPad.gridx = currCol;
            cPad.weightx = 1.0;
            cPad.weighty = 1.0;
            cPad.fill = GridBagConstraints.HORIZONTAL;
            cPad.anchor = GridBagConstraints.CENTER;
            if (!(currRow > numRowsPerCol)) this.add(stuPad, cPad);
            currRow += 1;
            currTotalRow += 1;
            currPadRow += 1;
        }
        this.validate();
        for (JComponent lbl : stuLabels) {
            resizeLabelText(lbl);
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    private javax.swing.ButtonGroup btngrpGroupSize;

    private javax.swing.JMenuBar jMenuBar1;

    private javax.swing.JPopupMenu jPopupMenu1;

    private javax.swing.JPopupMenu jPopupMenu2;

    private javax.swing.JMenuItem jmnuShuffe;

    private javax.swing.JMenu mnuAttendance;

    private javax.swing.JMenu mnuEdit;

    private javax.swing.JMenuItem mnuEditClass;

    private javax.swing.JMenuItem mnuExit;

    private javax.swing.JMenu mnuFile;

    private javax.swing.JPopupMenu.Separator mnuFileSep1;

    private javax.swing.JMenu mnuGroupSize;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize2;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize3;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize4;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize5;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize6;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize7;

    private javax.swing.JRadioButtonMenuItem mnuGroupSize8;

    private javax.swing.JMenu mnuHelp;

    private javax.swing.JMenuItem mnuHelpAbout;

    private javax.swing.JCheckBoxMenuItem mnuIgnorePrefs;

    private javax.swing.JMenuItem mnuNew;

    private javax.swing.JMenuItem mnuOpen;

    private javax.swing.JMenu mnuOpenRecent;

    private javax.swing.JMenuItem mnuSave;

    private javax.swing.JMenuItem mnuSaveAs;

    private javax.swing.JMenu mnuShuffle;

    private javax.swing.JMenuItem mnuShuffleNow;
}
