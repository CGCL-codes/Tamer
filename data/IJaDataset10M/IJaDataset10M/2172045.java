package com.art.anette.client.ui.forms;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ResourceBundle;
import javax.swing.*;
import com.art.anette.client.controller.Logic;
import com.art.anette.client.main.ProgressUtils;
import com.art.anette.client.ui.SafeDefaultTableModel;
import com.art.anette.client.ui.controls.ControlContainer;
import com.art.anette.client.ui.controls.GUITaskController;

/**
 * Dieses Formular wird beim Klick auf das Tray-Icon angezeigt.
 * Es dient der möglichst schnellen Verwaltung der aktuellen offenen
 * Tätigkeiten und zur Erfassung neuer Tätigkeiten.
 *
 * @author Markus Groß
 */
public class TrayForm extends JFrame {

    /**
     * Die Sprach-Resource, enthält die Übersetzungen der Strings.
     */
    private static final ResourceBundle lang = ResourceBundle.getBundle("com/art/anette/client/ui/resources/lang");

    /**
     * Die Applikationslogik.
     */
    private Logic logic;

    /**
     * Erzeugt ein neues Formular, welches beim Klick auf das Tray-Icon
     * angezeigt werden soll.
     *
     * @param logic         Die Applikationslogik.
     * @param guiController Der Controller Task-Elemente.
     */
    public TrayForm(Logic logic, GUITaskController guiController) {
        initComponents();
        this.logic = logic;
        guiController.registerGUI(new ControlContainer(lblTask, lblStarted, lblElapsedTime, btnStartTask, btnPause, btnStop, btnResumeOpenTask, btnStopOpenTask, btnBrowseTasks, cbTasks, tblOpenTasks));
        getRootPane().registerKeyboardAction(ProgressUtils.getButtonClickListener(btnClose), ProgressUtils.escStroke, JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "ZeroLengthArrayAllocation" })
    private void initComponents() {
        lblDescNewTask = new JLabel();
        cbTasks = new JComboBox();
        lblDescOpenTasks = new JLabel();
        spOpenTasks = new JScrollPane();
        tblOpenTasks = new JTable();
        lblTask = new JLabel();
        lblDescCurrentTask = new JLabel();
        lblStarted = new JLabel();
        btnBrowseTasks = new JButton();
        btnStartTask = new JButton();
        btnResumeOpenTask = new JButton();
        btnStopOpenTask = new JButton();
        btnPause = new JToggleButton();
        btnStop = new JButton();
        btnClose = new JButton();
        lblElapsedTime = new JLabel();
        setTitle(lang.getString("MiniTracker"));
        setAlwaysOnTop(true);
        addWindowListener(new WindowAdapter() {

            public void windowActivated(WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        lblDescNewTask.setText(lang.getString("NewTask"));
        lblDescOpenTasks.setText(lang.getString("OpenTasks"));
        tblOpenTasks.setModel(new SafeDefaultTableModel(new Object[][] {}, new String[] {}));
        spOpenTasks.setViewportView(tblOpenTasks);
        lblTask.setText("-");
        lblDescCurrentTask.setText(lang.getString("CurrentTask"));
        lblStarted.setText("-");
        btnBrowseTasks.setText("...");
        btnBrowseTasks.setToolTipText(lang.getString("BrowseTasks"));
        btnStartTask.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/newtask.png")));
        btnStartTask.setToolTipText(lang.getString("StartTask"));
        btnStartTask.setEnabled(false);
        btnStartTask.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnStartTaskActionPerformed(evt);
            }
        });
        btnResumeOpenTask.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/resume.png")));
        btnResumeOpenTask.setToolTipText(lang.getString("ResumeOpenTask"));
        btnResumeOpenTask.setEnabled(false);
        btnResumeOpenTask.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnResumeOpenTaskActionPerformed(evt);
            }
        });
        btnStopOpenTask.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/stop.png")));
        btnStopOpenTask.setToolTipText(lang.getString("StopOpenTask"));
        btnStopOpenTask.setEnabled(false);
        btnStopOpenTask.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnStopOpenTaskActionPerformed(evt);
            }
        });
        btnPause.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/pause.png")));
        btnPause.setToolTipText(lang.getString("PauseCurrentTask"));
        btnPause.setEnabled(false);
        btnPause.setMargin(new Insets(0, 2, 0, 2));
        btnPause.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnPauseActionPerformed(evt);
            }
        });
        btnStop.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/stop.png")));
        btnStop.setToolTipText(lang.getString("StopCurrentTask"));
        btnStop.setEnabled(false);
        btnStop.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });
        btnClose.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/cancel.png")));
        btnClose.setText(lang.getString("Close"));
        btnClose.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        lblElapsedTime.setText("-");
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(lblDescNewTask).addComponent(lblDescOpenTasks).addComponent(lblDescCurrentTask)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(cbTasks, 0, 333, Short.MAX_VALUE).addComponent(lblTask, GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE).addComponent(lblStarted, GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE).addComponent(spOpenTasks, GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE).addComponent(lblElapsedTime, GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false).addComponent(btnBrowseTasks, 0, 0, Short.MAX_VALUE).addComponent(btnPause, 0, 0, Short.MAX_VALUE).addComponent(btnResumeOpenTask, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(btnStop, 0, 0, Short.MAX_VALUE).addComponent(btnStopOpenTask, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnStartTask, GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))).addComponent(btnClose, GroupLayout.Alignment.TRAILING)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addComponent(btnStartTask).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE).addComponent(btnStopOpenTask)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(lblDescNewTask).addComponent(cbTasks, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE).addComponent(btnBrowseTasks, GroupLayout.PREFERRED_SIZE, 34, GroupLayout.PREFERRED_SIZE)).addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addGap(20, 20, 20).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(lblDescOpenTasks).addComponent(spOpenTasks, GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))).addGroup(layout.createSequentialGroup().addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(btnResumeOpenTask))))).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(18, 18, 18).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(lblDescCurrentTask).addComponent(lblTask)).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(lblStarted)).addGroup(layout.createSequentialGroup().addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addComponent(btnStop).addComponent(btnPause)))).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(lblElapsedTime).addGap(9, 9, 9).addComponent(btnClose).addContainerGap()));
        pack();
    }

    /**
     * Versteckt das Formular.
     *
     * @param evt Wird nicht benutzt.
     */
    private void btnCloseActionPerformed(ActionEvent evt) {
        setVisible(false);
    }

    /**
     * Setzt eine offene Tätigkeit fort.
     *
     * @param evt Wird nicht verwendet.
     */
    private void btnResumeOpenTaskActionPerformed(ActionEvent evt) {
        btnCloseActionPerformed(null);
    }

    /**
     * Versteckt das Formular.
     *
     * @param evt Wird nicht benutzt.
     */
    private void btnStopOpenTaskActionPerformed(ActionEvent evt) {
        btnCloseActionPerformed(null);
    }

    /**
     * Versteckt das Formular.
     *
     * @param evt Wird nicht benutzt.
     */
    private void btnPauseActionPerformed(ActionEvent evt) {
        btnCloseActionPerformed(null);
    }

    /**
     * Versteckt das Formular.
     *
     * @param evt Wird nicht benutzt.
     */
    private void btnStopActionPerformed(ActionEvent evt) {
        btnCloseActionPerformed(null);
    }

    /**
     * Versteckt das Formular.
     *
     * @param evt Wird nicht benutzt.
     */
    private void btnStartTaskActionPerformed(ActionEvent evt) {
        btnCloseActionPerformed(null);
    }

    private void formWindowActivated(WindowEvent evt) {
        updateControls();
    }

    private void updateControls() {
        lblTask.repaint();
        lblStarted.repaint();
        lblElapsedTime.repaint();
        tblOpenTasks.repaint();
    }

    private JButton btnBrowseTasks;

    private JButton btnClose;

    private JToggleButton btnPause;

    private JButton btnResumeOpenTask;

    private JButton btnStartTask;

    private JButton btnStop;

    private JButton btnStopOpenTask;

    private JComboBox cbTasks;

    private JLabel lblDescCurrentTask;

    private JLabel lblDescNewTask;

    private JLabel lblDescOpenTasks;

    private JLabel lblElapsedTime;

    private JLabel lblStarted;

    private JLabel lblTask;

    private JScrollPane spOpenTasks;

    private JTable tblOpenTasks;
}
