package lablog.util.orm.auto;

import static javax.persistence.GenerationType.IDENTITY;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import lablog.util.orm.base.ORMBase;

/**
 * PropertySection generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "property_sections")
public class PropertySection extends ORMBase implements java.io.Serializable {

    private Integer id;

    private String name;

    private PropertySection propertySection;

    private String odmlVocabularyUrl;

    private Set<Subject> subjects = new HashSet<Subject>(0);

    private Set<Preparation> preparations = new HashSet<Preparation>(0);

    private Set<Hardware> hardwares = new HashSet<Hardware>(0);

    private Set<Experiment> experiments = new HashSet<Experiment>(0);

    private Set<Dataset> datasets = new HashSet<Dataset>(0);

    private Set<Setup> setups = new HashSet<Setup>(0);

    private Set<PropertySection> propertySections = new HashSet<PropertySection>(0);

    private Set<Stimulus> stimuluses = new HashSet<Stimulus>(0);

    private Set<SetupConfig> setupConfigs = new HashSet<SetupConfig>(0);

    private Set<HardwareUsage> hardwareUsages = new HashSet<HardwareUsage>(0);

    private Set<Property> properties = new HashSet<Property>(0);

    private Set<Recording> recordings = new HashSet<Recording>(0);

    private Set<Analyse> analyses = new HashSet<Analyse>(0);

    private Set<Grant> grants = new HashSet<Grant>(0);

    public PropertySection() {
    }

    public PropertySection(PropertySection propertySection, String name, String odmlVocabularyUrl, Set<Subject> subjects, Set<Preparation> preparations, Set<Hardware> hardwares, Set<Experiment> experiments, Set<Dataset> datasets, Set<Setup> setups, Set<PropertySection> propertySections, Set<Stimulus> stimuluses, Set<SetupConfig> setupConfigs, Set<HardwareUsage> hardwareUsages, Set<Property> properties, Set<Recording> recordings, Set<Analyse> analyses) {
        this.propertySection = propertySection;
        this.name = name;
        this.odmlVocabularyUrl = odmlVocabularyUrl;
        this.subjects = subjects;
        this.preparations = preparations;
        this.hardwares = hardwares;
        this.experiments = experiments;
        this.datasets = datasets;
        this.setups = setups;
        this.propertySections = propertySections;
        this.stimuluses = stimuluses;
        this.setupConfigs = setupConfigs;
        this.hardwareUsages = hardwareUsages;
        this.properties = properties;
        this.recordings = recordings;
        this.analyses = analyses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "parent_id")
    public PropertySection getPropertySection() {
        return this.propertySection;
    }

    public void setPropertySection(PropertySection propertySection) {
        this.propertySection = propertySection;
    }

    @Column(name = "name", length = 256)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "odml_vocabulary_url", length = 512)
    public String getOdmlVocabularyUrl() {
        return this.odmlVocabularyUrl;
    }

    public void setOdmlVocabularyUrl(String odmlVocabularyUrl) {
        this.odmlVocabularyUrl = odmlVocabularyUrl;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Subject> getSubjects() {
        return this.subjects;
    }

    public void setSubjects(Set<Subject> subjects) {
        this.subjects = subjects;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Preparation> getPreparations() {
        return this.preparations;
    }

    public void setPreparations(Set<Preparation> preparations) {
        this.preparations = preparations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Hardware> getHardwares() {
        return this.hardwares;
    }

    public void setHardwares(Set<Hardware> hardwares) {
        this.hardwares = hardwares;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Experiment> getExperiments() {
        return this.experiments;
    }

    public void setExperiments(Set<Experiment> experiments) {
        this.experiments = experiments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Dataset> getDatasets() {
        return this.datasets;
    }

    public void setDatasets(Set<Dataset> datasets) {
        this.datasets = datasets;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Setup> getSetups() {
        return this.setups;
    }

    public void setSetups(Set<Setup> setups) {
        this.setups = setups;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "propertySection")
    public Set<PropertySection> getPropertySections() {
        return this.propertySections;
    }

    public void setPropertySections(Set<PropertySection> propertySections) {
        this.propertySections = propertySections;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Stimulus> getStimuluses() {
        return this.stimuluses;
    }

    public void setStimuluses(Set<Stimulus> stimuluses) {
        this.stimuluses = stimuluses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<SetupConfig> getSetupConfigs() {
        return this.setupConfigs;
    }

    public void setSetupConfigs(Set<SetupConfig> setupConfigs) {
        this.setupConfigs = setupConfigs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<HardwareUsage> getHardwareUsages() {
        return this.hardwareUsages;
    }

    public void setHardwareUsages(Set<HardwareUsage> hardwareUsages) {
        this.hardwareUsages = hardwareUsages;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Property> getProperties() {
        return this.properties;
    }

    public void setProperties(Set<Property> properties) {
        this.properties = properties;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Recording> getRecordings() {
        return this.recordings;
    }

    public void setRecordings(Set<Recording> recordings) {
        this.recordings = recordings;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Analyse> getAnalyses() {
        return this.analyses;
    }

    public void setAnalyses(Set<Analyse> analyses) {
        this.analyses = analyses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "propertySection")
    public Set<Grant> getGrants() {
        return this.grants;
    }

    public void setGrants(Set<Grant> grants) {
        this.grants = grants;
    }
}
