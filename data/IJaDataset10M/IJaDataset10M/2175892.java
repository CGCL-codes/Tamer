package com.gn.mporras.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProductoExample {

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public ProductoExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    protected ProductoExample(ProductoExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table productos
     *
     * @ibatorgenerated
     */
    public static class Criteria {

        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andProductoidIsNull() {
            addCriterion("productoid is null");
            return this;
        }

        public Criteria andProductoidIsNotNull() {
            addCriterion("productoid is not null");
            return this;
        }

        public Criteria andProductoidEqualTo(String value) {
            addCriterion("productoid =", value, "productoid");
            return this;
        }

        public Criteria andProductoidNotEqualTo(String value) {
            addCriterion("productoid <>", value, "productoid");
            return this;
        }

        public Criteria andProductoidGreaterThan(String value) {
            addCriterion("productoid >", value, "productoid");
            return this;
        }

        public Criteria andProductoidGreaterThanOrEqualTo(String value) {
            addCriterion("productoid >=", value, "productoid");
            return this;
        }

        public Criteria andProductoidLessThan(String value) {
            addCriterion("productoid <", value, "productoid");
            return this;
        }

        public Criteria andProductoidLessThanOrEqualTo(String value) {
            addCriterion("productoid <=", value, "productoid");
            return this;
        }

        public Criteria andProductoidLike(String value) {
            addCriterion("productoid like", value, "productoid");
            return this;
        }

        public Criteria andProductoidNotLike(String value) {
            addCriterion("productoid not like", value, "productoid");
            return this;
        }

        public Criteria andProductoidIn(List values) {
            addCriterion("productoid in", values, "productoid");
            return this;
        }

        public Criteria andProductoidNotIn(List values) {
            addCriterion("productoid not in", values, "productoid");
            return this;
        }

        public Criteria andProductoidBetween(String value1, String value2) {
            addCriterion("productoid between", value1, value2, "productoid");
            return this;
        }

        public Criteria andProductoidNotBetween(String value1, String value2) {
            addCriterion("productoid not between", value1, value2, "productoid");
            return this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("nombre is null");
            return this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("nombre is not null");
            return this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("nombre =", value, "nombre");
            return this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("nombre <>", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("nombre >", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("nombre >=", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("nombre <", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("nombre <=", value, "nombre");
            return this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("nombre like", value, "nombre");
            return this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("nombre not like", value, "nombre");
            return this;
        }

        public Criteria andNombreIn(List values) {
            addCriterion("nombre in", values, "nombre");
            return this;
        }

        public Criteria andNombreNotIn(List values) {
            addCriterion("nombre not in", values, "nombre");
            return this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("nombre between", value1, value2, "nombre");
            return this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("nombre not between", value1, value2, "nombre");
            return this;
        }

        public Criteria andPuntosIsNull() {
            addCriterion("puntos is null");
            return this;
        }

        public Criteria andPuntosIsNotNull() {
            addCriterion("puntos is not null");
            return this;
        }

        public Criteria andPuntosEqualTo(Integer value) {
            addCriterion("puntos =", value, "puntos");
            return this;
        }

        public Criteria andPuntosNotEqualTo(Integer value) {
            addCriterion("puntos <>", value, "puntos");
            return this;
        }

        public Criteria andPuntosGreaterThan(Integer value) {
            addCriterion("puntos >", value, "puntos");
            return this;
        }

        public Criteria andPuntosGreaterThanOrEqualTo(Integer value) {
            addCriterion("puntos >=", value, "puntos");
            return this;
        }

        public Criteria andPuntosLessThan(Integer value) {
            addCriterion("puntos <", value, "puntos");
            return this;
        }

        public Criteria andPuntosLessThanOrEqualTo(Integer value) {
            addCriterion("puntos <=", value, "puntos");
            return this;
        }

        public Criteria andPuntosIn(List values) {
            addCriterion("puntos in", values, "puntos");
            return this;
        }

        public Criteria andPuntosNotIn(List values) {
            addCriterion("puntos not in", values, "puntos");
            return this;
        }

        public Criteria andPuntosBetween(Integer value1, Integer value2) {
            addCriterion("puntos between", value1, value2, "puntos");
            return this;
        }

        public Criteria andPuntosNotBetween(Integer value1, Integer value2) {
            addCriterion("puntos not between", value1, value2, "puntos");
            return this;
        }
    }
}
