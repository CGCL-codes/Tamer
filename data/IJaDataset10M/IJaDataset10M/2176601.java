package net.sf.istcontract.aws.communication.protocol.Toy13_5_3;

import net.sf.istcontract.aws.communication.message.MessageTemplate;
import net.sf.istcontract.aws.communication.performative.ConsentSuggestion;
import net.sf.istcontract.aws.communication.performative.Inform;
import net.sf.istcontract.aws.communication.performative.Propose;
import net.sf.istcontract.aws.communication.performative.Suggest;
import net.sf.istcontract.aws.knowledge.actor.Role;
import java.util.HashMap;
import java.util.Vector;
import net.sf.istcontract.aws.communication.protocol.*;

/**
 *
 * This is a protocol implementation
 *
 * It is part of the CommunicationManager component.
 *
 * @author Autogenerated by ingenias2contractcodegenerator (Ignasi Gomez-Sebastia)
 *
 */
public class Toy13_5_3 extends Protocol {

    private static HashMap Predecessors = new HashMap();

    public Toy13_5_3() {
        if (name == null) {
            System.err.println("Toy13_5_3 name=null");
        }
        try {
            Role Initiator, Participant;
            Initiator = addActor(InitiatorRole.class.getName());
            Participant = addActor(ParticipantRole.class.getName());
            MessageTemplate ParticipantDisconfirmParticipantInitiator = addMessage(Participant, Initiator, ParticipantDisconfirm.class, EBookContractOntology.class);
            MessageTemplate InitiatorInformInitiatorParticipant = addMessage(Initiator, Participant, InitiatorInform.class, EBookContractOntology.class);
            MessageTemplate ParticipantConfirmParticipantInitiator = addMessage(Participant, Initiator, ParticipantConfirm.class, EBookContractOntology.class);
            setStartMessage(InitiatorInformInitiatorParticipant);
            setConversationInitiator(InitiatorRole.class);
            setConversationParticipant(ParticipantRole.class);
            LinkFollowingMessage(InitiatorInformInitiatorParticipant, ParticipantConfirmParticipantInitiator);
            LinkFollowingMessage(InitiatorInformInitiatorParticipant, ParticipantDisconfirmParticipantInitiator);
        } catch (Exception E) {
            E.printStackTrace();
        }
    }
}
