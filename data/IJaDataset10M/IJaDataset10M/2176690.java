package simple.http.serve;

import java.io.StringWriter;
import java.io.PrintWriter;

/**
 * The <code>ExceptionBuffer</code> captures a stack trace from
 * a <code>Throwable</code>. This enables the cause of an error
 * to be generated by a <code>Report</code> implementation. The
 * <code>ErrorReport</code> implementation is currently using 
 * this to describe the cause of a service error.
 *
 * @author Niall Gallagher
 */
class ExceptionBuffer extends StringWriter {

    /**
    * This provides an adapter to capture the stack trace.
    */
    private PrintWriter out;

    /**
    * This is the exception to acquire the stack trace from.
    */
    private Throwable cause;

    /**
    * Constructor for the <code>ExceptionBuffer</code> object. The
    * exception provided is used to generate a stack trace, which
    * can be used to generate an error report for a service.
    *
    * @param cause the exception to acquire a stack trace from 
    */
    public ExceptionBuffer(Throwable cause) {
        this.out = new PrintWriter(this);
        this.cause = cause;
    }

    /**
    * Generates the stace trace of the exception as a text string.   
    * If the stack trace cannot be generated of if there is a
    * problem generating it then this will return an empty string.
    *
    * @return this returns the stack trace of the exception
    */
    public String getCause() {
        if (getBuffer().length() > 0) {
            return toString();
        }
        try {
            cause.printStackTrace(out);
        } catch (Exception e) {
            return "";
        }
        return toString();
    }
}
