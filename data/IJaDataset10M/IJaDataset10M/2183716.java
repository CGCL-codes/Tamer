package clubmixer.client.utils;

import java.util.Timer;
import clubmixer.client.control.ClientController;
import clubmixer.client.handler.songChange.SongChangeListener;
import clubmixer.client.handler.songChange.SongChangeEvent;
import com.slychief.clubmixer.server.library.entities.Song;
import java.awt.Color;

/**
 *
 * @author Alexander Schindler
 */
public class Testpan extends javax.swing.JPanel implements SongChangeListener, ICountable {

    private Timer timer;

    private TickTock ticktock;

    private int i = 0;

    private long interval = 1000;

    /** Creates new form test */
    public Testpan() {
        initComponents();
        this.setBackground(Color.BLACK);
        this.setOpaque(true);
        this.ticktock = new TickTock(this);
        this.timer = new Timer();
        ClientController.getInstance().addListener(this);
        start();
    }

    @Override
    public void count() {
    }

    public void start() {
        this.timer.scheduleAtFixedRate(ticktock, 0, interval);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jprog = new javax.swing.JProgressBar();
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(clubmixer.client.ClubmixerClientApp.class).getContext().getResourceMap(Testpan.class);
        setBackground(resourceMap.getColor("Form.background"));
        setName("Form");
        setOpaque(false);
        jprog.setName("jprog");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jprog, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jprog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
    }

    private javax.swing.JProgressBar jprog;

    @Override
    public void onSongChanged(SongChangeEvent se) {
        resetTimer(se.getSong());
    }

    private void resetTimer(Song song) {
        this.interval = (int) ((song.getDuration()) / 100);
        this.i = 0;
        jprog.setValue(0);
        timer.cancel();
        ticktock.cancel();
        timer = new Timer();
        ticktock = new TickTock(this);
        timer.scheduleAtFixedRate(ticktock, 0, interval);
    }
}
