package org.imogene.model.core.provider;

import java.util.ArrayList;
import java.util.Collection;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemColorProvider;
import org.eclipse.emf.edit.provider.IItemFontProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.imogene.model.core.util.ImogeneAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ImogeneItemProviderAdapterFactory extends ImogeneAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public static final String copyright = "Medes-IMPS 2011";

    /**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public ImogeneItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
        supportedTypes.add(IItemColorProvider.class);
        supportedTypes.add(IItemFontProvider.class);
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.CardEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected CardEntityItemProvider cardEntityItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.CardEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createCardEntityAdapter() {
        if (cardEntityItemProvider == null) {
            cardEntityItemProvider = new CardEntityItemProvider(this);
        }
        return cardEntityItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Description} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected DescriptionItemProvider descriptionItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Description}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createDescriptionAdapter() {
        if (descriptionItemProvider == null) {
            descriptionItemProvider = new DescriptionItemProvider(this);
        }
        return descriptionItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.MainRelationFieldEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected MainRelationFieldEntityItemProvider mainRelationFieldEntityItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.MainRelationFieldEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createMainRelationFieldEntityAdapter() {
        if (mainRelationFieldEntityItemProvider == null) {
            mainRelationFieldEntityItemProvider = new MainRelationFieldEntityItemProvider(this);
        }
        return mainRelationFieldEntityItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.ReverseRelationFieldEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ReverseRelationFieldEntityItemProvider reverseRelationFieldEntityItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.ReverseRelationFieldEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createReverseRelationFieldEntityAdapter() {
        if (reverseRelationFieldEntityItemProvider == null) {
            reverseRelationFieldEntityItemProvider = new ReverseRelationFieldEntityItemProvider(this);
        }
        return reverseRelationFieldEntityItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.IntegerField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected IntegerFieldItemProvider integerFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.IntegerField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createIntegerFieldAdapter() {
        if (integerFieldItemProvider == null) {
            integerFieldItemProvider = new IntegerFieldItemProvider(this);
        }
        return integerFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.FloatField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected FloatFieldItemProvider floatFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.FloatField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createFloatFieldAdapter() {
        if (floatFieldItemProvider == null) {
            floatFieldItemProvider = new FloatFieldItemProvider(this);
        }
        return floatFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.EnumField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected EnumFieldItemProvider enumFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.EnumField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createEnumFieldAdapter() {
        if (enumFieldItemProvider == null) {
            enumFieldItemProvider = new EnumFieldItemProvider(this);
        }
        return enumFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.EmailField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected EmailFieldItemProvider emailFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.EmailField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createEmailFieldAdapter() {
        if (emailFieldItemProvider == null) {
            emailFieldItemProvider = new EmailFieldItemProvider(this);
        }
        return emailFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.VideoField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected VideoFieldItemProvider videoFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.VideoField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createVideoFieldAdapter() {
        if (videoFieldItemProvider == null) {
            videoFieldItemProvider = new VideoFieldItemProvider(this);
        }
        return videoFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.BinaryField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected BinaryFieldItemProvider binaryFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.BinaryField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createBinaryFieldAdapter() {
        if (binaryFieldItemProvider == null) {
            binaryFieldItemProvider = new BinaryFieldItemProvider(this);
        }
        return binaryFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.DateField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected DateFieldItemProvider dateFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.DateField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createDateFieldAdapter() {
        if (dateFieldItemProvider == null) {
            dateFieldItemProvider = new DateFieldItemProvider(this);
        }
        return dateFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.DateTimeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected DateTimeFieldItemProvider dateTimeFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.DateTimeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createDateTimeFieldAdapter() {
        if (dateTimeFieldItemProvider == null) {
            dateTimeFieldItemProvider = new DateTimeFieldItemProvider(this);
        }
        return dateTimeFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.TimeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected TimeFieldItemProvider timeFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.TimeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createTimeFieldAdapter() {
        if (timeFieldItemProvider == null) {
            timeFieldItemProvider = new TimeFieldItemProvider(this);
        }
        return timeFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Project} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ProjectItemProvider projectItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Project}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createProjectAdapter() {
        if (projectItemProvider == null) {
            projectItemProvider = new ProjectItemProvider(this);
        }
        return projectItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.PhoneField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected PhoneFieldItemProvider phoneFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.PhoneField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createPhoneFieldAdapter() {
        if (phoneFieldItemProvider == null) {
            phoneFieldItemProvider = new PhoneFieldItemProvider(this);
        }
        return phoneFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.PhotoField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected PhotoFieldItemProvider photoFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.PhotoField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createPhotoFieldAdapter() {
        if (photoFieldItemProvider == null) {
            photoFieldItemProvider = new PhotoFieldItemProvider(this);
        }
        return photoFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.SoundField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected SoundFieldItemProvider soundFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.SoundField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createSoundFieldAdapter() {
        if (soundFieldItemProvider == null) {
            soundFieldItemProvider = new SoundFieldItemProvider(this);
        }
        return soundFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.BooleanField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected BooleanFieldItemProvider booleanFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.BooleanField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createBooleanFieldAdapter() {
        if (booleanFieldItemProvider == null) {
            booleanFieldItemProvider = new BooleanFieldItemProvider(this);
        }
        return booleanFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.EnumValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected EnumValueItemProvider enumValueItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.EnumValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createEnumValueAdapter() {
        if (enumValueItemProvider == null) {
            enumValueItemProvider = new EnumValueItemProvider(this);
        }
        return enumValueItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.TextField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected TextFieldItemProvider textFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.TextField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createTextFieldAdapter() {
        if (textFieldItemProvider == null) {
            textFieldItemProvider = new TextFieldItemProvider(this);
        }
        return textFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.TextAreaField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected TextAreaFieldItemProvider textAreaFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.TextAreaField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createTextAreaFieldAdapter() {
        if (textAreaFieldItemProvider == null) {
            textAreaFieldItemProvider = new TextAreaFieldItemProvider(this);
        }
        return textAreaFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected RoleItemProvider roleItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createRoleAdapter() {
        if (roleItemProvider == null) {
            roleItemProvider = new RoleItemProvider(this);
        }
        return roleItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.FieldGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected FieldGroupItemProvider fieldGroupItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.FieldGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createFieldGroupAdapter() {
        if (fieldGroupItemProvider == null) {
            fieldGroupItemProvider = new FieldGroupItemProvider(this);
        }
        return fieldGroupItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ActorItemProvider actorItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createActorAdapter() {
        if (actorItemProvider == null) {
            actorItemProvider = new ActorItemProvider(this);
        }
        return actorItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.NotificationInfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected NotificationInfoItemProvider notificationInfoItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.NotificationInfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createNotificationInfoAdapter() {
        if (notificationInfoItemProvider == null) {
            notificationInfoItemProvider = new NotificationInfoItemProvider(this);
        }
        return notificationInfoItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Language} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected LanguageItemProvider languageItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Language}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createLanguageAdapter() {
        if (languageItemProvider == null) {
            languageItemProvider = new LanguageItemProvider(this);
        }
        return languageItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.FieldDependentVisibility} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected FieldDependentVisibilityItemProvider fieldDependentVisibilityItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.FieldDependentVisibility}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createFieldDependentVisibilityAdapter() {
        if (fieldDependentVisibilityItemProvider == null) {
            fieldDependentVisibilityItemProvider = new FieldDependentVisibilityItemProvider(this);
        }
        return fieldDependentVisibilityItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.ValidationRule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ValidationRuleItemProvider validationRuleItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.ValidationRule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createValidationRuleAdapter() {
        if (validationRuleItemProvider == null) {
            validationRuleItemProvider = new ValidationRuleItemProvider(this);
        }
        return validationRuleItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.ActorFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ActorFilterItemProvider actorFilterItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.ActorFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createActorFilterAdapter() {
        if (actorFilterItemProvider == null) {
            actorFilterItemProvider = new ActorFilterItemProvider(this);
        }
        return actorFilterItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.FilterField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected FilterFieldItemProvider filterFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.FilterField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createFilterFieldAdapter() {
        if (filterFieldItemProvider == null) {
            filterFieldItemProvider = new FilterFieldItemProvider(this);
        }
        return filterFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.AddressField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected AddressFieldItemProvider addressFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.AddressField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createAddressFieldAdapter() {
        if (addressFieldItemProvider == null) {
            addressFieldItemProvider = new AddressFieldItemProvider(this);
        }
        return addressFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.GeoField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected GeoFieldItemProvider geoFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.GeoField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createGeoFieldAdapter() {
        if (geoFieldItemProvider == null) {
            geoFieldItemProvider = new GeoFieldItemProvider(this);
        }
        return geoFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.BarcodeField} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected BarcodeFieldItemProvider barcodeFieldItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.BarcodeField}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createBarcodeFieldAdapter() {
        if (barcodeFieldItemProvider == null) {
            barcodeFieldItemProvider = new BarcodeFieldItemProvider(this);
        }
        return barcodeFieldItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.Thema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected ThemaItemProvider themaItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.Thema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createThemaAdapter() {
        if (themaItemProvider == null) {
            themaItemProvider = new ThemaItemProvider(this);
        }
        return themaItemProvider;
    }

    /**
	 * This keeps track of the one adapter used for all {@link org.imogene.model.core.CardEntityUIFormat} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    protected CardEntityUIFormatItemProvider cardEntityUIFormatItemProvider;

    /**
	 * This creates an adapter for a {@link org.imogene.model.core.CardEntityUIFormat}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter createCardEntityUIFormatAdapter() {
        if (cardEntityUIFormatItemProvider == null) {
            cardEntityUIFormatItemProvider = new CardEntityUIFormatItemProvider(this);
        }
        return cardEntityUIFormatItemProvider;
    }

    /**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }
        return null;
    }

    /**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);
        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
    public void dispose() {
        if (projectItemProvider != null) projectItemProvider.dispose();
        if (cardEntityItemProvider != null) cardEntityItemProvider.dispose();
        if (fieldGroupItemProvider != null) fieldGroupItemProvider.dispose();
        if (booleanFieldItemProvider != null) booleanFieldItemProvider.dispose();
        if (integerFieldItemProvider != null) integerFieldItemProvider.dispose();
        if (floatFieldItemProvider != null) floatFieldItemProvider.dispose();
        if (validationRuleItemProvider != null) validationRuleItemProvider.dispose();
        if (addressFieldItemProvider != null) addressFieldItemProvider.dispose();
        if (emailFieldItemProvider != null) emailFieldItemProvider.dispose();
        if (geoFieldItemProvider != null) geoFieldItemProvider.dispose();
        if (textFieldItemProvider != null) textFieldItemProvider.dispose();
        if (textAreaFieldItemProvider != null) textAreaFieldItemProvider.dispose();
        if (barcodeFieldItemProvider != null) barcodeFieldItemProvider.dispose();
        if (phoneFieldItemProvider != null) phoneFieldItemProvider.dispose();
        if (mainRelationFieldEntityItemProvider != null) mainRelationFieldEntityItemProvider.dispose();
        if (reverseRelationFieldEntityItemProvider != null) reverseRelationFieldEntityItemProvider.dispose();
        if (enumFieldItemProvider != null) enumFieldItemProvider.dispose();
        if (enumValueItemProvider != null) enumValueItemProvider.dispose();
        if (binaryFieldItemProvider != null) binaryFieldItemProvider.dispose();
        if (videoFieldItemProvider != null) videoFieldItemProvider.dispose();
        if (photoFieldItemProvider != null) photoFieldItemProvider.dispose();
        if (soundFieldItemProvider != null) soundFieldItemProvider.dispose();
        if (dateFieldItemProvider != null) dateFieldItemProvider.dispose();
        if (dateTimeFieldItemProvider != null) dateTimeFieldItemProvider.dispose();
        if (timeFieldItemProvider != null) timeFieldItemProvider.dispose();
        if (actorItemProvider != null) actorItemProvider.dispose();
        if (roleItemProvider != null) roleItemProvider.dispose();
        if (filterFieldItemProvider != null) filterFieldItemProvider.dispose();
        if (notificationInfoItemProvider != null) notificationInfoItemProvider.dispose();
        if (descriptionItemProvider != null) descriptionItemProvider.dispose();
        if (languageItemProvider != null) languageItemProvider.dispose();
        if (fieldDependentVisibilityItemProvider != null) fieldDependentVisibilityItemProvider.dispose();
        if (actorFilterItemProvider != null) actorFilterItemProvider.dispose();
        if (themaItemProvider != null) themaItemProvider.dispose();
        if (cardEntityUIFormatItemProvider != null) cardEntityUIFormatItemProvider.dispose();
    }
}
