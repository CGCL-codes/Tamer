package com.amidasoft.lincat.entity;

import java.util.Date;
import java.util.HashSet;
import java.util.ResourceBundle;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import org.hibernate.validator.NotNull;
import org.jboss.seam.annotations.Name;

/**
 * OrdinadorsRecomanats generated by hbm2java
 */
@Entity
@Table(name = "ordinadors_recomanats")
@Name("ordinadors_recomanats")
public class OrdinadorsRecomanats implements java.io.Serializable {

    private Integer id;

    private Empreses empreses;

    private String placa;

    private String cpu;

    private String mem;

    private String hd;

    private String grafica;

    private String so;

    private String xarxa;

    private String wifi;

    private String altres;

    private Date dataInici;

    private Date dataFi;

    private String pathFoto;

    private Set<Ventes> venteses = new HashSet<Ventes>(0);

    private byte[] foto;

    public OrdinadorsRecomanats() {
    }

    public OrdinadorsRecomanats(Empreses empreses, String placa, String cpu, String mem, String hd, String grafica, String so, String xarxa, String wifi, String altres, Date dataInici, Date dataFi) {
        this.empreses = empreses;
        this.placa = placa;
        this.cpu = cpu;
        this.mem = mem;
        this.hd = hd;
        this.grafica = grafica;
        this.so = so;
        this.xarxa = xarxa;
        this.wifi = wifi;
        this.altres = altres;
        this.dataInici = dataInici;
        this.dataFi = dataFi;
    }

    public OrdinadorsRecomanats(Empreses empreses, String placa, String cpu, String mem, String hd, String grafica, String so, String xarxa, String wifi, String altres, Date dataInici, Date dataFi, String pathFoto, Set<Ventes> venteses) {
        this.empreses = empreses;
        this.placa = placa;
        this.cpu = cpu;
        this.mem = mem;
        this.hd = hd;
        this.grafica = grafica;
        this.so = so;
        this.xarxa = xarxa;
        this.wifi = wifi;
        this.altres = altres;
        this.dataInici = dataInici;
        this.dataFi = dataFi;
        this.pathFoto = pathFoto;
        this.venteses = venteses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "empreses_id", nullable = false)
    @NotNull
    public Empreses getEmpreses() {
        return this.empreses;
    }

    public void setEmpreses(Empreses empreses) {
        this.empreses = empreses;
    }

    @Column(name = "placa", nullable = false)
    @NotNull
    public String getPlaca() {
        return this.placa;
    }

    public void setPlaca(String placa) {
        this.placa = placa;
    }

    @Column(name = "cpu", nullable = false)
    @NotNull
    public String getCpu() {
        return this.cpu;
    }

    public void setCpu(String cpu) {
        this.cpu = cpu;
    }

    @Column(name = "mem", nullable = false)
    @NotNull
    public String getMem() {
        return this.mem;
    }

    public void setMem(String mem) {
        this.mem = mem;
    }

    @Column(name = "hd", nullable = false)
    @NotNull
    public String getHd() {
        return this.hd;
    }

    public void setHd(String hd) {
        this.hd = hd;
    }

    @Column(name = "grafica", nullable = false)
    @NotNull
    public String getGrafica() {
        return this.grafica;
    }

    public void setGrafica(String grafica) {
        this.grafica = grafica;
    }

    @Column(name = "so", nullable = false)
    @NotNull
    public String getSo() {
        return this.so;
    }

    public void setSo(String so) {
        this.so = so;
    }

    @Column(name = "xarxa", nullable = false)
    @NotNull
    public String getXarxa() {
        return this.xarxa;
    }

    public void setXarxa(String xarxa) {
        this.xarxa = xarxa;
    }

    @Column(name = "wifi", nullable = false)
    @NotNull
    public String getWifi() {
        return this.wifi;
    }

    public void setWifi(String wifi) {
        this.wifi = wifi;
    }

    @Column(name = "altres", nullable = false)
    @NotNull
    public String getAltres() {
        return this.altres;
    }

    public void setAltres(String altres) {
        this.altres = altres;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data_inici", nullable = false, length = 0)
    @NotNull
    public Date getDataInici() {
        return this.dataInici;
    }

    public void setDataInici(Date dataInici) {
        this.dataInici = dataInici;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data_fi", nullable = false, length = 0)
    @NotNull
    public Date getDataFi() {
        return this.dataFi;
    }

    public void setDataFi(Date dataFi) {
        this.dataFi = dataFi;
    }

    @Column(name = "path_foto")
    public String getPathFoto() {
        return this.pathFoto;
    }

    public void setPathFoto(String pathFoto) {
        this.pathFoto = pathFoto;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "ordinadorsRecomanats")
    public Set<Ventes> getVenteses() {
        return this.venteses;
    }

    public void setVenteses(Set<Ventes> venteses) {
        this.venteses = venteses;
    }

    @Transient
    public String getSubpathFoto() {
        ResourceBundle propietats = ResourceBundle.getBundle("propietats");
        return propietats.getString("subpathFotosOrdinadorsRecomanats_load");
    }

    @Transient
    public byte[] getFoto() {
        return this.foto;
    }

    public void setFoto(byte[] foto) {
        this.foto = foto;
    }

    public boolean equals(Object o) {
        boolean iguals = false;
        if (o instanceof OrdinadorsRecomanats) {
            if (o == null || ((OrdinadorsRecomanats) o).getId() == null || this.getId() == null) {
                iguals = false;
            }
            iguals = this.getId().equals(((OrdinadorsRecomanats) o).getId());
        }
        return iguals;
    }

    @Transient
    public String getNomComplet() {
        String nomComplet = "";
        if (this.getPlaca() != null) {
            nomComplet += "PB: " + this.getPlaca();
            if (this.getCpu() != null || this.getMem() != null) {
                nomComplet += " ; ";
            }
        }
        if (this.getCpu() != null) {
            nomComplet += "CPU: " + this.getCpu();
            if (this.getMem() != null) {
                nomComplet += " ; ";
            }
        }
        if (this.getMem() != null) {
            nomComplet += "MEM: " + this.getMem();
        }
        return nomComplet;
    }
}
