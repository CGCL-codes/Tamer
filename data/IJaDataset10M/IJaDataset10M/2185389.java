package rpr2_d18.enumeratedDataRepresentations;

import hla.rti1516e.encoding.DataElement;
import hla.rti1516e.encoding.ByteWrapper;
import hla.rti1516e.exceptions.RTIinternalError;
import hla.rti1516e.encoding.DecoderException;
import hla.rti1516e.RtiFactoryFactory;
import hla.rti1516e.encoding.EncoderFactory;
import hla.rti1516e.encoding.HLAinteger16BE;

/**
 * JAVADOC_COMMENTS
 * name notes = 9
 * semantics  = -NULL- 
 * @author : auto generated by DRDC FOM Generator
 */
public class EnvironmentDataCoordinateSystemEnum16 implements DataElement {

    private HLAinteger16BE value;

    private static EncoderFactory ef;

    public static final HLAinteger16BE EnvironmentDataCoordinateSystemUnknown = ef.createHLAinteger16BE((short) 0);

    /**
   * Empty constructor
   */
    public EnvironmentDataCoordinateSystemEnum16() throws RTIinternalError {
        ef = RtiFactoryFactory.getRtiFactory().getEncoderFactory();
    }

    /**
   * Returns this data value element
   * 
   * @return : native value type
   */
    public HLAinteger16BE get() {
        return value;
    }

    /**
   * Set the value from a native java type
   * 
   * @param newValue : the value to set it to
   */
    public void set(HLAinteger16BE newValue) {
        value = newValue;
    }

    /**
   * Decodes this element from an array of bytes
   * 
   * @param bytes : array of bytes 
   */
    public void decode(byte[] newValue) throws DecoderException {
        value.decode(newValue);
    }

    /**
   * Decodes this element from a ByteWrapper object
   * 
   * @param byteWrapper : organized array of bytes 
   */
    public void decode(ByteWrapper byteWrapper) throws DecoderException {
        value.decode(byteWrapper);
    }

    /**
   * Encodes this element into the specified ByteWrapper.
   * 
   * @param byteWrapper : organized byte array containing native java value
   */
    public void encode(ByteWrapper byteWrapper) {
        value.encode(byteWrapper);
    }

    /**
   * Returns the size in bytes of this element's encoding.
   * 
   * @return : length in bytes
   */
    public int getEncodedLength() {
        return value.getEncodedLength();
    }

    /**
   * Returns the octet boundary of this element.
   *  
   * @return : octet boundary position
   */
    public int getOctetBoundary() {
        return value.getOctetBoundary();
    }

    /**
   * Copies the value into an array of bytes
   * 
   * @return : array of bytes
   */
    public byte[] toByteArray() {
        return value.toByteArray();
    }
}
