package com.art.anette.client.ui.forms;

import java.awt.event.*;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.*;
import com.art.anette.client.controller.Logic;
import com.art.anette.client.controller.SimpleSelectPredecessorModel;
import com.art.anette.client.main.GuiUtils;
import com.art.anette.client.main.ProgressUtils;
import com.art.anette.client.ui.SafeDefaultTableModel;
import com.art.anette.datamodel.dataobjects.managed.WorkPackage;

/**
 * Dieser Dialog ermöglicht es Abhängigkeiten eines Arbeitspaketes zu setzen.
 *
 * @author Markus Groß
 */
public class LinkWorkPackageDialog extends EditDialog {

    /**
     * Die Sprach-Resource, enthält die Übersetzungen der Strings.
     */
    private static final ResourceBundle lang = ResourceBundle.getBundle("com/art/anette/client/ui/resources/lang");

    /**
     * Das zu bearbeitende Arbeitspaket.
     */
    private WorkPackage wp;

    /**
     * Erstellt einen Dialog, in dem die Abhängigkeiten eines Arbeitspaketes
     * gesetzt werden können.
     *
     * @param logic Die Applikationslogik.
     * @param wp    Das zu bearbeitende Arbeitspaket.
     */
    public LinkWorkPackageDialog(Logic logic, WorkPackage wp) {
        super(logic, false);
        initComponents();
        this.wp = wp;
        SimpleSelectPredecessorModel sssm = new SimpleSelectPredecessorModel(wp);
        tblWorkPackages.setModel(sssm);
        tblWorkPackages.setRowSorter(sssm.getRowSorter());
        getRootPane().registerKeyboardAction(ProgressUtils.getDisposeListener(this), ProgressUtils.escStroke, JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        getRootPane().registerKeyboardAction(ProgressUtils.getButtonClickListener(btnLink), ProgressUtils.submitStroke, JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        GuiUtils.centerOnScreen(this);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        spProjects = new JScrollPane();
        tblWorkPackages = new JTable();
        sepBottom = new JSeparator();
        lblDescSelectEmployee = new JLabel();
        btnCancel = new JButton();
        btnLink = new JButton();
        btnSelectAll = new JButton();
        btnSelectNone = new JButton();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(lang.getString("LinkWorkPackage"));
        setModal(true);
        tblWorkPackages.setModel(new SafeDefaultTableModel());
        tblWorkPackages.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent evt) {
                tblWorkPackagesMouseClicked(evt);
            }
        });
        tblWorkPackages.addKeyListener(new KeyAdapter() {

            public void keyPressed(KeyEvent evt) {
                tblWorkPackagesKeyPressed(evt);
            }
        });
        spProjects.setViewportView(tblWorkPackages);
        lblDescSelectEmployee.setText(lang.getString("SelectDependsDesc"));
        btnCancel.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/cancel.png")));
        btnCancel.setText(lang.getString("Cancel"));
        btnCancel.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        btnLink.setIcon(new ImageIcon(getClass().getResource("/com/art/anette/client/ui/resources/next.png")));
        btnLink.setText(lang.getString("LinkButton"));
        btnLink.setEnabled(false);
        btnLink.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnLinkActionPerformed(evt);
            }
        });
        btnSelectAll.setText(lang.getString("SelectAll"));
        btnSelectAll.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnSelectAllActionPerformed(evt);
            }
        });
        btnSelectNone.setText(lang.getString("SelectNone"));
        btnSelectNone.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent evt) {
                btnSelectNoneActionPerformed(evt);
            }
        });
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING).addComponent(spProjects, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE).addComponent(sepBottom, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE).addComponent(lblDescSelectEmployee, GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(btnCancel).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE).addComponent(btnLink)).addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(btnSelectAll).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(btnSelectNone))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(lblDescSelectEmployee).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addComponent(spProjects, GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(btnSelectAll).addComponent(btnSelectNone)).addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED).addComponent(sepBottom, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE).addPreferredGap(LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE).addComponent(btnLink).addComponent(btnCancel)).addContainerGap()));
        pack();
    }

    /**
     * Wenn mehr als ein Arbeitspaket ausgewählt wurde, so wird der Link-Knopf
     * klickbar.
     *
     * @param evt Wird nicht verwendet.
     */
    private void tblWorkPackagesMouseClicked(MouseEvent evt) {
        btnLink.setEnabled(((SimpleSelectPredecessorModel) tblWorkPackages.getModel()).getSelection().size() > 0);
    }

    /**
     * Ruft den Klick-Handler der Tabelle auf.
     *
     * @param evt Wird nicht verwendet.
     */
    private void tblWorkPackagesKeyPressed(KeyEvent evt) {
        tblWorkPackagesMouseClicked(null);
    }

    /**
     * Schließt den Dialog.
     *
     * @param evt Wird nicht verwendet.
     */
    private void btnCancelActionPerformed(ActionEvent evt) {
        dispose();
    }

    /**
     * Prüft zunächst, ob die Änderungen konsistent sind und ruft dann die
     * Funktion auf, welche die Verlinkung durchführt.
     *
     * @param evt Wird nicht verwendet.
     */
    private void btnLinkActionPerformed(ActionEvent evt) {
        if (check()) {
            save();
        }
    }

    /**
     * Wählt alle Arbeitspakete in der Tabelle aus.
     *
     * @param evt Wird nicht verwendet.
     */
    private void btnSelectAllActionPerformed(ActionEvent evt) {
        ((SimpleSelectPredecessorModel) tblWorkPackages.getModel()).selectAll();
        tblWorkPackagesMouseClicked(null);
    }

    /**
     * Deselektiert alle Arbeitspakete in der Tabelle.
     *
     * @param evt Wird nicht verwendet.
     */
    private void btnSelectNoneActionPerformed(ActionEvent evt) {
        ((SimpleSelectPredecessorModel) tblWorkPackages.getModel()).deselectAll();
        tblWorkPackagesMouseClicked(null);
    }

    private JButton btnCancel;

    private JButton btnLink;

    private JButton btnSelectAll;

    private JButton btnSelectNone;

    private JLabel lblDescSelectEmployee;

    private JSeparator sepBottom;

    private JScrollPane spProjects;

    private JTable tblWorkPackages;

    /**
     * Setzt die Abhängigkeit auf alle ausgewählten Arbeitspakete.
     */
    @Override
    public void save() {
        List<WorkPackage> workPackages = ((SimpleSelectPredecessorModel) tblWorkPackages.getModel()).getSelection();
        for (WorkPackage dep : workPackages) {
            wp.linkDependency(dep);
        }
        if (workPackages.size() > 0) {
            logic.getDBControl().synchronize();
        }
        dispose();
    }

    /**
     * Hier können keine falschen Eingaben auftreten, deshalb wird immer Wahr
     * zurückgegeben.
     *
     * @return True.
     */
    @Override
    public boolean check() {
        return true;
    }
}
