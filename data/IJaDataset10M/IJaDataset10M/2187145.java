package ca.smu.cs.csci3465.project.gui;

import ca.smu.cs.csci3465.project.LayerImpl;
import ca.smu.cs.csci3465.project.NetworkSettingsImpl;
import ca.smu.cs.csci3465.project.NeuralNetworkImpl;
import ca.smu.cs.csci3465.project.NeuronImpl;
import ca.smu.cs.csci3465.project.TrainingSet;
import ca.smu.cs.csci3465.project.interfaces.Connection;
import ca.smu.cs.csci3465.project.interfaces.Layer;
import ca.smu.cs.csci3465.project.interfaces.NetworkSettings;
import ca.smu.cs.csci3465.project.interfaces.Neuron;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Simo
 */
public class InteractiveJFrame extends javax.swing.JFrame {

    private List<TrainingSet> trainingSets;

    private Grid grid;

    private char desiredOutput;

    private NeuralNetworkImpl network;

    private NetworkSettings networkSettings;

    private Layer hiddenLayer;

    private Layer outputLayer;

    final JFileChooser fc = new JFileChooser();

    /** Creates new form InteractiveJFrame */
    public InteractiveJFrame() {
        initComponents();
        trainingSets = new ArrayList<TrainingSet>();
        grid = new Grid();
        grid.setSize(251, 251);
        grid.setLocation(25, 25);
        this.add(grid);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jButton1.setText("Add to List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Desired Output");
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24));
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("A");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1FocusLost(evt);
            }
        });
        jButton2.setText("Train List");
        jButton2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton3.setText("Save Network");
        jButton3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton4.setText("Clear List");
        jButton4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(298, Short.MAX_VALUE).addComponent(jLabel1).addGap(41, 41, 41)).addGroup(layout.createSequentialGroup().addGap(128, 128, 128).addComponent(jButton5).addContainerGap(248, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(285, 285, 285).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE).addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)).addGap(18, 18, 18)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(58, 58, 58).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(jButton1).addGap(11, 11, 11).addComponent(jButton4).addGap(17, 17, 17).addComponent(jButton2).addGap(18, 18, 18).addComponent(jButton3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE).addComponent(jButton5).addContainerGap()));
        pack();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        String binary = Integer.toBinaryString((int) desiredOutput);
        Layer pattern = new LayerImpl();
        for (Pixel pixel : this.grid.getPixels()) {
            pattern.getNeurons().add(new NeuronImpl(pixel.isActivated() ? 1 : 0));
        }
        Layer target = new LayerImpl();
        if (binary.length() < 7) {
            StringBuffer st = new StringBuffer(binary);
            binary = st.insert(0, "0").toString();
        }
        System.out.println("    Target pattern length is = " + binary.length());
        for (int i = 0; i < binary.length(); i++) {
            Character c = new Character(binary.charAt(i));
            String s = c.toString();
            System.out.print("  " + s);
            int k = Integer.parseInt(s);
            target.getNeurons().add(new NeuronImpl(k));
        }
        TrainingSet trainingSet = new TrainingSet(pattern, target);
        trainingSets.add(trainingSet);
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        this.setEnabled(false);
        jButton1.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        networkSettings = new NetworkSettingsImpl(100, 0.01, 3000);
        hiddenLayer = new LayerImpl(8);
        outputLayer = new LayerImpl(7);
        network = new NeuralNetworkImpl(networkSettings, trainingSets, outputLayer, hiddenLayer);
        network.trainNetwork();
        this.setEnabled(true);
        jButton1.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
    }

    private void jTextField1FocusLost(java.awt.event.FocusEvent evt) {
        desiredOutput = jTextField1.getText().charAt(0);
        System.out.println("\nDesired output pattern gotten from the box is: " + desiredOutput);
        jTextField1.setText("");
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        trainingSets.clear();
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
        fc.setFileFilter(new FileNameExtensionFilter("Text files", "txt"));
        int value = fc.showSaveDialog(this);
        if (value == JFileChooser.APPROVE_OPTION) {
            FileOutputStream out;
            try {
                out = new FileOutputStream(fc.getSelectedFile() + ".txt");
                PrintStream p = new PrintStream(out);
                for (Neuron neuron : hiddenLayer.getNeurons()) {
                    for (Connection c : neuron.getConnectionsToSource()) {
                        p.println(c.getWeight());
                    }
                    for (Connection c : neuron.getConnectionsToDistination()) {
                        p.println(c.getWeight());
                    }
                }
            } catch (FileNotFoundException ex) {
                Logger.getLogger(InteractiveJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Your file was not uploaded correctly");
        }
    }

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {
        this.grid.repaint();
    }

    private javax.swing.JButton jButton1;

    private javax.swing.JButton jButton2;

    private javax.swing.JButton jButton3;

    private javax.swing.JButton jButton4;

    private javax.swing.JButton jButton5;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JTextField jTextField1;
}
