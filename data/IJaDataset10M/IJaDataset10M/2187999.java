package net.services.servicebus.mbc.proxyclient;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4.1-hudson-346-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "MessageBufferService", targetNamespace = "http://tempuri.org/", wsdlLocation = "../wsdl/MessageBufferService.wsdl")
public class MessageBufferService extends Service {

    private static final URL MESSAGEBUFFERSERVICE_WSDL_LOCATION;

    private static final Logger logger = Logger.getLogger(net.services.servicebus.mbc.proxyclient.MessageBufferService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = net.services.servicebus.mbc.proxyclient.MessageBufferService.class.getResource("MessageBufferService.class");
            url = new URL(baseUrl, "../wsdl/MessageBufferService.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: '../wsdl/MessageBufferService.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        MESSAGEBUFFERSERVICE_WSDL_LOCATION = url;
    }

    public MessageBufferService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageBufferService() {
        super(MESSAGEBUFFERSERVICE_WSDL_LOCATION, new QName("http://tempuri.org/", "MessageBufferService"));
    }

    /**
     * 
     * @return
     *     returns MessageBufferFactory
     */
    @WebEndpoint(name = "WSHttpBinding_MessageBufferFactory")
    public MessageBufferFactory getWSHttpBindingMessageBufferFactory() {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_MessageBufferFactory"), MessageBufferFactory.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageBufferFactory
     */
    @WebEndpoint(name = "WSHttpBinding_MessageBufferFactory")
    public MessageBufferFactory getWSHttpBindingMessageBufferFactory(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_MessageBufferFactory"), MessageBufferFactory.class, features);
    }

    /**
     * 
     * @return
     *     returns MessageBufferManager
     */
    @WebEndpoint(name = "WSHttpBinding_MessageBufferManager")
    public MessageBufferManager getWSHttpBindingMessageBufferManager() {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_MessageBufferManager"), MessageBufferManager.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MessageBufferManager
     */
    @WebEndpoint(name = "WSHttpBinding_MessageBufferManager")
    public MessageBufferManager getWSHttpBindingMessageBufferManager(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "WSHttpBinding_MessageBufferManager"), MessageBufferManager.class, features);
    }
}
