package com.ciberiasoluciones.lidia.interfaz.personas;

import com.ciberiasoluciones.lidia.interfaz.Principal;
import com.ciberiasoluciones.lidia.interfaz.formas.Forma;
import com.ciberiasoluciones.lidia.modelo.TipoTelefonos;
import java.util.List;
import java.util.Vector;
import javax.persistence.Query;

/**
 *
 * @author osalcedo
 */
public class FrmTipoTelefonos extends Forma {

    Vector<TipoTelefonos> tipos;

    /** Creates new form FrmTipoTelefonos */
    public FrmTipoTelefonos(Principal p) {
        super(p);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfTipoTelefono = new javax.swing.JTextField();
        jLabel1.setText("Codigo:");
        jLabel2.setText("DescripciÃ³n:");
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel2).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jtfTipoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(39, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGap(65, 65, 65).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jtfTipoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(127, Short.MAX_VALUE)));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        pack();
    }

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JTextField jtfCodigo;

    private javax.swing.JTextField jtfTipoTelefono;

    @Override
    public boolean editar() {
        if (this.getNroRegistros() > 0) {
            tipos.get(getRegistroActual()).setCod(Integer.parseInt(jtfCodigo.getText()));
            tipos.get(getRegistroActual()).setTipoTelefono(jtfTipoTelefono.getText());
            tipos.get(getRegistroActual()).setModificador(contexto.getUsuario());
            tipos.get(getRegistroActual()).setFechaModificacion(contexto.darFechaActual());
            return db.Actualizar(tipos.get(getRegistroActual()));
        } else return false;
    }

    @Override
    public boolean buscar() {
        String sql = "Select * " + "from tipo_telefonos " + "where 1=1 ";
        if (!jtfCodigo.getText().isEmpty()) sql += " and cod like '" + jtfCodigo.getText() + "'";
        if (!jtfTipoTelefono.getText().isEmpty()) sql += " and TipoTelefono like '" + jtfTipoTelefono.getText() + "'";
        Query query = db.getEntityManager().createNativeQuery(sql, TipoTelefonos.class);
        List resultList = query.getResultList();
        if (resultList.size() > 0) {
            tipos = (Vector<TipoTelefonos>) resultList;
            setNroRegistros(tipos.size());
            setRegistroActual(0);
            VerRegistro(0);
            return true;
        } else return false;
    }

    @Override
    public boolean cargar() {
        List result = db.Consultar("TipoTelefonos.findAll");
        if (result.size() > 0) {
            tipos = (Vector<TipoTelefonos>) result;
            setNroRegistros(tipos.size());
            setRegistroActual(0);
            VerRegistro(0);
            return true;
        } else return true;
    }

    @Override
    public boolean borrar() {
        if (getNroRegistros() > 0) return db.Borrar(tipos.get(getRegistroActual())); else return false;
    }

    @Override
    public boolean insertar() {
        TipoTelefonos t = new TipoTelefonos();
        t.setCod(Integer.parseInt(jtfCodigo.getText()));
        t.setTipoTelefono(jtfTipoTelefono.getText());
        t.setCreador(contexto.getUsuario());
        t.setFechaCreacion(contexto.darFechaActual());
        return db.Insertar(t);
    }

    @Override
    public void VerRegistro(int pos) {
        if (this.getNroRegistros() > 0) {
            this.jtfCodigo.setText(tipos.get(pos).getCod().toString());
            this.jtfTipoTelefono.setText(tipos.get(pos).getTipoTelefono());
        }
    }

    @Override
    public void habilitar(boolean v) {
        jtfCodigo.setEnabled(v);
        jtfTipoTelefono.setEnabled(v);
    }
}
