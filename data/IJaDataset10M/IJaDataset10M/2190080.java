package org.gocha.grid.refvalues;

import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ListSelectionModel;
import org.gocha.data.*;
import org.gocha.grid.IGridRow;

/**
 *
 * @author  gocha
 */
public class ReferenceCellDlg extends javax.swing.JDialog {

    private ReferenceCellPanelEditor panelEditor;

    private Map<Object, Object> mapKeyValue = new HashMap<Object, Object>();

    private Map<Object, Object> mapValueKey = new HashMap<Object, Object>();

    private Map<Object, Object> mapRowValue = new HashMap<Object, Object>();

    private Map<Object, Object> mapValueRow = new HashMap<Object, Object>();

    private Table tbl = null;

    /** Creates new form ReferenceCellDlg */
    public ReferenceCellDlg(java.awt.Frame parent, boolean modal, ReferenceCellPanelEditor panelEditor) {
        super(parent, modal);
        try {
            if (panelEditor == null) {
                throw new IllegalArgumentException("panelEditor == null");
            }
            this.panelEditor = panelEditor;
            initComponents();
            tbl = new Table("xxx");
            Column valCol = new Column(tbl.getColumns(), "...", panelEditor.getEditor().getRefValue().getValueClass(), true);
            tbl.getColumns().add(valCol);
            mapKeyValue.clear();
            for (IReferencePair pair : panelEditor.getEditor().getRefValue().getAvaliablesPairs()) {
                mapKeyValue.put(pair.getReference(), pair.getValue());
                mapValueKey.put(pair.getValue(), pair.getReference());
                Row r = new Row(tbl.getRows());
                r.set(valCol, pair.getValue());
                tbl.getRows().add(r);
                mapRowValue.put(r, pair.getValue());
                mapValueRow.put(pair.getValue(), r);
            }
            grid.setTable(tbl);
            grid.getJTable().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            if (grid.getJTable().getModel() instanceof IGridRow) {
                Object key = panelEditor.getValue();
                if (mapKeyValue.containsKey(key)) {
                    Object val = mapKeyValue.get(key);
                    if (mapValueRow.containsKey(val)) {
                        int idx = ((IGridRow) grid.getJTable().getModel()).rowToIndex((Row) mapValueRow.get(val));
                        if (idx >= 0) {
                            grid.getJTable().setRowSelectionInterval(idx, idx);
                        }
                    }
                }
            }
        } catch (DataException ex) {
            Logger.getLogger(ReferenceCellDlg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean okPressed = false;

    private boolean isNull() {
        return jcbNull.isSelected();
    }

    public Object getEditValue() {
        if (isNull()) {
            return null;
        }
        if (!okPressed) {
            return panelEditor.getValue();
        }
        int selRowIdx = grid.getJTable().getSelectedRow();
        if (grid.getJTable().getModel() instanceof IGridRow) {
            IGridRow igr = (IGridRow) grid.getJTable().getModel();
            Object r = igr.indexToRow(selRowIdx);
            if (mapRowValue.containsKey(r)) {
                Object value = mapRowValue.get(r);
                if (mapValueKey.containsKey(value)) {
                    return mapValueKey.get(value);
                }
            }
        }
        return panelEditor.getValue();
    }

    private void okPressed() {
        okPressed = true;
        setVisible(false);
    }

    private void cancelPressed() {
        okPressed = false;
        setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        grid = new org.gocha.grid.DataGrid();
        jPanel1 = new javax.swing.JPanel();
        jcbNull = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jbOk = new javax.swing.JButton();
        jbCancel = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Связанные данные");
        grid.setAllowDelete(false);
        grid.setAllowEdit(false);
        grid.setAllowInsert(false);
        getContentPane().add(grid, java.awt.BorderLayout.CENTER);
        jPanel1.setLayout(new java.awt.BorderLayout());
        jcbNull.setText("Null?");
        jPanel1.add(jcbNull, java.awt.BorderLayout.WEST);
        jPanel2.setLayout(new java.awt.GridBagLayout());
        jbOk.setText("Ок");
        jbOk.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.3;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jbOk, gridBagConstraints);
        jbCancel.setText("Отмена");
        jbCancel.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jbCancel, gridBagConstraints);
        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);
        pack();
    }

    private void jbOkActionPerformed(java.awt.event.ActionEvent evt) {
        okPressed();
    }

    private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {
        cancelPressed();
    }

    private org.gocha.grid.DataGrid grid;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JButton jbCancel;

    private javax.swing.JButton jbOk;

    private javax.swing.JCheckBox jcbNull;
}
