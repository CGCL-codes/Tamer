package edu.mit.aero.foamcut.gui;

import edu.mit.aero.foamcut.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.TreeSet;
import javax.swing.JFileChooser;

/**
 *
 * @author mschafer
 */
public class XfoilWingPanel extends javax.swing.JPanel {

    /** Creates new form XfoilWingPanel */
    public XfoilWingPanel() {
        initComponents();
        rZText.setValue(new Double(Prefs.towerSpacing.get()));
        rChordText.setValue(new Double(1.));
        lChordText.setValue(new Double(1.));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lAlphaText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        lChordText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        lXfoilCombo = new javax.swing.JComboBox();
        lZText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rAlphaText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        rChordText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        rXfoilCombo = new javax.swing.JComboBox();
        rZText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        xteExtensionText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        leLoopText = new edu.mit.aero.foamcut.gui.DoubleTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        constChordCheck = new javax.swing.JCheckBox();
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Left"));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 154));
        jLabel1.setText("xfoil file");
        jLabel2.setText("chord");
        jLabel3.setText("alpha");
        lAlphaText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        lChordText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        lChordText.setText("1.0");
        lXfoilCombo.setEditable(true);
        lXfoilCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Browse ..." }));
        lXfoilCombo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lXfoilComboActionPerformed(evt);
            }
        });
        lZText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jLabel8.setText("Z Shape");
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel3).addComponent(jLabel2).addComponent(jLabel1).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(lAlphaText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE).addComponent(lChordText, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE).addComponent(lXfoilCombo, 0, 175, Short.MAX_VALUE).addComponent(lZText, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel1).addComponent(lXfoilCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(lChordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(lAlphaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(lZText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel8))));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Right"));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 154));
        jLabel5.setText("xfoil file");
        jLabel6.setText("chord");
        jLabel7.setText("alpha");
        rAlphaText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        rChordText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        rChordText.setText("1.0");
        rXfoilCombo.setEditable(true);
        rXfoilCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Browse ..." }));
        rXfoilCombo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rXfoilComboActionPerformed(evt);
            }
        });
        rZText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jLabel9.setText("Z Shape");
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel5).addComponent(jLabel6).addComponent(jLabel7).addComponent(jLabel9)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(rZText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE).addComponent(rAlphaText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE).addComponent(rChordText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE).addComponent(rXfoilCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 175, Short.MAX_VALUE))));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(rXfoilCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(rChordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(rAlphaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(rZText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel9))));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        xteExtensionText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        leLoopText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jLabel11.setText("LE loop dia.");
        jLabel4.setText("XTE extension");
        constChordCheck.setText("Same Left, Right");
        constChordCheck.setToolTipText("Left and right are the same airfoil, chord, and alpha");
        constChordCheck.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                constChordCheckActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel11).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(leLoopText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(xteExtensionText, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE).addComponent(constChordCheck).addContainerGap()));
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4).addComponent(xteExtensionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(constChordCheck)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(leLoopText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel11)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jPanel1, 0, 128, Short.MAX_VALUE).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    }

    private void lXfoilComboActionPerformed(java.awt.event.ActionEvent evt) {
        String s = (String) lXfoilCombo.getSelectedItem();
        if (s.contains("Browse")) {
            JFileChooser chooser = new JFileChooser(Prefs.lastXFoilPath.get());
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                Prefs.lastXFoilPath.set(file.getParent());
                String filename = new String(file.getAbsolutePath());
                lXfoilCombo.insertItemAt(filename, 1);
                lXfoilCombo.setSelectedIndex(1);
            }
        }
    }

    private void rXfoilComboActionPerformed(java.awt.event.ActionEvent evt) {
        String s = (String) rXfoilCombo.getSelectedItem();
        if (s.contains("Browse")) {
            JFileChooser chooser = new JFileChooser(Prefs.lastXFoilPath.get());
            int returnVal = chooser.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                Prefs.lastXFoilPath.set(file.getParent());
                String filename = new String(file.getAbsolutePath());
                rXfoilCombo.insertItemAt(filename, 1);
                rXfoilCombo.setSelectedIndex(1);
            }
        }
    }

    private void constChordCheckActionPerformed(java.awt.event.ActionEvent evt) {
        if (constChordCheck.isSelected()) {
            rXfoilCombo.setEnabled(false);
            rChordText.setEnabled(false);
            rAlphaText.setEnabled(false);
        } else {
            rXfoilCombo.setEnabled(true);
            rChordText.setEnabled(true);
            rAlphaText.setEnabled(true);
        }
    }

    private javax.swing.JCheckBox constChordCheck;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel11;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JLabel jLabel9;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private edu.mit.aero.foamcut.gui.DoubleTextField lAlphaText;

    private edu.mit.aero.foamcut.gui.DoubleTextField lChordText;

    private javax.swing.JComboBox lXfoilCombo;

    private edu.mit.aero.foamcut.gui.DoubleTextField lZText;

    private edu.mit.aero.foamcut.gui.DoubleTextField leLoopText;

    private edu.mit.aero.foamcut.gui.DoubleTextField rAlphaText;

    private edu.mit.aero.foamcut.gui.DoubleTextField rChordText;

    private javax.swing.JComboBox rXfoilCombo;

    private edu.mit.aero.foamcut.gui.DoubleTextField rZText;

    private edu.mit.aero.foamcut.gui.DoubleTextField xteExtensionText;

    /**
     * Generate a Part from the property values.
     * Airfoil coordinates are loaded from the specified data files and the
     * correct transforms are generated.
     * All other properties of Part (speed, amps, kerf, etc.) are filled in with
     * default values.
     * @return
     * @throws FileNotFoundException
     * @throws IOException
     */
    public Part generatePart() throws FileNotFoundException, IOException {
        String lFileName = ((String) lXfoilCombo.getSelectedItem()).trim();
        File lFile = new File(lFileName);
        Airfoil lAirfoil = Airfoil.loadXFoilFile(lFile);
        TreeSet<Double> lSync = new TreeSet<Double>();
        lSync.add(lAirfoil.getLeadingEdge().s);
        double lZ = ((Double) lZText.getValue()).doubleValue();
        double lAlpha = ((Double) lAlphaText.getValue()).doubleValue();
        double lChord = ((Double) lChordText.getValue()).doubleValue();
        Airfoil rAirfoil;
        TreeSet<Double> rSync;
        double rZ = ((Double) rZText.getValue()).doubleValue();
        double rAlpha, rChord;
        if (constChordCheck.isSelected()) {
            rAirfoil = new Airfoil(lAirfoil);
            rSync = lSync;
            rAlpha = lAlpha;
            rChord = lChord;
        } else {
            String rFileName = ((String) rXfoilCombo.getSelectedItem()).trim();
            File rFile = new File(rFileName);
            rAirfoil = Airfoil.loadXFoilFile(rFile);
            rSync = new TreeSet<Double>();
            rSync.add(rAirfoil.getLeadingEdge().s);
            rZ = ((Double) rZText.getValue()).doubleValue();
            rAlpha = ((Double) rAlphaText.getValue()).doubleValue();
            rChord = ((Double) rChordText.getValue()).doubleValue();
        }
        Transform lTrans = new Transform();
        lTrans.center[0] = 1.;
        lTrans.center[1] = 0.;
        lTrans.scale[0] = -lChord;
        lTrans.scale[1] = lChord;
        lTrans.rotate = lAlpha;
        Transform rTrans = new Transform();
        rTrans.center[0] = 1.;
        rTrans.center[1] = 0.;
        rTrans.scale[0] = -rChord;
        rTrans.scale[1] = rChord;
        rTrans.rotate = rAlpha;
        Shape rShape = rAirfoil;
        Shape lShape = lAirfoil;
        double rScale = rChord / Math.max(rChord, lChord);
        double lScale = lChord / Math.max(rChord, lChord);
        double leDia = (Double) (leLoopText.getValue());
        if (leDia != 0) {
            lShape = addLECircle(lAirfoil, lScale * leDia / lChord);
            if (constChordCheck.isSelected()) {
                rShape = new Shape(lShape);
            } else {
                rShape = addLECircle(rAirfoil, rScale * leDia / rChord);
            }
            lSync.clear();
            rSync.clear();
        } else {
            lShape = new Shape(lAirfoil);
            rShape = new Shape(rAirfoil);
        }
        double xte = (Double) (xteExtensionText.getValue());
        if (xte != 0.) {
            double x[] = new double[2];
            double y[] = new double[2];
            y[0] = y[1] = 0.;
            double d2r = Math.PI / 180.;
            Segment seg;
            x[0] = xte / lChord;
            x[1] = 0.;
            seg = new Segment(x, y);
            seg.rotate(lAlpha * d2r);
            lShape.prependSegment(seg);
            if (!lSync.isEmpty()) {
                Double lsle = lSync.first();
                lsle += seg.getArcLength();
                lSync.clear();
                lSync.add(lsle);
            }
            x[0] = xte / rChord;
            x[1] = 0.;
            seg = new Segment(x, y);
            seg.rotate(rAlpha * d2r);
            rShape.prependSegment(seg);
            if (!rSync.isEmpty()) {
                Double rsle = rSync.first();
                rsle += seg.getArcLength();
                rSync.clear();
                rSync.add(rsle);
            }
            x[0] = 0.;
            x[1] = xte / lChord;
            seg = new Segment(x, y);
            seg.rotate(lAlpha * d2r);
            lShape.appendSegment(seg);
            x[0] = 0.;
            x[1] = xte / rChord;
            seg = new Segment(x, y);
            seg.rotate(rAlpha * d2r);
            rShape.appendSegment(seg);
        }
        RuledSurface rs = new RuledSurface(lShape, rShape, lZ, rZ, lSync, rSync);
        Part part = new Part(rs);
        part.setInnerTransform(lTrans, rTrans);
        part.setSpeed(Prefs.defaultSpeed.get());
        return part;
    }

    private Shape addLECircle(Airfoil air, double dia) {
        Shape.Point le = air.getLeadingEdge();
        int ile = air.insertPoint(le.s, .1);
        Segment circle = Segment.createCircle(37);
        circle.scale(1., -1.);
        circle.scale(dia / 2.);
        double ntheta = Math.atan2(le.x_s, -le.y_s);
        circle.rotate(ntheta);
        Segment.Point p0 = circle.getPoint(0);
        circle.translate(le.x - p0.x, le.y - p0.y);
        double x[] = air.getX();
        double y[] = air.getY();
        double nx[] = new double[x.length + circle.getNumberOfPoints() + 1];
        double ny[] = new double[x.length + circle.getNumberOfPoints() + 1];
        int in = 0;
        for (int i = 0; i <= ile; i++) {
            nx[in] = x[i];
            ny[in] = y[i];
            in++;
        }
        double cx[] = circle.getX();
        double cy[] = circle.getY();
        for (int i = 0; i < circle.getNumberOfPoints(); i++) {
            nx[in] = cx[i];
            ny[in] = cy[i];
            in++;
        }
        for (int i = ile; i < x.length; i++) {
            nx[in] = x[i];
            ny[in] = y[i];
            in++;
        }
        return new Shape(nx, ny);
    }
}
