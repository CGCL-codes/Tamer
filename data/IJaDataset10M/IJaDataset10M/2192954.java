package net.zylk.kerozain.portal.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;
import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import net.zylk.kerozain.portal.model.AuditAction;
import net.zylk.kerozain.portal.model.AuditActionModel;
import net.zylk.kerozain.portal.model.AuditActionSoap;
import java.io.Serializable;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the AuditAction service. Represents a row in the &quot;KEROZAIN_AuditAction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link net.zylk.kerozain.portal.model.AuditActionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditActionImpl}.
 * </p>
 *
 * @author zylk.net
 * @see AuditActionImpl
 * @see net.zylk.kerozain.portal.model.AuditAction
 * @see net.zylk.kerozain.portal.model.AuditActionModel
 * @generated
 */
@JSON(strict = true)
public class AuditActionModelImpl extends BaseModelImpl<AuditAction> implements AuditActionModel {

    public static final String TABLE_NAME = "KEROZAIN_AuditAction";

    public static final Object[][] TABLE_COLUMNS = { { "uuid_", Types.VARCHAR }, { "auditActionId", Types.BIGINT }, { "companyId", Types.BIGINT }, { "groupId", Types.BIGINT }, { "userId", Types.BIGINT }, { "userScreenName", Types.VARCHAR }, { "userEmail", Types.VARCHAR }, { "userName", Types.VARCHAR }, { "date_", Types.TIMESTAMP }, { "actionId", Types.VARCHAR }, { "classNameId", Types.BIGINT }, { "classPK", Types.BIGINT }, { "classIdentifier", Types.VARCHAR } };

    public static final String TABLE_SQL_CREATE = "create table KEROZAIN_AuditAction (uuid_ VARCHAR(75) null,auditActionId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,userScreenName VARCHAR(75) null,userEmail VARCHAR(75) null,userName VARCHAR(75) null,date_ DATE null,actionId VARCHAR(75) null,classNameId LONG,classPK LONG,classIdentifier VARCHAR(75) null)";

    public static final String TABLE_SQL_DROP = "drop table KEROZAIN_AuditAction";

    public static final String ORDER_BY_JPQL = " ORDER BY auditAction.date DESC";

    public static final String ORDER_BY_SQL = " ORDER BY KEROZAIN_AuditAction.date_ DESC";

    public static final String DATA_SOURCE = "liferayDataSource";

    public static final String SESSION_FACTORY = "liferaySessionFactory";

    public static final String TX_MANAGER = "liferayTransactionManager";

    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get("value.object.entity.cache.enabled.net.zylk.kerozain.portal.model.AuditAction"), true);

    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get("value.object.finder.cache.enabled.net.zylk.kerozain.portal.model.AuditAction"), true);

    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get("value.object.column.bitmask.enabled.net.zylk.kerozain.portal.model.AuditAction"), true);

    public static long CLASSNAMEID_COLUMN_BITMASK = 1L;

    public static long CLASSPK_COLUMN_BITMASK = 2L;

    public static long GROUPID_COLUMN_BITMASK = 4L;

    public static long UUID_COLUMN_BITMASK = 8L;

    /**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
    public static AuditAction toModel(AuditActionSoap soapModel) {
        AuditAction model = new AuditActionImpl();
        model.setUuid(soapModel.getUuid());
        model.setAuditActionId(soapModel.getAuditActionId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setGroupId(soapModel.getGroupId());
        model.setUserId(soapModel.getUserId());
        model.setUserScreenName(soapModel.getUserScreenName());
        model.setUserEmail(soapModel.getUserEmail());
        model.setUserName(soapModel.getUserName());
        model.setDate(soapModel.getDate());
        model.setActionId(soapModel.getActionId());
        model.setClassNameId(soapModel.getClassNameId());
        model.setClassPK(soapModel.getClassPK());
        model.setClassIdentifier(soapModel.getClassIdentifier());
        return model;
    }

    /**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
    public static List<AuditAction> toModels(AuditActionSoap[] soapModels) {
        List<AuditAction> models = new ArrayList<AuditAction>(soapModels.length);
        for (AuditActionSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }
        return models;
    }

    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get("lock.expiration.time.net.zylk.kerozain.portal.model.AuditAction"));

    public AuditActionModelImpl() {
    }

    public long getPrimaryKey() {
        return _auditActionId;
    }

    public void setPrimaryKey(long primaryKey) {
        setAuditActionId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_auditActionId);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return AuditAction.class;
    }

    public String getModelClassName() {
        return AuditAction.class.getName();
    }

    @JSON
    public String getUuid() {
        if (_uuid == null) {
            return StringPool.BLANK;
        } else {
            return _uuid;
        }
    }

    public void setUuid(String uuid) {
        if (_originalUuid == null) {
            _originalUuid = _uuid;
        }
        _uuid = uuid;
    }

    public String getOriginalUuid() {
        return GetterUtil.getString(_originalUuid);
    }

    @JSON
    public long getAuditActionId() {
        return _auditActionId;
    }

    public void setAuditActionId(long auditActionId) {
        _auditActionId = auditActionId;
    }

    @JSON
    public long getCompanyId() {
        return _companyId;
    }

    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    public long getGroupId() {
        return _groupId;
    }

    public void setGroupId(long groupId) {
        _columnBitmask |= GROUPID_COLUMN_BITMASK;
        if (!_setOriginalGroupId) {
            _setOriginalGroupId = true;
            _originalGroupId = _groupId;
        }
        _groupId = groupId;
    }

    public long getOriginalGroupId() {
        return _originalGroupId;
    }

    @JSON
    public long getUserId() {
        return _userId;
    }

    public void setUserId(long userId) {
        _userId = userId;
    }

    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    public String getUserScreenName() {
        if (_userScreenName == null) {
            return StringPool.BLANK;
        } else {
            return _userScreenName;
        }
    }

    public void setUserScreenName(String userScreenName) {
        _userScreenName = userScreenName;
    }

    @JSON
    public String getUserEmail() {
        if (_userEmail == null) {
            return StringPool.BLANK;
        } else {
            return _userEmail;
        }
    }

    public void setUserEmail(String userEmail) {
        _userEmail = userEmail;
    }

    @JSON
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    public Date getDate() {
        return _date;
    }

    public void setDate(Date date) {
        _columnBitmask = -1L;
        _date = date;
    }

    @JSON
    public String getActionId() {
        if (_actionId == null) {
            return StringPool.BLANK;
        } else {
            return _actionId;
        }
    }

    public void setActionId(String actionId) {
        _actionId = actionId;
    }

    public String getClassName() {
        if (getClassNameId() <= 0) {
            return StringPool.BLANK;
        }
        return PortalUtil.getClassName(getClassNameId());
    }

    @JSON
    public long getClassNameId() {
        return _classNameId;
    }

    public void setClassNameId(long classNameId) {
        _columnBitmask |= CLASSNAMEID_COLUMN_BITMASK;
        if (!_setOriginalClassNameId) {
            _setOriginalClassNameId = true;
            _originalClassNameId = _classNameId;
        }
        _classNameId = classNameId;
    }

    public long getOriginalClassNameId() {
        return _originalClassNameId;
    }

    @JSON
    public long getClassPK() {
        return _classPK;
    }

    public void setClassPK(long classPK) {
        _columnBitmask |= CLASSPK_COLUMN_BITMASK;
        if (!_setOriginalClassPK) {
            _setOriginalClassPK = true;
            _originalClassPK = _classPK;
        }
        _classPK = classPK;
    }

    public long getOriginalClassPK() {
        return _originalClassPK;
    }

    @JSON
    public String getClassIdentifier() {
        if (_classIdentifier == null) {
            return StringPool.BLANK;
        } else {
            return _classIdentifier;
        }
    }

    public void setClassIdentifier(String classIdentifier) {
        _classIdentifier = classIdentifier;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public AuditAction toEscapedModel() {
        if (_escapedModelProxy == null) {
            _escapedModelProxy = (AuditAction) ProxyUtil.newProxyInstance(_classLoader, _escapedModelProxyInterfaces, new AutoEscapeBeanHandler(this));
        }
        return _escapedModelProxy;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        if (_expandoBridge == null) {
            _expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(), AuditAction.class.getName(), getPrimaryKey());
        }
        return _expandoBridge;
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        getExpandoBridge().setAttributes(serviceContext);
    }

    @Override
    public Object clone() {
        AuditActionImpl auditActionImpl = new AuditActionImpl();
        auditActionImpl.setUuid(getUuid());
        auditActionImpl.setAuditActionId(getAuditActionId());
        auditActionImpl.setCompanyId(getCompanyId());
        auditActionImpl.setGroupId(getGroupId());
        auditActionImpl.setUserId(getUserId());
        auditActionImpl.setUserScreenName(getUserScreenName());
        auditActionImpl.setUserEmail(getUserEmail());
        auditActionImpl.setUserName(getUserName());
        auditActionImpl.setDate(getDate());
        auditActionImpl.setActionId(getActionId());
        auditActionImpl.setClassNameId(getClassNameId());
        auditActionImpl.setClassPK(getClassPK());
        auditActionImpl.setClassIdentifier(getClassIdentifier());
        auditActionImpl.resetOriginalValues();
        return auditActionImpl;
    }

    public int compareTo(AuditAction auditAction) {
        int value = 0;
        value = DateUtil.compareTo(getDate(), auditAction.getDate());
        value = value * -1;
        if (value != 0) {
            return value;
        }
        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        AuditAction auditAction = null;
        try {
            auditAction = (AuditAction) obj;
        } catch (ClassCastException cce) {
            return false;
        }
        long primaryKey = auditAction.getPrimaryKey();
        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        AuditActionModelImpl auditActionModelImpl = this;
        auditActionModelImpl._originalUuid = auditActionModelImpl._uuid;
        auditActionModelImpl._originalGroupId = auditActionModelImpl._groupId;
        auditActionModelImpl._setOriginalGroupId = false;
        auditActionModelImpl._originalClassNameId = auditActionModelImpl._classNameId;
        auditActionModelImpl._setOriginalClassNameId = false;
        auditActionModelImpl._originalClassPK = auditActionModelImpl._classPK;
        auditActionModelImpl._setOriginalClassPK = false;
        auditActionModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<AuditAction> toCacheModel() {
        AuditActionCacheModel auditActionCacheModel = new AuditActionCacheModel();
        auditActionCacheModel.uuid = getUuid();
        String uuid = auditActionCacheModel.uuid;
        if ((uuid != null) && (uuid.length() == 0)) {
            auditActionCacheModel.uuid = null;
        }
        auditActionCacheModel.auditActionId = getAuditActionId();
        auditActionCacheModel.companyId = getCompanyId();
        auditActionCacheModel.groupId = getGroupId();
        auditActionCacheModel.userId = getUserId();
        auditActionCacheModel.userScreenName = getUserScreenName();
        String userScreenName = auditActionCacheModel.userScreenName;
        if ((userScreenName != null) && (userScreenName.length() == 0)) {
            auditActionCacheModel.userScreenName = null;
        }
        auditActionCacheModel.userEmail = getUserEmail();
        String userEmail = auditActionCacheModel.userEmail;
        if ((userEmail != null) && (userEmail.length() == 0)) {
            auditActionCacheModel.userEmail = null;
        }
        auditActionCacheModel.userName = getUserName();
        String userName = auditActionCacheModel.userName;
        if ((userName != null) && (userName.length() == 0)) {
            auditActionCacheModel.userName = null;
        }
        Date date = getDate();
        if (date != null) {
            auditActionCacheModel.date = date.getTime();
        } else {
            auditActionCacheModel.date = Long.MIN_VALUE;
        }
        auditActionCacheModel.actionId = getActionId();
        String actionId = auditActionCacheModel.actionId;
        if ((actionId != null) && (actionId.length() == 0)) {
            auditActionCacheModel.actionId = null;
        }
        auditActionCacheModel.classNameId = getClassNameId();
        auditActionCacheModel.classPK = getClassPK();
        auditActionCacheModel.classIdentifier = getClassIdentifier();
        String classIdentifier = auditActionCacheModel.classIdentifier;
        if ((classIdentifier != null) && (classIdentifier.length() == 0)) {
            auditActionCacheModel.classIdentifier = null;
        }
        return auditActionCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);
        sb.append("{uuid=");
        sb.append(getUuid());
        sb.append(", auditActionId=");
        sb.append(getAuditActionId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userScreenName=");
        sb.append(getUserScreenName());
        sb.append(", userEmail=");
        sb.append(getUserEmail());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", date=");
        sb.append(getDate());
        sb.append(", actionId=");
        sb.append(getActionId());
        sb.append(", classNameId=");
        sb.append(getClassNameId());
        sb.append(", classPK=");
        sb.append(getClassPK());
        sb.append(", classIdentifier=");
        sb.append(getClassIdentifier());
        sb.append("}");
        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(43);
        sb.append("<model><model-name>");
        sb.append("net.zylk.kerozain.portal.model.AuditAction");
        sb.append("</model-name>");
        sb.append("<column><column-name>uuid</column-name><column-value><![CDATA[");
        sb.append(getUuid());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>auditActionId</column-name><column-value><![CDATA[");
        sb.append(getAuditActionId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>userScreenName</column-name><column-value><![CDATA[");
        sb.append(getUserScreenName());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>userEmail</column-name><column-value><![CDATA[");
        sb.append(getUserEmail());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>date</column-name><column-value><![CDATA[");
        sb.append(getDate());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>actionId</column-name><column-value><![CDATA[");
        sb.append(getActionId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>classNameId</column-name><column-value><![CDATA[");
        sb.append(getClassNameId());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>classPK</column-name><column-value><![CDATA[");
        sb.append(getClassPK());
        sb.append("]]></column-value></column>");
        sb.append("<column><column-name>classIdentifier</column-name><column-value><![CDATA[");
        sb.append(getClassIdentifier());
        sb.append("]]></column-value></column>");
        sb.append("</model>");
        return sb.toString();
    }

    private static ClassLoader _classLoader = AuditAction.class.getClassLoader();

    private static Class<?>[] _escapedModelProxyInterfaces = new Class[] { AuditAction.class };

    private String _uuid;

    private String _originalUuid;

    private long _auditActionId;

    private long _companyId;

    private long _groupId;

    private long _originalGroupId;

    private boolean _setOriginalGroupId;

    private long _userId;

    private String _userUuid;

    private String _userScreenName;

    private String _userEmail;

    private String _userName;

    private Date _date;

    private String _actionId;

    private long _classNameId;

    private long _originalClassNameId;

    private boolean _setOriginalClassNameId;

    private long _classPK;

    private long _originalClassPK;

    private boolean _setOriginalClassPK;

    private String _classIdentifier;

    private transient ExpandoBridge _expandoBridge;

    private long _columnBitmask;

    private AuditAction _escapedModelProxy;
}
