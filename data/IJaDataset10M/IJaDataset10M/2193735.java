package iec61970.meas.validation;

import iec61970.meas.AnalogLimitSet;
import iec61970.meas.AnalogValue;
import iec61970.meas.SetPoint;
import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link iec61970.meas.Analog}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface AnalogValidator {

    boolean validate();

    boolean validateMaxValue(String value);

    boolean validateMinValue(String value);

    boolean validateNormalValue(String value);

    boolean validatePositiveFlowIn(String value);

    boolean validateLimitSets(EList<AnalogLimitSet> value);

    boolean validateContain_MeasurementValues(EList<AnalogValue> value);

    boolean validateControlledBy_Control(SetPoint value);
}
