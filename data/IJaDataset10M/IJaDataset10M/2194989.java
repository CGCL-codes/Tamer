package hydrogenorbitalapplet2d;

import javax.swing.Timer;

/**
 * The main class for the applet
 * @author Carlo Barraco
 */
public class Main extends javax.swing.JApplet {

    Canvas MyCanvas = new Canvas();

    public static double Probability = 0;

    Timer timer = new Timer(10, new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            actionTimerPerformed(evt);
        }
    });

    /**
     * Sets up the drawing canvas and initializes the GUI
     */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        timer.start();
        drawingPanel.add(MyCanvas);
        MyCanvas.drawGrid();
        this.setSize(552, 400);
    }

    /**
     * Updates the output textfield with the current probability
     * @param evt The ActionEvent
     */
    public void actionTimerPerformed(java.awt.event.ActionEvent evt) {
        txtProbability.setText(String.format("%.10g%n", Probability));
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        drawingPanel = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        sprN = new javax.swing.JSpinner();
        sdrL = new javax.swing.JSlider();
        sdrM = new javax.swing.JSlider();
        chkShowGrid = new javax.swing.JCheckBox();
        outputPanel = new javax.swing.JPanel();
        txtProbability = new javax.swing.JTextField();
        drawingPanel.setBackground(new java.awt.Color(0, 0, 0));
        drawingPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        drawingPanel.setMaximumSize(new java.awt.Dimension(400, 400));
        drawingPanel.setMinimumSize(new java.awt.Dimension(400, 400));
        drawingPanel.setPreferredSize(new java.awt.Dimension(400, 400));
        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 398, Short.MAX_VALUE));
        drawingPanelLayout.setVerticalGroup(drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 398, Short.MAX_VALUE));
        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));
        sprN.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        sprN.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "N", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP));
        sprN.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sprNStateChanged(evt);
            }
        });
        sdrL.setMajorTickSpacing(2);
        sdrL.setMaximum(0);
        sdrL.setMinorTickSpacing(1);
        sdrL.setPaintLabels(true);
        sdrL.setPaintTicks(true);
        sdrL.setSnapToTicks(true);
        sdrL.setBorder(javax.swing.BorderFactory.createTitledBorder("L"));
        sdrL.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sdrLStateChanged(evt);
            }
        });
        sdrM.setMajorTickSpacing(2);
        sdrM.setMaximum(0);
        sdrM.setMinorTickSpacing(1);
        sdrM.setPaintLabels(true);
        sdrM.setPaintTicks(true);
        sdrM.setSnapToTicks(true);
        sdrM.setBorder(javax.swing.BorderFactory.createTitledBorder("M"));
        sdrM.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sdrMStateChanged(evt);
            }
        });
        chkShowGrid.setText("Hide Grid");
        chkShowGrid.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkShowGridStateChanged(evt);
            }
        });
        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(inputPanelLayout.createSequentialGroup().addContainerGap().addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(inputPanelLayout.createSequentialGroup().addComponent(chkShowGrid).addContainerGap()).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup().addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(sdrM, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE).addComponent(sdrL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE).addComponent(sprN, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)).addGap(12, 12, 12)))));
        inputPanelLayout.setVerticalGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(inputPanelLayout.createSequentialGroup().addComponent(sprN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sdrL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sdrM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(chkShowGrid).addGap(138, 138, 138)));
        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        txtProbability.setEditable(false);
        txtProbability.setBorder(javax.swing.BorderFactory.createTitledBorder("Probability"));
        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(outputPanelLayout.createSequentialGroup().addContainerGap().addComponent(txtProbability, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE).addContainerGap()));
        outputPanelLayout.setVerticalGroup(outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(outputPanelLayout.createSequentialGroup().addComponent(txtProbability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(34, Short.MAX_VALUE)));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(drawingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE));
    }

    /**
     * Sets the first quantum number used in the equations
     * @param evt The ChangeEvent
     */
    private void sprNStateChanged(javax.swing.event.ChangeEvent evt) {
        MyCanvas.n = Integer.parseInt(sprN.getValue().toString());
        sdrL.setMaximum(Integer.parseInt(sprN.getValue().toString()) - 1);
        MyCanvas.ReCalculate = true;
        MyCanvas.repaint();
    }

    /**
     * Sets the second quantum number used in the equations
     * @param evt The ChangeEvent
     */
    private void sdrLStateChanged(javax.swing.event.ChangeEvent evt) {
        MyCanvas.l = sdrL.getValue();
        sdrM.setMinimum(-sdrL.getValue());
        sdrM.setMaximum(sdrL.getValue());
        MyCanvas.ReCalculate = true;
        MyCanvas.repaint();
    }

    /**
     * Sets the third quantum number used in the calculations
     * @param evt The ChangeEvent
     */
    private void sdrMStateChanged(javax.swing.event.ChangeEvent evt) {
        MyCanvas.m = sdrM.getValue();
        MyCanvas.ReCalculate = true;
        MyCanvas.repaint();
    }

    /**
     * Enables or disables the grid on the drawing canvas
     * @param evt The ChangeEvent
     */
    private void chkShowGridStateChanged(javax.swing.event.ChangeEvent evt) {
        if (chkShowGrid.isSelected()) {
            MyCanvas.setDrawGrid(false);
        } else {
            MyCanvas.setDrawGrid(true);
        }
        MyCanvas.ReCalculate = true;
        MyCanvas.repaint();
    }

    private javax.swing.JCheckBox chkShowGrid;

    public javax.swing.JPanel drawingPanel;

    private javax.swing.JPanel inputPanel;

    private javax.swing.JPanel outputPanel;

    private javax.swing.JSlider sdrL;

    private javax.swing.JSlider sdrM;

    private javax.swing.JSpinner sprN;

    private javax.swing.JTextField txtProbability;
}
