package jscore.gui;

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.logging.Level;
import jscore.model.containers.*;
import org.apache.log4j.Logger;

/**
 *
 * @author  marx
 */
public class JScore extends javax.swing.JPanel {

    /** Logger */
    protected static Logger logger = Logger.getRootLogger();

    /** Configuration */
    protected JScoreConfig config;

    /** Tune in interchangeable format */
    protected Tune tune;

    /** Tune in internal format */
    protected ArrayList<ScoreRow> rows = new ArrayList<ScoreRow>();

    /**
	 * Creates a new JScore panel.
	 * It loads the default properties.
	 */
    public JScore(JScoreConfig config) {
        logger.debug("Creating a new JScore object");
        initComponents();
        this.config = config;
    }

    /**
	 * Returns the tune contained in the score.
	 * @return tune contained in the score.
	 */
    public Tune getTune() {
        return tune;
    }

    /**
	 * Sets a new tune in the score.
	 * @param tune tune that should be set
	 */
    public void setTune(Tune tune) {
        this.tune = tune;
        try {
            for (Row r : tune.getRows()) {
                rows.add(new ScoreRow(config, r));
            }
        } catch (InternalGuiException ex) {
        }
    }

    @Override
    public void paint(Graphics g) {
        int maxIntroLength = 0;
        System.out.println("Painting score");
        int step = config.getVerticalStep() * 10;
        for (int idx = 0; idx < rows.size(); idx++) {
            ScoreRow row = rows.get(idx);
            int introLength = row.getIntroLength(g);
            if (introLength > maxIntroLength) maxIntroLength = introLength;
        }
        for (int idx = 0; idx < rows.size(); idx++) {
            int y = (idx + 1) * step;
            ScoreRow row = rows.get(idx);
            row.prepareDraw(g, maxIntroLength, getWidth(), y);
            try {
                row.draw();
            } catch (InternalGuiException ex) {
                java.util.logging.Logger.getLogger(JScore.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 400, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 300, Short.MAX_VALUE));
    }
}
