package de.lukas.gui;

import de.lukas.dienstplan.Arzt;
import de.lukas.gui.model.SolltageModel;
import java.awt.Color;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableModel;

/**
 *
 * @author Marc
 */
public class SolltageDialog extends javax.swing.JDialog {

    public static class SolltageRenderer extends DefaultTableCellRenderer {

        protected SolltageModel model = null;

        public SolltageRenderer() {
            super();
        }

        @Override
        public void setValue(Object value) {
            super.setValue(value);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (model.isCellEditable(row, column)) {
                this.setBackground(Color.YELLOW);
            } else {
                this.setBackground(Color.WHITE);
            }
            if (row == model.getSummeRowIndex() && model.isQuartalColIndex(column) && SolltageModel.COL_QUARTAL_SUMME != column && !model.getValueAt(row, column).equals(model.getValueAt(row + 1, column))) {
                this.setBackground(Color.ORANGE);
                this.setToolTipText("Die Summe muss der Sollsumme entsprechen.");
            } else {
                this.setToolTipText("");
            }
            setText(value == null ? "" : value.toString());
            return this;
        }

        public void setModel(SolltageModel model) {
            this.model = model;
        }
    }

    public static class SolltageTable extends JTable {

        public static SolltageRenderer solltageRenderer = null;

        public SolltageTable() {
            super();
            solltageRenderer = new SolltageRenderer();
        }

        @Override
        public TableCellRenderer getCellRenderer(int row, int column) {
            return solltageRenderer;
        }

        @Override
        public void setModel(TableModel dataModel) {
            super.setModel(dataModel);
            if (dataModel instanceof SolltageModel) solltageRenderer.setModel((SolltageModel) dataModel);
        }
    }

    /** Creates new form ArztStatistikenDialog */
    public SolltageDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initOwnComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        solltageTable = new SolltageTable();
        testdatenButton = new javax.swing.JButton();
        vorbelegungenEintragenButton = new javax.swing.JButton();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form");
        jScrollPane1.setName("jScrollPane1");
        solltageTable.setModel(new de.lukas.gui.model.SolltageModel());
        solltageTable.setCellSelectionEnabled(true);
        solltageTable.setName("solltageTable");
        solltageTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(solltageTable);
        testdatenButton.setName("testdatenButton");
        testdatenButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testdatenButtonActionPerformed(evt);
            }
        });
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.lukas.gui.DutyDesignerApp.class).getContext().getResourceMap(SolltageDialog.class);
        vorbelegungenEintragenButton.setText(resourceMap.getString("vorbelegungenEintragenButton.text"));
        vorbelegungenEintragenButton.setName("vorbelegungenEintragenButton");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addGap(75, 75, 75).addComponent(testdatenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(43, 43, 43).addComponent(vorbelegungenEintragenButton).addGap(402, 402, 402)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(7, 7, 7).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(testdatenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(vorbelegungenEintragenButton)).addContainerGap(34, Short.MAX_VALUE)));
        pack();
    }

    private void testdatenButtonActionPerformed(java.awt.event.ActionEvent evt) {
        List<Arzt> aerzte = new ArrayList<Arzt>();
        aerzte.add(new Arzt("Lukas", 1, 2, 3));
        aerzte.add(new Arzt("Marc", 4, 5, 6));
        List<Integer> sollSummen = new ArrayList<Integer>(4);
        sollSummen.add(new Integer(10));
        sollSummen.add(new Integer(11));
        sollSummen.add(new Integer(12));
        sollSummen.add(new Integer(13));
        ((SolltageModel) solltageTable.getModel()).setAerzte(aerzte);
        ((SolltageModel) solltageTable.getModel()).setSollSummen(sollSummen);
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                SolltageDialog dialog = new SolltageDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable solltageTable;

    private javax.swing.JButton testdatenButton;

    private javax.swing.JButton vorbelegungenEintragenButton;

    protected void initOwnComponents() {
        solltageTable.doLayout();
    }

    protected SolltageModel getModel() {
        return (SolltageModel) solltageTable.getModel();
    }
}
