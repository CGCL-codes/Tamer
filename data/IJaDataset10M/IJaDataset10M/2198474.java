package com.movilnet.clom.framework.test;

import java.util.Map;
import javax.naming.InitialContext;
import com.movilnet.clom.framework.bussines.IGenericManager;
import com.movilnet.clom.framework.bussines.IOrderManager;
import com.movilnet.clom.framework.entity.Equipo;
import com.movilnet.clom.framework.entity.GarantiaTipo;
import com.movilnet.clom.framework.entity.Nodo;
import com.movilnet.clom.framework.entity.Orden;
import com.movilnet.clom.framework.entity.OrdenGarantia;
import com.movilnet.clom.framework.entity.Usuario;
import com.movilnet.clom.framework.repository.IGenericRepositoryRemote;

@SuppressWarnings({ "rawtypes", "unchecked" })
public class TestFuncionalidad {

    public void test_Garantia1A_A_Y_Normal(Long equipoId) throws Exception {
        {
            Long garatiaTipo = 1L;
            Long nodoOrigen = 2L;
            String condicionesFisicas = "Con rayas y manchas";
            Long estacionAgente = 1L;
            Long usuarioAgente = 1L;
            Long estacionYaguaraIngreso = 14L;
            Long usuarioYaguaraIgreso = 10L;
            Long estacionYaguaraValidacionAdm = 15L;
            Long estacionYaguaraValidacionTec = 16L;
            Long estacionYaguaraValidacionRep = 18L;
            Long estacionYaguaraValidacionDesp = 22L;
            Long contenedorClasificacionAgente = 2L;
            Long contenedorClasificacionYaguara = 10L;
            Integer pesoPaquete = 0;
            String guia = "GUIA-001";
            String guia2 = "GUIA-002";
            InitialContext context = new InitialContext();
            System.out.println("LOG================> Inicio del Test");
            IGenericRepositoryRemote repository;
            IGenericManager manager;
            IOrderManager orderManager;
            repository = (IGenericRepositoryRemote) context.lookup("GenericRepository/remote");
            manager = (IGenericManager) context.lookup("GenericManager/remote");
            orderManager = (IOrderManager) context.lookup("OrderManager/remote");
            OrdenGarantia ordenGarantia = new OrdenGarantia();
            Orden orden = new Orden();
            ordenGarantia.setOrden(orden);
            Nodo nodo = new Nodo();
            nodo.setId(nodoOrigen);
            Equipo equipo = new Equipo();
            equipo.setId(equipoId);
            GarantiaTipo garantiaTipo = new GarantiaTipo();
            garantiaTipo.setId(garatiaTipo);
            Usuario usuario = new Usuario();
            usuario.setId(usuarioAgente);
            ordenGarantia.getOrden().setNodoactual(nodo);
            ordenGarantia.getOrden().setNodoorigen(nodo);
            ordenGarantia.setCondicionesfisicas(condicionesFisicas);
            ordenGarantia.setEquipo(equipo);
            ordenGarantia.setGarantiaTipo(garantiaTipo);
            ordenGarantia.getOrden().setUsuario(usuario);
            Map<String, Object> respuesta = orderManager.crearOrdenGarantia(ordenGarantia, estacionAgente);
            Long ordenId = new Long((Integer) respuesta.get("p_ordenid"));
            System.out.println("LOG================> -------- 1 CREAR ORDEN --------");
            System.out.println("LOG================> Orden Creada #: " + respuesta.get("p_ordenid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.getReglaEnvioDestino(ordenId);
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 2 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionAgente, pesoPaquete, guia, usuarioAgente);
            Long paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 3 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionAgente, usuarioAgente);
            Long envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 4 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionYaguaraIngreso, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 5 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 6 RECIBIR ENVIO INTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.validarAdministrativoOrden(ordenId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso, "Y");
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 7 VALIDACION ADMINISTRATIVA --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionTec, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 8 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.validarTecnicoOrden(ordenId, estacionYaguaraValidacionTec, usuarioYaguaraIgreso, "Y");
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 9 VALIDACION TECNICA --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionRep, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 10 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.repararOrden(ordenId, estacionYaguaraValidacionRep, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 11 REPARACION --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 12 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionYaguara, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 13 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionYaguara, pesoPaquete, guia2, usuarioYaguaraIgreso);
            paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 14 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 15 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionAgente, usuarioAgente);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 16 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.cerrarOrdenGarantia(ordenId, estacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 17 CERRAR ORDEN --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Fin del Test");
        }
    }

    public void test_Garantia1A_A_Y_RechazoAdmin(Long equipoId) throws Exception {
        {
            Long garatiaTipo = 1L;
            Long nodoOrigen = 2L;
            String condicionesFisicas = "Con rayas y manchas";
            Long estacionAgente = 1L;
            Long usuarioAgente = 1L;
            Long estacionYaguaraIngreso = 14L;
            Long usuarioYaguaraIgreso = 10L;
            Long estacionYaguaraValidacionAdm = 15L;
            Long estacionYaguaraValidacionTec = 16L;
            Long estacionYaguaraValidacionRep = 18L;
            Long estacionYaguaraValidacionDesp = 22L;
            Long contenedorClasificacionAgente = 2L;
            Long contenedorClasificacionYaguara = 10L;
            Integer pesoPaquete = 0;
            String guia = "GUIA-001";
            String guia2 = "GUIA-002";
            InitialContext context = new InitialContext();
            System.out.println("LOG================> Inicio del Test");
            IGenericRepositoryRemote repository;
            IGenericManager manager;
            IOrderManager orderManager;
            repository = (IGenericRepositoryRemote) context.lookup("GenericRepository/remote");
            manager = (IGenericManager) context.lookup("GenericManager/remote");
            orderManager = (IOrderManager) context.lookup("OrderManager/remote");
            OrdenGarantia ordenGarantia = new OrdenGarantia();
            Orden orden = new Orden();
            ordenGarantia.setOrden(orden);
            Nodo nodo = new Nodo();
            nodo.setId(nodoOrigen);
            Equipo equipo = new Equipo();
            equipo.setId(equipoId);
            GarantiaTipo garantiaTipo = new GarantiaTipo();
            garantiaTipo.setId(garatiaTipo);
            Usuario usuario = new Usuario();
            usuario.setId(usuarioAgente);
            ordenGarantia.getOrden().setNodoactual(nodo);
            ordenGarantia.getOrden().setNodoorigen(nodo);
            ordenGarantia.setCondicionesfisicas(condicionesFisicas);
            ordenGarantia.setEquipo(equipo);
            ordenGarantia.setGarantiaTipo(garantiaTipo);
            ordenGarantia.getOrden().setUsuario(usuario);
            Map<String, Object> respuesta = orderManager.crearOrdenGarantia(ordenGarantia, estacionAgente);
            Long ordenId = new Long((Integer) respuesta.get("p_ordenid"));
            System.out.println("LOG================> -------- 1 CREAR ORDEN --------");
            System.out.println("LOG================> Orden Creada #: " + respuesta.get("p_ordenid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.getReglaEnvioDestino(ordenId);
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 2 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionAgente, pesoPaquete, guia, usuarioAgente);
            Long paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 3 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionAgente, usuarioAgente);
            Long envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 4 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionYaguaraIngreso, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 5 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 6 RECIBIR ENVIO INTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.validarAdministrativoOrden(ordenId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso, "N");
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 7 VALIDACION ADMINISTRATIVA --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 12 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionYaguara, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 13 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionYaguara, pesoPaquete, guia2, usuarioYaguaraIgreso);
            paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 14 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 15 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionAgente, usuarioAgente);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 16 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.cerrarOrdenGarantia(ordenId, estacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 17 CERRAR ORDEN --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Fin del Test");
        }
    }

    public void test_Garantia1A_A_Y_RechazoTec(Long equipoId) throws Exception {
        {
            Long garatiaTipo = 1L;
            Long nodoOrigen = 2L;
            String condicionesFisicas = "Con rayas y manchas";
            Long estacionAgente = 1L;
            Long usuarioAgente = 1L;
            Long estacionYaguaraIngreso = 14L;
            Long usuarioYaguaraIgreso = 10L;
            Long estacionYaguaraValidacionAdm = 15L;
            Long estacionYaguaraValidacionTec = 16L;
            Long estacionYaguaraValidacionRep = 18L;
            Long estacionYaguaraValidacionDesp = 22L;
            Long contenedorClasificacionAgente = 2L;
            Long contenedorClasificacionYaguara = 10L;
            Integer pesoPaquete = 0;
            String guia = "GUIA-001";
            String guia2 = "GUIA-002";
            InitialContext context = new InitialContext();
            System.out.println("LOG================> Inicio del Test");
            IGenericRepositoryRemote repository;
            IGenericManager manager;
            IOrderManager orderManager;
            repository = (IGenericRepositoryRemote) context.lookup("GenericRepository/remote");
            manager = (IGenericManager) context.lookup("GenericManager/remote");
            orderManager = (IOrderManager) context.lookup("OrderManager/remote");
            OrdenGarantia ordenGarantia = new OrdenGarantia();
            Orden orden = new Orden();
            ordenGarantia.setOrden(orden);
            Nodo nodo = new Nodo();
            nodo.setId(nodoOrigen);
            Equipo equipo = new Equipo();
            equipo.setId(equipoId);
            GarantiaTipo garantiaTipo = new GarantiaTipo();
            garantiaTipo.setId(garatiaTipo);
            Usuario usuario = new Usuario();
            usuario.setId(usuarioAgente);
            ordenGarantia.getOrden().setNodoactual(nodo);
            ordenGarantia.getOrden().setNodoorigen(nodo);
            ordenGarantia.setCondicionesfisicas(condicionesFisicas);
            ordenGarantia.setEquipo(equipo);
            ordenGarantia.setGarantiaTipo(garantiaTipo);
            ordenGarantia.getOrden().setUsuario(usuario);
            Map<String, Object> respuesta = orderManager.crearOrdenGarantia(ordenGarantia, estacionAgente);
            Long ordenId = new Long((Integer) respuesta.get("p_ordenid"));
            System.out.println("LOG================> -------- 1 CREAR ORDEN --------");
            System.out.println("LOG================> Orden Creada #: " + respuesta.get("p_ordenid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.getReglaEnvioDestino(ordenId);
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 2 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionAgente, pesoPaquete, guia, usuarioAgente);
            Long paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 3 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionAgente, usuarioAgente);
            Long envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 4 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionYaguaraIngreso, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 5 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 6 RECIBIR ENVIO INTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.validarAdministrativoOrden(ordenId, estacionYaguaraValidacionAdm, usuarioYaguaraIgreso, "Y");
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 7 VALIDACION ADMINISTRATIVA --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionTec, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 8 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.validarTecnicoOrden(ordenId, estacionYaguaraValidacionTec, usuarioYaguaraIgreso, "N");
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 9 VALIDACION TECNICA --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Envio Intero Auto-Generado #: " + respuesta.get("p_enviointerno"));
            respuesta = orderManager.recibirEnvioInterno(envioId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 12 RECIBIR ENVIO INTERNO  --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.clasificarOrdenGarantiaDespacho(ordenId, contenedorClasificacionYaguara, usuarioYaguaraIgreso);
            System.out.println("LOG================> -------- 13 CLASIFICAR --------");
            System.out.println("LOG================> Destino de la Orden: " + respuesta.get("p_destino"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.empaquetarContenedorDespacho(contenedorClasificacionYaguara, pesoPaquete, guia2, usuarioYaguaraIgreso);
            paqueteId = new Long((Integer) respuesta.get("p_paqueteid"));
            System.out.println("LOG================> -------- 14 EMPAQUETAR --------");
            System.out.println("LOG================> Paquete Creado #: " + respuesta.get("p_paqueteid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.enviarPaqueteExterno(paqueteId, estacionYaguaraValidacionDesp, usuarioYaguaraIgreso);
            envioId = new Long((Integer) respuesta.get("p_envioid"));
            System.out.println("LOG================> -------- 15 ENVIO EXTERNO --------");
            System.out.println("LOG================> Envio Creado #: " + respuesta.get("p_envioid"));
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.recibirEnvioExterno(envioId, estacionAgente, usuarioAgente);
            envioId = new Long((Integer) respuesta.get("p_enviointerno"));
            System.out.println("LOG================> -------- 16 RECIBIR ENVIO EXTERNO --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            respuesta = orderManager.cerrarOrdenGarantia(ordenId, estacionAgente, usuarioAgente);
            System.out.println("LOG================> -------- 17 CERRAR ORDEN --------");
            System.out.println("LOG================> Validacion: " + respuesta.get("p_valido"));
            System.out.println("LOG================> Mensaje: " + respuesta.get("p_mensaje"));
            System.out.println("LOG================> Fin del Test");
        }
    }

    public static void main(String[] args) {
        try {
            TestFuncionalidad test = new TestFuncionalidad();
            System.out.println("pase");
            test.test_Garantia1A_A_Y_RechazoTec(110193L);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
