package securus.webservices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.6 in JDK 6 Generated
 * source version: 2.1
 * 
 */
@WebService(name = "SecurusWebService", targetNamespace = "http://webservices.securus/")
@XmlSeeAlso({ ObjectFactory.class })
public interface SecurusWebService {

    /**
	 * 
	 * @param deviceName
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "deviceId", targetNamespace = "")
    @RequestWrapper(localName = "connectDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ConnectDevice")
    @ResponseWrapper(localName = "connectDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ConnectDeviceResponse")
    public Long connectDevice(@WebParam(name = "deviceName", targetNamespace = "") String deviceName);

    /**
	 * 
	 * @param deviceName
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "deviceId", targetNamespace = "")
    @RequestWrapper(localName = "createDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateDevice")
    @ResponseWrapper(localName = "createDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateDeviceResponse")
    public Long createDevice(@WebParam(name = "deviceName", targetNamespace = "") String deviceName);

    /**
	 * 
	 * @param newDeviceProperty
	 * @return returns securus.webservices.DeviceProperty
	 */
    @WebMethod
    @WebResult(name = "deviceProperty", targetNamespace = "")
    @RequestWrapper(localName = "createDeviceNew", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateDeviceNew")
    @ResponseWrapper(localName = "createDeviceNewResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateDeviceNewResponse")
    public DeviceProperty createDeviceNew(@WebParam(name = "newDeviceProperty", targetNamespace = "") DeviceProperty newDeviceProperty);

    /**
	 * 
	 * @param expires
	 * @param email
	 * @return returns securus.webservices.UserProperty
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createEmailAccount", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateEmailAccount")
    @ResponseWrapper(localName = "createEmailAccountResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.CreateEmailAccountResponse")
    public UserProperty createEmailAccount(@WebParam(name = "email", targetNamespace = "") String email, @WebParam(name = "expires", targetNamespace = "") XMLGregorianCalendar expires);

    /**
	 * 
	 * @param deviceId
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.DeleteDevice")
    @ResponseWrapper(localName = "deleteDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.DeleteDeviceResponse")
    public boolean deleteDevice(@WebParam(name = "deviceId", targetNamespace = "") Long deviceId);

    /**
	 * 
	 * @param deviceId
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "disconnectDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.DisconnectDevice")
    @ResponseWrapper(localName = "disconnectDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.DisconnectDeviceResponse")
    public boolean disconnectDevice(@WebParam(name = "deviceId", targetNamespace = "") Long deviceId);

    /**
	 * 
	 * @return returns java.lang.Integer
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCurrentSessionTimeout", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetCurrentSessionTimeout")
    @ResponseWrapper(localName = "getCurrentSessionTimeoutResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetCurrentSessionTimeoutResponse")
    public Integer getCurrentSessionTimeout();

    /**
	 * 
	 * @param reqDeviceProperty
	 * @return returns securus.webservices.DeviceProperty
	 */
    @WebMethod
    @WebResult(name = "deviceProperty", targetNamespace = "")
    @RequestWrapper(localName = "getDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDevice")
    @ResponseWrapper(localName = "getDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDeviceResponse")
    public DeviceProperty getDevice(@WebParam(name = "reqDeviceProperty", targetNamespace = "") DeviceProperty reqDeviceProperty);

    /**
	 * 
	 * @param deviceName
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "deviceId", targetNamespace = "")
    @RequestWrapper(localName = "getDeviceId", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDeviceId")
    @ResponseWrapper(localName = "getDeviceIdResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDeviceIdResponse")
    public Long getDeviceId(@WebParam(name = "deviceName", targetNamespace = "") String deviceName);

    /**
	 * 
	 * @param userId
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "availableSpace", targetNamespace = "")
    @RequestWrapper(localName = "getDiskSpaceAvailable", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDiskSpaceAvailable")
    @ResponseWrapper(localName = "getDiskSpaceAvailableResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetDiskSpaceAvailableResponse")
    public Long getDiskSpaceAvailable(@WebParam(name = "userId", targetNamespace = "") Long userId);

    /**
	 * 
	 * @param userId
	 * @return returns java.util.List<securus.webservices.WebSharedFile>
	 */
    @WebMethod
    @WebResult(name = "sharedFiles", targetNamespace = "")
    @RequestWrapper(localName = "getFilesSharedToUser", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetFilesSharedToUser")
    @ResponseWrapper(localName = "getFilesSharedToUserResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetFilesSharedToUserResponse")
    public List<WebSharedFile> getFilesSharedToUser(@WebParam(name = "userId", targetNamespace = "") Long userId);

    /**
	 * 
	 * @return returns java.lang.String
	 */
    @WebMethod
    @WebResult(name = "serverAddress", targetNamespace = "")
    @RequestWrapper(localName = "getServerAddress", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetServerAddress")
    @ResponseWrapper(localName = "getServerAddressResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetServerAddressResponse")
    public String getServerAddress();

    /**
	 * 
	 * @return returns long
	 */
    @WebMethod
    @WebResult(name = "spaceAvailable", targetNamespace = "")
    @RequestWrapper(localName = "getStorageSpaceAvailable", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetStorageSpaceAvailable")
    @ResponseWrapper(localName = "getStorageSpaceAvailableResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetStorageSpaceAvailableResponse")
    public long getStorageSpaceAvailable();

    /**
	 * 
	 * @param email
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "userId", targetNamespace = "")
    @RequestWrapper(localName = "getUserIdByEmail", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetUserIdByEmail")
    @ResponseWrapper(localName = "getUserIdByEmailResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetUserIdByEmailResponse")
    public Long getUserIdByEmail(@WebParam(name = "email", targetNamespace = "") String email);

    /**
	 * 
	 * @param userId
	 * @return returns java.lang.String
	 */
    @WebMethod
    @WebResult(name = "userName", targetNamespace = "")
    @RequestWrapper(localName = "getUserName", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetUserName")
    @ResponseWrapper(localName = "getUserNameResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.GetUserNameResponse")
    public String getUserName(@WebParam(name = "userId", targetNamespace = "") Long userId);

    /**
	 * 
	 * @param deviceId
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isDeviceEnabled", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsDeviceEnabled")
    @ResponseWrapper(localName = "isDeviceEnabledResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsDeviceEnabledResponse")
    public boolean isDeviceEnabled(@WebParam(name = "deviceId", targetNamespace = "") Long deviceId);

    /**
	 * 
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isServerEnabled", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsServerEnabled")
    @ResponseWrapper(localName = "isServerEnabledResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsServerEnabledResponse")
    public boolean isServerEnabled();

    /**
	 * 
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isSessionAlive", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsSessionAlive")
    @ResponseWrapper(localName = "isSessionAliveResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.IsSessionAliveResponse")
    public boolean isSessionAlive();

    /**
	 * 
	 * @param userName
	 * @param password
	 * @return returns java.lang.Long
	 */
    @WebMethod
    @WebResult(name = "userId", targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://webservices.securus/", className = "securus.webservices.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.LoginResponse")
    public Long login(@WebParam(name = "userName", targetNamespace = "") String userName, @WebParam(name = "password", targetNamespace = "") String password);

    /**
	 * 
	 * @param userName
	 * @param password
	 * @return returns securus.webservices.UserProperty
	 */
    @WebMethod
    @WebResult(name = "userProperty", targetNamespace = "")
    @RequestWrapper(localName = "loginNew", targetNamespace = "http://webservices.securus/", className = "securus.webservices.LoginNew")
    @ResponseWrapper(localName = "loginNewResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.LoginNewResponse")
    public UserProperty loginNew(@WebParam(name = "userName", targetNamespace = "") byte[] userName, @WebParam(name = "password", targetNamespace = "") byte[] password);

    /**
	 * 
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "logout", targetNamespace = "http://webservices.securus/", className = "securus.webservices.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.LogoutResponse")
    public boolean logout();

    /**
     * 
     * @param deviceProperty
     */
    @WebMethod
    @RequestWrapper(localName = "restoreDevice", targetNamespace = "http://webservices.securus/", className = "securus.webservices.RestoreDevice")
    @ResponseWrapper(localName = "restoreDeviceResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.RestoreDeviceResponse")
    public void restoreDevice(@WebParam(name = "deviceProperty", targetNamespace = "", mode = WebParam.Mode.INOUT) Holder<DeviceProperty> deviceProperty);

    /**
     * 
     * @param files
     * @param userId
     * @param deviceId
     * @param mailParameters
     */
    @WebMethod
    @RequestWrapper(localName = "sendFiles", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SendFiles")
    @ResponseWrapper(localName = "sendFilesResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SendFilesResponse")
    public void sendFiles(@WebParam(name = "mailParameters", targetNamespace = "") EmailParameters mailParameters, @WebParam(name = "files", targetNamespace = "") List<FileItem> files, @WebParam(name = "deviceId", targetNamespace = "") long deviceId, @WebParam(name = "userId", targetNamespace = "") long userId);

    /**
	 * 
	 * @param files
	 * @param deviceId
	 * @param mailParameters
	 */
    @WebMethod
    @RequestWrapper(localName = "sendFiles", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SendFiles")
    @ResponseWrapper(localName = "sendFilesResponseAsync", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SendFilesResponseAsync")
    public Response<Object> sendFilesAsync(@WebParam(name = "mailParameters", targetNamespace = "") EmailParameters mailParameters, @WebParam(name = "files", targetNamespace = "") List<FileItem> files, @WebParam(name = "deviceId", targetNamespace = "") long deviceId, @WebParam(name = "userId", targetNamespace = "") long userId);

    /**
	 * 
	 * @param timeout
	 */
    @WebMethod
    @RequestWrapper(localName = "setCurrentSessionTimeout", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SetCurrentSessionTimeout")
    @ResponseWrapper(localName = "setCurrentSessionTimeoutResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SetCurrentSessionTimeoutResponse")
    public void setCurrentSessionTimeout(@WebParam(name = "timeout", targetNamespace = "") Integer timeout);

    /**
	 * 
	 * @param deviceName
	 * @param deviceId
	 * @return returns boolean
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setDeviceName", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SetDeviceName")
    @ResponseWrapper(localName = "setDeviceNameResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.SetDeviceNameResponse")
    public boolean setDeviceName(@WebParam(name = "deviceId", targetNamespace = "") Long deviceId, @WebParam(name = "deviceName", targetNamespace = "") String deviceName);

    /**
	 * 
	 * @param toUserEmails
	 * @param files
	 * @param expireDate
	 * @param fromUserId
	 * @param deviceId
	 * @param mode
	 * @return returns java.util.List<securus.webservices.WebSharedFile>
	 */
    @WebMethod
    @WebResult(name = "persistedFiles", targetNamespace = "")
    @RequestWrapper(localName = "shareFiles", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ShareFiles")
    @ResponseWrapper(localName = "shareFilesResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ShareFilesResponse")
    public List<WebSharedFile> shareFiles(@WebParam(name = "fromUserId", targetNamespace = "") Long fromUserId, @WebParam(name = "toUserEmails", targetNamespace = "") List<String> toUserEmails, @WebParam(name = "deviceId", targetNamespace = "") Long deviceId, @WebParam(name = "files", targetNamespace = "") List<ShareItem> files, @WebParam(name = "expireDate", targetNamespace = "") XMLGregorianCalendar expireDate, @WebParam(name = "mode", targetNamespace = "") int mode);

    /**
	 * 
	 * @param toUserEmails
	 * @param files
	 * @param expireDate
	 * @param fromUserId
	 * @param deviceId
	 * @param mode
	 * @return returns java.util.List<securus.webservices.WebSharedFile>
	 */
    @WebMethod(operationName = "shareFiles")
    @WebResult(name = "persistedFiles", targetNamespace = "")
    @RequestWrapper(localName = "shareFiles", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ShareFiles")
    @ResponseWrapper(localName = "shareFilesResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.ShareFilesResponse")
    public Response<ShareFilesResponse> shareFilesAsync(@WebParam(name = "fromUserId", targetNamespace = "") Long fromUserId, @WebParam(name = "toUserEmails", targetNamespace = "") List<String> toUserEmails, @WebParam(name = "deviceId", targetNamespace = "") Long deviceId, @WebParam(name = "files", targetNamespace = "") List<ShareItem> files, @WebParam(name = "expireDate", targetNamespace = "") XMLGregorianCalendar expireDate, @WebParam(name = "mode", targetNamespace = "") int mode);

    /**
	 * 
	 * @param shareId
	 */
    @WebMethod
    @RequestWrapper(localName = "stopSharing", targetNamespace = "http://webservices.securus/", className = "securus.webservices.StopSharing")
    @ResponseWrapper(localName = "stopSharingResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.StopSharingResponse")
    public void stopSharing(@WebParam(name = "shareId", targetNamespace = "") long shareId);

    /**
	 * 
	 * @param shareId
	 */
    @WebMethod
    @RequestWrapper(localName = "stopSharing", targetNamespace = "http://webservices.securus/", className = "securus.webservices.StopSharing")
    @ResponseWrapper(localName = "stopSharingResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.StopSharingResponse")
    public Response<Object> stopSharingAsync(@WebParam(name = "shareId", targetNamespace = "") long shareId);

    /**
	 * 
	 * @param expires
	 * @param shareId
	 * @param permission
	 * @return returns securus.webservices.WebSharedFile
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateShare", targetNamespace = "http://webservices.securus/", className = "securus.webservices.UpdateShare")
    @ResponseWrapper(localName = "updateShareResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.UpdateShareResponse")
    public WebSharedFile updateShare(@WebParam(name = "shareId", targetNamespace = "") long shareId, @WebParam(name = "permission", targetNamespace = "") int permission, @WebParam(name = "expires", targetNamespace = "") XMLGregorianCalendar expires);

    /**
	 * 
	 * @param expires
	 * @param shareId
	 * @param permission
	 * @return returns securus.webservices.WebSharedFile
	 */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateShare", targetNamespace = "http://webservices.securus/", className = "securus.webservices.UpdateShare")
    @ResponseWrapper(localName = "updateShareResponse", targetNamespace = "http://webservices.securus/", className = "securus.webservices.UpdateShareResponse")
    public Response<UpdateShareResponse> updateShareAsync(@WebParam(name = "shareId", targetNamespace = "") long shareId, @WebParam(name = "permission", targetNamespace = "") int permission, @WebParam(name = "expires", targetNamespace = "") XMLGregorianCalendar expires);
}
