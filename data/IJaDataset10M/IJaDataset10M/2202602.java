package Presentacion.Planilla;

import Datos.DAO;
import Datos.TipodeestablecimientoDAO;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Usuario
 */
public class GUITipodeestablecimiento extends javax.swing.JInternalFrame {

    private TableRowSorter trsfiltro;

    static Connection con = null;

    private Statement st = null;

    protected ResultSet rs = null;

    DefaultTableModel tempX;

    DefaultTableModel dtm = new DefaultTableModel(10, 5) {

        @Override
        public boolean isCellEditable(int row, int column) {
            if ((0 == column)) return false;
            if ((1 == column)) return false;
            if ((2 == column)) return false;
            if ((3 == column)) return false;
            return super.isCellEditable(row, column);
        }
    };

    /** Creates new form GUITipodeestablecimiento */
    public GUITipodeestablecimiento() {
        initComponents();
        String titulos[] = { "IDest", "CODIGO", "DESCRPCION" };
        dtm.setColumnIdentifiers(titulos);
        tblTipodeestablecimiento.setModel(dtm);
        tblTipodeestablecimiento.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblTipodeestablecimiento.getColumnModel().getColumn(1).setPreferredWidth(70);
        tblTipodeestablecimiento.getColumnModel().getColumn(2).setPreferredWidth(300);
        CargarTabla();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void CargarTabla() {
        try {
            int i, k;
            con = (Connection) DAO.getConexion();
            rs = TipodeestablecimientoDAO.results(rs);
            String[] datos = new String[4];
            k = dtm.getRowCount();
            if (k > 0) {
                for (i = 0; i < k; i++) {
                    dtm.removeRow(0);
                }
            }
            while (rs.next()) {
                datos[0] = (String) rs.getString(1);
                datos[1] = (String) rs.getString(2);
                datos[2] = (String) rs.getString(3);
                dtm.addRow(datos);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error en la Base de Datos" + e.toString());
        }
    }

    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTipodeestablecimiento = new javax.swing.JTable();
        setClosable(true);
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblTipodeestablecimiento.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
        tblTipodeestablecimiento.setSelectionBackground(java.awt.Color.orange);
        tblTipodeestablecimiento.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTipodeestablecimientoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTipodeestablecimiento);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE).addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE).addContainerGap()));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        pack();
    }

    private void tblTipodeestablecimientoMouseClicked(java.awt.event.MouseEvent evt) {
        int fill = tblTipodeestablecimiento.getRowCount();
        if (fill > 0) {
            int filSelect = tblTipodeestablecimiento.getSelectedRow();
            GUIDeclarantes.txtTipoestablecimiento.setText(String.valueOf(tblTipodeestablecimiento.getValueAt(filSelect, 0)));
            GUIDeclarantes.txtCodTipo.setText(String.valueOf(tblTipodeestablecimiento.getValueAt(filSelect, 1)));
            GUIDeclarantes.txtDescripcionEst.setText(String.valueOf(tblTipodeestablecimiento.getValueAt(filSelect, 2)));
            dispose();
        }
    }

    private javax.swing.JPanel jPanel1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable tblTipodeestablecimiento;
}
