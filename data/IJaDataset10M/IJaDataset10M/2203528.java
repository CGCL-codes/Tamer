package org.netbeans.server.uihandler;

import java.io.File;
import java.io.IOException;
import java.net.SocketTimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 *
 * @author Jaroslav Tulach
 * @version
 */
public class UploadLogs extends HttpServlet {

    private static Logger LOG = Logger.getLogger(UploadLogs.class.getName());

    @Override
    public void init() throws ServletException {
        LOG.info("Initializing UploadLogs servlet");
        try {
            LogsManager.getDefault();
        } catch (Exception ex) {
            LOG.log(Level.SEVERE, ex.getMessage(), ex);
        }
        LOG.info("Done Initializing UploadLogs servlet");
    }

    /** Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.
     * @param request servlet request
     * @param response servlet response
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        LOG.finer("processing request");
        if (Utils.getRootUploadDirPath() == null) {
            String msg = "UploadServlet.doPost: dir is null.";
            LOG.warning(msg);
            request.setAttribute("error", msg);
            getServletContext().getRequestDispatcher("/error.jsp").forward(request, response);
            return;
        }
        File appFile = null;
        try {
            appFile = RequestFacadeImpl.upload(request);
        } catch (SocketTimeoutException ste) {
            LOG.severe(ste.getMessage());
            response.sendError(HttpServletResponse.SC_REQUEST_TIMEOUT);
            return;
        }
        if (appFile == null) {
            String msg = "UploadServlet.doPost: no data submitted";
            LOG.warning(msg);
            request.setAttribute("error", msg);
            getServletContext().getRequestDispatcher("/error.jsp").forward(request, response);
            return;
        }
        LogsManager.getDefault().addLog(appFile, getIP(request));
        String id = appFile.getName().split("\\.")[0];
        request.setAttribute("redirect", Boolean.TRUE);
        request.setAttribute("id", id);
        LOG.finer("sending response id:" + id);
        request.getRequestDispatcher("/uploadredirect.jsp").forward(request, response);
    }

    protected String getIP(HttpServletRequest request) {
        String headerIP = request.getHeader("x-forwarded-for");
        if (headerIP == null) {
            return request.getRemoteHost();
        }
        if (headerIP != null) {
            String[] array = headerIP.split(",");
            if (array.length > 1) {
                headerIP = array[array.length - 1].trim();
            }
        }
        return headerIP;
    }

    /** Handles the HTTP <code>GET</code> method.
     * @param request servlet request
     * @param response servlet response
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /** Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        processRequest(request, response);
    }

    /** Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Uploads Logs Generated By UI Logger - http://logger.netbeans.org/welcome/";
    }
}
