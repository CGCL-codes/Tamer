package geneticpolyimage;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.jfree.ui.RectangleInsets;

/**
 * Class GuiSolver provide a graphical user interface for the solver
 * 
 * @author igor & mattia
 */
public class GuiSolver extends javax.swing.JFrame implements Runnable {

    Solver solver = null;

    Thread runner = null;

    Problem problem = null;

    boolean done = false;

    long starttime;

    ImageShow imgshow = new ImageShow();

    private String imagespath;

    /** Creates new form GuiSolver */
    public GuiSolver() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception ed) {
            ed.printStackTrace();
        }
        initComponents();
        jTextField1.setText(System.getProperty("user.home"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jButtonStart = new javax.swing.JButton();
        jButtonStop = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinnerDie = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerMut = new javax.swing.JSpinner();
        jSpinnerCross = new javax.swing.JSpinner();
        jSpinnerPop = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jButtonBrowse = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerSelection = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerCrossrate = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinnerPoly = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jSpinnerVertex = new javax.swing.JSpinner();
        jCheckBoxSaveBests = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Genetic Poly Image");
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Fitness"));
        jPanel1.setPreferredSize(new java.awt.Dimension(520, 320));
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 402, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 411, Short.MAX_VALUE));
        jButtonStart.setText("Start");
        jButtonStart.setEnabled(false);
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });
        jButtonStop.setText("Stop");
        jButtonStop.setEnabled(false);
        jButtonStop.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStopActionPerformed(evt);
            }
        });
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));
        jLabel1.setText("Population Size");
        jSpinnerDie.setModel(new javax.swing.SpinnerNumberModel(25, 0, 50, 1));
        jLabel2.setText("Die Rate (%)");
        jLabel3.setText("Mutation Rate");
        jLabel4.setText("Crossover Type");
        jSpinnerMut.setModel(new javax.swing.SpinnerNumberModel(0.2d, 0.0d, 1.0d, 0.01d));
        jSpinnerMut.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMutStateChanged(evt);
            }
        });
        jSpinnerCross.setModel(new javax.swing.SpinnerListModel(new String[] { "Map", "Single Point" }));
        jSpinnerPop.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(100), Integer.valueOf(10), null, Integer.valueOf(10)));
        jTextField1.setEnabled(false);
        jButtonBrowse.setText("Browse...");
        jButtonBrowse.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseActionPerformed(evt);
            }
        });
        jLabel5.setText("Select target image");
        jLabel6.setText("Selection Method");
        jSpinnerSelection.setModel(new javax.swing.SpinnerListModel(new String[] { "Roulette Wheel", "Rank" }));
        jLabel7.setText("Crossover Rate");
        jSpinnerCrossrate.setModel(new javax.swing.SpinnerNumberModel(0.95d, 0.0d, 1.0d, 0.01d));
        jSpinnerCrossrate.addChangeListener(new javax.swing.event.ChangeListener() {

            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerCrossrateStateChanged(evt);
            }
        });
        jLabel9.setText("Polygons Num.");
        jSpinnerPoly.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(50), Integer.valueOf(1), null, Integer.valueOf(10)));
        jLabel10.setText("Vertix Number");
        jSpinnerVertex.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(3), null, Integer.valueOf(10)));
        jCheckBoxSaveBests.setText("Save best images");
        jCheckBoxSaveBests.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSaveBestsActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jCheckBoxSaveBests, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE).addComponent(jLabel5).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jButtonBrowse)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addGap(13, 13, 13).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel2).addComponent(jLabel1).addComponent(jLabel3)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSpinnerMut, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE).addComponent(jSpinnerPop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE).addComponent(jSpinnerDie, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(13, 13, 13).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel4).addGap(1, 1, 1)).addComponent(jLabel7))).addComponent(jLabel6)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSpinnerSelection, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE).addComponent(jSpinnerCross, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE).addComponent(jSpinnerCrossrate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))).addGroup(jPanel2Layout.createSequentialGroup().addGap(16, 16, 16).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel10).addComponent(jLabel9)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jSpinnerVertex, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE).addComponent(jSpinnerPoly, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)))).addContainerGap()));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jButtonBrowse)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jCheckBoxSaveBests).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerPop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerPoly, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel9)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerVertex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jSpinnerDie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerMut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerCrossrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerCross, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jSpinnerSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6)).addGap(33, 33, 33)));
        jLabel8.setText("Elapsed Time:");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jLabel8).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(layout.createSequentialGroup().addComponent(jButtonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE).addComponent(jButtonStop, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel8).addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButtonStart).addComponent(jButtonStop)))).addContainerGap()));
        pack();
    }

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {
        starttime = System.currentTimeMillis();
        int crossType = 0;
        int selType = 0;
        String imgpath = null;
        if (jSpinnerCross.getValue().equals("Map")) {
            crossType = 1;
        } else {
            crossType = 0;
        }
        if (jSpinnerSelection.getValue().equals("Random")) {
            selType = 0;
        } else if (jSpinnerSelection.getValue().equals("Rank")) {
            selType = 1;
        } else if (jSpinnerSelection.getValue().equals("Roulette Wheel")) {
            selType = 2;
        }
        if (jCheckBoxSaveBests.isSelected()) {
            imgpath = imagespath;
        }
        if (problem.done) {
            this.jCheckBoxSaveBests.setEnabled(false);
            this.jButtonStart.setEnabled(false);
            this.jButtonBrowse.setEnabled(false);
            this.jButtonStop.setEnabled(true);
            solver = new Solver(problem, imgpath, (Integer) ((Integer) jSpinnerPop.getValue() / 10) * 10, (Integer) jSpinnerPoly.getValue(), (Integer) jSpinnerVertex.getValue(), (Double) jSpinnerMut.getValue(), crossType, (Integer) jSpinnerDie.getValue(), selType, (Double) jSpinnerCrossrate.getValue());
            solver.start();
            runner = new Thread(this);
            runner.start();
            imgshow.setVisible(true);
        } else {
        }
    }

    private void jButtonBrowseActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fc = new JFileChooser(jTextField1.getText());
        int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            this.jTextField1.setText(fc.getSelectedFile().getAbsolutePath());
            try {
                problem = new Problem(fc.getSelectedFile().getAbsolutePath());
                ImageIcon icon = new ImageIcon(fc.getSelectedFile().getAbsolutePath());
                JLabel label = new JLabel();
                label.setIcon(icon);
                imgshow.printTargetImage(icon);
                jButtonStart.setEnabled(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Unable to load target image.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void jButtonStopActionPerformed(java.awt.event.ActionEvent evt) {
        this.done();
        solver.done();
        this.jCheckBoxSaveBests.setEnabled(true);
        this.jButtonStart.setEnabled(true);
        this.jButtonBrowse.setEnabled(true);
        this.jButtonStop.setEnabled(false);
    }

    private void jSpinnerMutStateChanged(javax.swing.event.ChangeEvent evt) {
        if (solver != null) {
            solver.setMutRate((Double) jSpinnerMut.getValue());
        }
    }

    private void jSpinnerCrossrateStateChanged(javax.swing.event.ChangeEvent evt) {
        if (solver != null) {
            solver.setCrossRate((Double) jSpinnerCrossrate.getValue());
        }
    }

    private void jCheckBoxSaveBestsActionPerformed(java.awt.event.ActionEvent evt) {
        if (jCheckBoxSaveBests.isSelected()) {
            JFileChooser fc = new JFileChooser(jTextField1.getText());
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int returnVal = fc.showOpenDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                imagespath = fc.getSelectedFile().getAbsolutePath();
            } else {
                jCheckBoxSaveBests.setSelected(false);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GuiSolver().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButtonBrowse;

    private javax.swing.JButton jButtonStart;

    private javax.swing.JButton jButtonStop;

    private javax.swing.JCheckBox jCheckBoxSaveBests;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel10;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JLabel jLabel8;

    private javax.swing.JLabel jLabel9;

    private javax.swing.JLabel jLabelTime;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JSpinner jSpinnerCross;

    private javax.swing.JSpinner jSpinnerCrossrate;

    private javax.swing.JSpinner jSpinnerDie;

    private javax.swing.JSpinner jSpinnerMut;

    private javax.swing.JSpinner jSpinnerPoly;

    private javax.swing.JSpinner jSpinnerPop;

    private javax.swing.JSpinner jSpinnerSelection;

    private javax.swing.JSpinner jSpinnerVertex;

    private javax.swing.JTextField jTextField1;

    private void done() {
        done = true;
    }

    /**
     * Thread started to manage polling of current status
     * and update the GUI
     */
    public void run() {
        Status status = solver.getStatus();
        boolean solved = status.solved;
        Vector<Status> statuss = new Vector<Status>();
        int lastgen = 0;
        while (!done) {
            status = solver.getStatus();
            if ((status.generation > lastgen)) {
                int secs = (int) ((System.currentTimeMillis() - starttime) / 1000);
                int hours = secs / 3600, remainder = secs % 3600, minutes = remainder / 60, seconds = remainder % 60;
                String disHour = (hours < 10 ? "0" : "") + hours, disMinu = (minutes < 10 ? "0" : "") + minutes, disSec = (seconds < 10 ? "0" : "") + seconds;
                jLabelTime.setText(disHour + ":" + disMinu + ":" + disSec);
                solved = status.solved;
                statuss.add(status);
                while (statuss.size() > 100) {
                    statuss.remove(0);
                }
                XYSeries maxFitness = new XYSeries("Max Fitness");
                XYSeries minFitness = new XYSeries("Min Fitness");
                XYSeries meanFitness = new XYSeries("Mean Fitness");
                Iterator<Status> iter = statuss.iterator();
                int i = 0;
                while (iter.hasNext()) {
                    i++;
                    status = iter.next();
                    maxFitness.add(status.generation, status.maxFitness);
                    minFitness.add(status.generation, status.minFitness);
                    meanFitness.add(status.generation, status.meanFitness);
                }
                XYSeriesCollection xyseriescollection = new XYSeriesCollection();
                xyseriescollection.addSeries(maxFitness);
                xyseriescollection.addSeries(minFitness);
                xyseriescollection.addSeries(meanFitness);
                JFreeChart chart = ChartFactory.createXYLineChart("Fitness vs Generations", "Generations", "Fitness", xyseriescollection, PlotOrientation.VERTICAL, true, true, false);
                XYPlot xyplot = (XYPlot) chart.getPlot();
                xyplot.setBackgroundPaint(Color.white);
                xyplot.setAxisOffset(new RectangleInsets(5D, 5D, 5D, 5D));
                XYLineAndShapeRenderer xylineandshaperenderer = (XYLineAndShapeRenderer) xyplot.getRenderer();
                xylineandshaperenderer.setSeriesShapesVisible(0, false);
                xylineandshaperenderer.setSeriesPaint(0, Color.BLUE);
                xylineandshaperenderer.setSeriesShapesVisible(0, false);
                xylineandshaperenderer.setSeriesPaint(0, Color.RED);
                xylineandshaperenderer.setSeriesShapesVisible(0, false);
                xylineandshaperenderer.setSeriesPaint(0, Color.GREEN);
                NumberAxis numberaxis = (NumberAxis) xyplot.getRangeAxis();
                numberaxis.setAutoRangeIncludesZero(false);
                numberaxis.setStandardTickUnits(NumberAxis.createStandardTickUnits());
                final ChartPanel chartPanel = new ChartPanel(chart);
                chartPanel.setPreferredSize(new java.awt.Dimension(510, 310));
                chartPanel.setBorder(BorderFactory.createLoweredBevelBorder());
                jPanel1.setLayout(new BorderLayout());
                jPanel1.removeAll();
                jPanel1.add(chartPanel, BorderLayout.CENTER);
                jPanel1.validate();
                jPanel1.repaint();
                if (status.thebest != null) {
                    BufferedImage image = status.thebest.getImage();
                    imgshow.printBestImage(image);
                    imgshow.printDiffImage(problem.diffimage(status.thebest));
                    imgshow.pack();
                    imgshow.repaint();
                    this.setIconImage(image);
                }
                lastgen = status.generation;
            }
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                Logger.getLogger(GuiSolver.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        jButtonStart.setEnabled(true);
        jButtonBrowse.setEnabled(true);
        jButtonStop.setEnabled(false);
        done = false;
        runner = null;
    }
}
