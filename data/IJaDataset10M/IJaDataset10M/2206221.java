package omoikane.formularios;

import javax.swing.*;
import java.awt.*;
import java.awt.image.*;
import java.awt.event.*;
import javax.swing.table.*;
import javax.swing.event.*;
import omoikane.sistema.*;
import java.text.*;
import java.util.Calendar;

/**
 * @author Octavio
 */
public class MovimientosAlmacen extends javax.swing.JInternalFrame {

    BufferedImage fondo;

    /** Creates new form MovimientosAlmacen */
    public MovimientosAlmacen() {
        initComponents();
        programarShortcuts();
        this.setOpaque(false);
        ((JPanel) this.getContentPane()).setOpaque(false);
        this.getLayeredPane().setOpaque(false);
        this.getRootPane().setOpaque(false);
        this.generarFondo(this);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension labelSize = this.getPreferredSize();
        Herramientas.centrarVentana(this);
        Calendar calendario = Calendar.getInstance();
        txtFechaHasta.setDate(calendario.getTime());
        calendario.add(Calendar.DAY_OF_MONTH, -30);
        txtFechaDesde.setDate(calendario.getTime());
    }

    public void resetTable() {
        String fechaDesde = "";
        String fechaHasta = "";
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        if (this.txtFechaDesde.getDate() != null || this.txtFechaHasta.getDate() != null) {
            try {
                fechaDesde = sdf.format(this.txtFechaDesde.getDate());
                fechaHasta = sdf.format(this.txtFechaHasta.getDate());
            } catch (Exception e) {
                omoikane.sistema.Dialogos.lanzarDialogoError(null, "Error en el registro: Fecha inválida", omoikane.sistema.Herramientas.getStackTraceString(e));
            }
        }
        String[] columnas = { "Fecha", "ID Movimiento", "Folio", "Almacen", "Descripción", "Tipo", "Monto" };
        this.movimientos.setModel(new DefaultTableModel() {

            boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        ((DefaultTableModel) this.movimientos.getModel()).setColumnIdentifiers(columnas);
        omoikane.principal.Almacenes.poblarMovimientos(this.movimientos, this.txtBusqueda.getText(), fechaDesde, fechaHasta);
    }

    public JTable getTablaMovimientos() {
        return movimientos;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnFiltrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        movimientos = new javax.swing.JTable();
        btnDetalles = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnCerrar = new javax.swing.JButton();
        txtFechaDesde = new org.jdesktop.swingx.JXDatePicker();
        txtFechaHasta = new org.jdesktop.swingx.JXDatePicker();
        jProgressBar1 = new javax.swing.JProgressBar();
        setTitle("Movimientos del almacén");
        addFocusListener(new java.awt.event.FocusAdapter() {

            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jLabel2.setFont(new java.awt.Font("Arial", 1, 36));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Movimientos del almacén");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 30));
        txtBusqueda.setFont(new java.awt.Font("Arial", 0, 14));
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {

            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });
        getContentPane().add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 310, 30));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Desde:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, -1, 30));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 14));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Hasta:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 60, -1, 30));
        btnFiltrar.setFont(new java.awt.Font("Arial", 0, 14));
        btnFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/16x16/search.png")));
        btnFiltrar.setText("Filtrar [enter]");
        btnFiltrar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnFiltrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 60, 160, 30));
        movimientos.setFont(new java.awt.Font("Arial", 0, 14));
        movimientos.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] { "Fecha", "ID Movimiento", "Folio", "Almacen", "Descripción", "Tipo", "Monto" }) {

            boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        movimientos.setFocusable(false);
        movimientos.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(movimientos);
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 920, 310));
        btnDetalles.setFont(new java.awt.Font("Arial", 0, 14));
        btnDetalles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/64x64/page_search.png")));
        btnDetalles.setText("<html><center>Detalles [F4]</center></html>");
        btnDetalles.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetallesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDetalles, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 450, 180, 60));
        btnNuevo.setFont(new java.awt.Font("Arial", 0, 14));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/64x64/page_add.png")));
        btnNuevo.setText("<html><center>Nuevo <br>Movimiento[F5]</center></html>");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 450, 200, 60));
        btnModificar.setFont(new java.awt.Font("Arial", 0, 14));
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/64x64/page_edit.png")));
        btnModificar.setText("<html><center>Modificar o eliminar [F6]</center></html>");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, 190, 60));
        btnImprimir.setFont(new java.awt.Font("Arial", 0, 14));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/64x64/printer.png")));
        btnImprimir.setText("<html><center>Imprimir [F7]</center></html>");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, 160, 60));
        jPanel1.setOpaque(false);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 10, Short.MAX_VALUE));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 10, Short.MAX_VALUE));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 510, 10, 10));
        btnCerrar.setFont(new java.awt.Font("Arial", 0, 14));
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/64x64/back.png")));
        btnCerrar.setText("<HTML>Regresar a menú [Esc]</HTML>");
        btnCerrar.setRequestFocusEnabled(false);
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 230, 40));
        txtFechaDesde.setFont(new java.awt.Font("Arial", 0, 10));
        txtFechaDesde.setFormats(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM));
        getContentPane().add(txtFechaDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 120, 30));
        txtFechaHasta.setFont(new java.awt.Font("Arial", 0, 10));
        txtFechaHasta.setFormats(java.text.DateFormat.getDateInstance(java.text.DateFormat.MEDIUM));
        getContentPane().add(txtFechaHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 60, 120, 30));
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 920, 20));
        pack();
    }

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
        ((javax.swing.JInternalFrame) ((omoikane.principal.MenuPrincipal) omoikane.principal.Principal.getMenuPrincipal()).getMenuPrincipal()).requestFocusInWindow();
    }

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {
        JInternalFrame wnd = (JInternalFrame) omoikane.principal.Almacenes.lanzarNuevoMovimiento();
        wnd.addInternalFrameListener(iframeAdapter);
    }

    private void btnDetallesActionPerformed(java.awt.event.ActionEvent evt) {
        int sel = this.movimientos.getSelectedRow();
        int id;
        if (sel == -1) {
            Dialogos.lanzarAlerta("Ningúna fila ha sido seleccionada.");
        } else {
            id = (Integer) this.movimientos.getValueAt(sel, 1);
            JInternalFrame wnd = (JInternalFrame) omoikane.principal.Almacenes.lanzarDetallesMovimiento(id);
            wnd.addInternalFrameListener(iframeAdapter);
        }
    }

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {
        omoikane.principal.Almacenes.lanzarImprimirMovimientos();
    }

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {
        Dialogos.lanzarAlerta("Los movimientos de almacén no pueden ser modificados, en caso de error o cambios hacer un nuevo movimiento que contrarreste este movimiento.");
    }

    private void btnFiltrarActionPerformed(java.awt.event.ActionEvent evt) {
        this.resetTable();
    }

    private void formFocusGained(java.awt.event.FocusEvent evt) {
        this.txtBusqueda.requestFocusInWindow();
    }

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == evt.VK_DOWN) {
            int sigFila = movimientos.getSelectedRow() + 1;
            if (sigFila < movimientos.getRowCount()) {
                this.movimientos.setRowSelectionInterval(sigFila, sigFila);
                this.movimientos.scrollRectToVisible(movimientos.getCellRect(sigFila, 1, true));
            }
        }
        if (evt.getKeyCode() == evt.VK_UP) {
            int antFila = movimientos.getSelectedRow() - 1;
            if (antFila >= 0) {
                this.movimientos.setRowSelectionInterval(antFila, antFila);
                this.movimientos.scrollRectToVisible(movimientos.getCellRect(antFila, 1, true));
            }
        }
        if (evt.getKeyCode() == evt.VK_PAGE_DOWN) {
            int nFilas = (int) this.jScrollPane1.getViewportBorderBounds().getHeight() / movimientos.getRowHeight();
            int sigFila = movimientos.getSelectedRow() + nFilas;
            if (sigFila > movimientos.getRowCount()) {
                sigFila = movimientos.getRowCount() - 1;
            }
            if (sigFila < movimientos.getRowCount()) {
                this.movimientos.setRowSelectionInterval(sigFila, sigFila);
                this.movimientos.scrollRectToVisible(movimientos.getCellRect(sigFila, 1, true));
            }
        }
        if (evt.getKeyCode() == evt.VK_PAGE_UP) {
            int nFilas = (int) this.jScrollPane1.getViewportBorderBounds().getHeight() / movimientos.getRowHeight();
            int antFila = movimientos.getSelectedRow() - nFilas;
            if (antFila < 0) {
                antFila = 0;
            }
            this.movimientos.setRowSelectionInterval(antFila, antFila);
            this.movimientos.scrollRectToVisible(movimientos.getCellRect(antFila, 1, true));
        }
    }

    public void programarShortcuts() {
        Action cerrar = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnCerrar.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cerrar");
        getActionMap().put("cerrar", cerrar);
        txtBusqueda.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "cerrar");
        txtBusqueda.getActionMap().put("cerrar", cerrar);
        Action buscar = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                txtBusqueda.requestFocusInWindow();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0), "buscar");
        getActionMap().put("buscar", buscar);
        Action detalles = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnDetalles.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), "detalles");
        getActionMap().put("detalles", detalles);
        Action nuevo = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnNuevo.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0), "nuevo");
        getActionMap().put("nuevo", nuevo);
        Action modificar = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnModificar.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F6, 0), "modificar");
        getActionMap().put("modificar", modificar);
        Action imprimir = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnImprimir.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0), "imprimir");
        getActionMap().put("imprimir", imprimir);
        Action filtrar = new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnFiltrar.doClick();
            }
        };
        getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "filtrar");
        getActionMap().put("filtrar", filtrar);
    }

    public void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        g2d.drawImage(fondo, 0, 0, null);
    }

    public void generarFondo(Component componente) {
        Rectangle areaDibujo = this.getBounds();
        BufferedImage tmp;
        GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
        tmp = gc.createCompatibleImage(areaDibujo.width, areaDibujo.height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) tmp.getGraphics();
        g2d.setColor(new Color(55, 55, 255, 165));
        g2d.fillRect(0, 0, areaDibujo.width, areaDibujo.height);
        fondo = tmp;
    }

    private javax.swing.JButton btnCerrar;

    private javax.swing.JButton btnDetalles;

    private javax.swing.JButton btnFiltrar;

    private javax.swing.JButton btnImprimir;

    private javax.swing.JButton btnModificar;

    private javax.swing.JButton btnNuevo;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JPanel jPanel1;

    public javax.swing.JProgressBar jProgressBar1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable movimientos;

    public javax.swing.JTextField txtBusqueda;

    private org.jdesktop.swingx.JXDatePicker txtFechaDesde;

    private org.jdesktop.swingx.JXDatePicker txtFechaHasta;

    public InternalFrameAdapter iframeAdapter = new InternalFrameAdapter() {

        public void internalFrameClosed(InternalFrameEvent e) {
            resetTable();
            requestFocusInWindow();
        }
    };
}
