package jmash;

import com.toedter.calendar.JDateChooserCellEditor;
import java.awt.Component;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import jmash.tableModel.HopBuyTableModel;
import jmash.tableModel.MaltBuyTableModel;
import org.jdom.Document;
import org.jdom.Element;

/**
 *
 * @author  AChiari
 */
public class Acquisto extends javax.swing.JInternalFrame {

    private static SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy");

    public static Acquisto buildFRMInventario() {
        Acquisto frm = new Acquisto();
        frm.readInventarioFromXML();
        return frm;
    }

    public static Acquisto newAcquisto() {
        Acquisto frm = new Acquisto();
        return frm;
    }

    private Acquisto() {
        initComponents();
        setBorder(Utils.getDefaultBorder());
        tblHops.setDefaultEditor(Date.class, new JDateChooserCellEditor());
        tblMalts.setDefaultEditor(Date.class, new JDateChooserCellEditor());
        this.tblHops.getColumnModel().getColumn(7).setCellEditor(new JDateChooserCellEditor());
        this.tblMalts.getColumnModel().getColumn(8).setCellEditor(new JDateChooserCellEditor());
        this.tblHops.getColumnModel().getColumn(7).setCellRenderer(new DefaultTableCellRenderer() {

            JLabel label = new JLabel("");

            public Component getTableCellRendererComponent(JTable tblDataTable, Object value, boolean isSelected, boolean hasFocus, int markedRow, int col) {
                if (markedRow >= 0 && hopTableModel.getRow(markedRow).getDataAcquisto() != null) label.setText(dateFormat.format(hopTableModel.getRow(markedRow).getDataAcquisto())); else label.setText("");
                return label;
            }
        });
        this.tblMalts.getColumnModel().getColumn(8).setCellRenderer(new DefaultTableCellRenderer() {

            JLabel label = new JLabel("");

            public Component getTableCellRendererComponent(JTable tblDataTable, Object value, boolean isSelected, boolean hasFocus, int markedRow, int col) {
                if (markedRow >= 0 && maltTableModel.getRow(markedRow).getDataAcquisto() != null) label.setText(dateFormat.format(maltTableModel.getRow(markedRow).getDataAcquisto())); else label.setText("");
                return label;
            }
        });
        this.tblHops.getColumnModel().getColumn(3).setCellEditor(new jmash.component.JSpinnerEditor(XmlTags.UNITA_PESO));
        this.tblHops.getColumnModel().getColumn(4).setCellEditor(new jmash.component.JSpinnerEditor(XmlTags.HOP_FORMS));
        tblMalts.getColumnModel().getColumn(3).setCellEditor(new jmash.component.JSpinnerEditor(XmlTags.UNITA_PESO));
        tblMalts.getColumnModel().getColumn(5).setCellEditor(new jmash.component.JSpinnerEditor(XmlTags.MALT_FORMS));
        tblMalts.getColumnModel().getColumn(0).setPreferredWidth(32);
        tblHops.getColumnModel().getColumn(0).setPreferredWidth(32);
        this.tblHops.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable tblDataTable, Object value, boolean isSelected, boolean hasFocus, int markedRow, int col) {
                return (JLabel) tblHops.getValueAt(markedRow, 0);
            }
        });
        this.tblMalts.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {

            public Component getTableCellRendererComponent(JTable tblDataTable, Object value, boolean isSelected, boolean hasFocus, int markedRow, int col) {
                return (JLabel) tblMalts.getValueAt(markedRow, 0);
            }
        });
        btnNewActionPerformed(null);
    }

    public void readInventarioFromXML() {
        btnNew.setVisible(false);
        btnOpen.setVisible(false);
        btnInventario.setVisible(false);
        jPanel3.setVisible(false);
        file = new File(Main.inventarioXML);
        try {
            read(file);
        } catch (Exception ex) {
            Utils.showException(ex);
        }
    }

    private HopBuyTableModel hopTableModel = new HopBuyTableModel();

    private Picker hopPicker = new Picker(Gui.hopPickerTableModel);

    ;

    private MaltBuyTableModel maltTableModel = new MaltBuyTableModel();

    private MaltTypePicker maltPicker = new MaltTypePicker();

    ;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        jToolBar1 = new javax.swing.JToolBar();
        btnNew = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnInventario = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fldDate = new com.toedter.calendar.JDateChooser();
        fldDes = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMalts = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        addMalt = new javax.swing.JButton();
        remMalt1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHops = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        addHop = new javax.swing.JButton();
        remMalt = new javax.swing.JButton();
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Dati acquisto");
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/filenew.png")));
        btnNew.setToolTipText(java.util.ResourceBundle.getBundle("jmash/lang").getString("Nuovo_acquisto"));
        btnNew.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNew);
        btnOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/fileopen.png")));
        btnOpen.setToolTipText("Apri acquisto");
        btnOpen.setIconTextGap(0);
        btnOpen.setMaximumSize(new java.awt.Dimension(37, 35));
        btnOpen.setMinimumSize(new java.awt.Dimension(37, 35));
        btnOpen.setPreferredSize(new java.awt.Dimension(37, 35));
        btnOpen.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOpen);
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/filesave.png")));
        btnSave.setToolTipText("Salva acquisto");
        btnSave.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);
        btnInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/editpaste.png")));
        btnInventario.setToolTipText("Copia nell'inventario");
        btnInventario.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventarioActionPerformed(evt);
            }
        });
        jToolBar1.add(btnInventario);
        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);
        jPanel6.setLayout(new java.awt.BorderLayout());
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Acquisto"));
        jLabel1.setText("Data ");
        jLabel2.setText("Nome");
        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jPanel3Layout.createSequentialGroup().addContainerGap().add(jLabel2).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(fldDes, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jLabel1).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(fldDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jPanel3Layout.createSequentialGroup().add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE).add(jLabel2).add(jLabel1).add(fldDes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).add(fldDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)).addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel6.add(jPanel3, java.awt.BorderLayout.NORTH);
        jPanel2.setLayout(new java.awt.BorderLayout());
        jScrollPane2.setMinimumSize(new java.awt.Dimension(100, 100));
        tblMalts.setModel(maltTableModel);
        jScrollPane2.setViewportView(tblMalts);
        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);
        jPanel5.setLayout(new java.awt.GridBagLayout());
        jPanel5.setPreferredSize(new java.awt.Dimension(40, 100));
        addMalt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edit_add.png")));
        addMalt.setIconTextGap(0);
        addMalt.setMaximumSize(new java.awt.Dimension(36, 36));
        addMalt.setMinimumSize(new java.awt.Dimension(36, 36));
        addMalt.setPreferredSize(new java.awt.Dimension(36, 36));
        addMalt.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaltActionPerformed(evt);
            }
        });
        jPanel5.add(addMalt, new java.awt.GridBagConstraints());
        remMalt1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edittrash.png")));
        remMalt1.setIconTextGap(0);
        remMalt1.setMaximumSize(new java.awt.Dimension(36, 36));
        remMalt1.setMinimumSize(new java.awt.Dimension(36, 36));
        remMalt1.setPreferredSize(new java.awt.Dimension(36, 36));
        remMalt1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remMalt1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(28, 0, 0, 0);
        jPanel5.add(remMalt1, gridBagConstraints);
        jPanel2.add(jPanel5, java.awt.BorderLayout.WEST);
        jTabbedPane1.addTab("Malti", jPanel2);
        jPanel1.setLayout(new java.awt.BorderLayout());
        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 100));
        tblHops.setModel(hopTableModel);
        jScrollPane1.setViewportView(tblHops);
        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);
        jPanel4.setLayout(new java.awt.GridBagLayout());
        jPanel4.setPreferredSize(new java.awt.Dimension(40, 100));
        addHop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edit_add.png")));
        addHop.setIconTextGap(0);
        addHop.setMaximumSize(new java.awt.Dimension(36, 36));
        addHop.setMinimumSize(new java.awt.Dimension(36, 36));
        addHop.setPreferredSize(new java.awt.Dimension(36, 36));
        addHop.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHopActionPerformed(evt);
            }
        });
        jPanel4.add(addHop, new java.awt.GridBagConstraints());
        remMalt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jmash/images/edittrash.png")));
        remMalt.setIconTextGap(0);
        remMalt.setMaximumSize(new java.awt.Dimension(36, 36));
        remMalt.setMinimumSize(new java.awt.Dimension(36, 36));
        remMalt.setPreferredSize(new java.awt.Dimension(36, 36));
        remMalt.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remMaltActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(28, 0, 0, 0);
        jPanel4.add(remMalt, gridBagConstraints);
        jPanel1.add(jPanel4, java.awt.BorderLayout.WEST);
        jTabbedPane1.addTab("Luppoli e altro", jPanel1);
        jPanel6.add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanel6, java.awt.BorderLayout.CENTER);
        pack();
    }

    private void btnInventarioActionPerformed(java.awt.event.ActionEvent evt) {
        inventario();
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {
        save();
    }

    private File file = null;

    public void save() {
        if (this.file == null) {
            this.file = Utils.pickFileToSave(this, Main.recipeDir);
        }
        if (this.file == null) return;
        AcquistoIngredienti obj = new AcquistoIngredienti();
        obj.setLuppoli(hopTableModel.getRows());
        obj.setMalti(maltTableModel.getRows());
        obj.setDes(fldDes.getText());
        obj.setData(fldDate.getDate());
        Document doc = obj.toXml();
        Utils.saveXmlAsFile(doc, file, this);
        setTitle(this.file.getName());
    }

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {
        File file = Utils.pickFileToLoad(new JInternalFrame(), Main.shoppingDir);
        try {
            read(file);
        } catch (Exception ex) {
            Utils.showException(ex);
        }
    }

    public void read(File file) throws Exception {
        if (file != null) {
            btnNewActionPerformed(null);
            Document doc = Utils.readFileAsXml(file.toString());
            Element root = doc.getRootElement();
            if (root.getName().compareToIgnoreCase(new AcquistoIngredienti().getClass().getName()) == 0) {
                this.file = file;
                setTitle(this.file.getName());
                AcquistoIngredienti acquistoIngredienti = AcquistoIngredienti.fromXml(root);
                fldDate.setDate(acquistoIngredienti.getData());
                fldDes.setText(acquistoIngredienti.getDes());
                for (Object obj : root.getChildren()) {
                    Element elem = (Element) obj;
                    if (elem.getName().compareToIgnoreCase(new Hop().getClass().getName()) == 0) {
                        hopTableModel.addRow(Hop.fromXml(elem));
                    }
                    if (elem.getName().compareToIgnoreCase(new Malt().getClass().getName()) == 0) {
                        maltTableModel.addRow(Malt.fromXml(elem));
                    }
                }
            } else {
                Msg.showMsg("Il file non e' una lista della spesa Hobbybrew!", this);
            }
        }
    }

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {
        hopTableModel.clear();
        maltTableModel.clear();
        fldDes.setText("");
        fldDate.setDate(null);
        this.file = null;
        setTitle("Nuovo acquisto");
    }

    private void remMalt1ActionPerformed(java.awt.event.ActionEvent evt) {
        int i = this.tblMalts.getSelectedRow();
        this.maltTableModel.remRow(i);
    }

    private void remMaltActionPerformed(java.awt.event.ActionEvent evt) {
        int i = this.tblHops.getSelectedRow();
        this.hopTableModel.remRow(i);
    }

    private void addMaltActionPerformed(java.awt.event.ActionEvent evt) {
        this.maltPicker.startModal(this);
        MaltType type = (MaltType) this.maltPicker.getSelection();
        if (type != null) {
            this.maltTableModel.addRow(new Malt(type));
        }
    }

    private void addHopActionPerformed(java.awt.event.ActionEvent evt) {
        this.hopPicker.startModal(this);
        HopType type = (HopType) this.hopPicker.getSelection();
        if (type != null) {
            this.hopTableModel.addRow(new Hop(new Ricetta(), type));
        }
    }

    private javax.swing.JButton addHop;

    private javax.swing.JButton addMalt;

    private javax.swing.JButton btnInventario;

    private javax.swing.JButton btnNew;

    private javax.swing.JButton btnOpen;

    private javax.swing.JButton btnSave;

    private com.toedter.calendar.JDateChooser fldDate;

    private javax.swing.JTextField fldDes;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JPanel jPanel4;

    private javax.swing.JPanel jPanel5;

    private javax.swing.JPanel jPanel6;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JTabbedPane jTabbedPane1;

    private javax.swing.JToolBar jToolBar1;

    private javax.swing.JButton remMalt;

    private javax.swing.JButton remMalt1;

    private javax.swing.JTable tblHops;

    private javax.swing.JTable tblMalts;

    public void inventario() {
        Acquisto acquisto = Acquisto.buildFRMInventario();
        acquisto.addRows(maltTableModel.getRows(), hopTableModel.getRows(), fldDate.getDate());
        Main.gui.addFrame(acquisto);
    }

    public void addRows(List<Malt> malts, List<Hop> hops, Date dataRif) {
        for (Malt m : malts) {
            if (m.getDataAcquisto() == null) m.setDataAcquisto(dataRif);
            maltTableModel.addRow(m.fromXml(m.toXml()));
        }
        for (Hop h : hops) {
            if (h.getDataAcquisto() == null) h.setDataAcquisto(dataRif);
            hopTableModel.addRow(h.fromXml(h.toXml()));
        }
    }

    public List<Malt> getMalts() {
        return maltTableModel.getRows();
    }

    public List<Hop> getHops() {
        return hopTableModel.getRows();
    }

    public List<Malt> getMalts(String des) {
        List<Malt> list = new ArrayList<Malt>();
        for (Malt m : maltTableModel.getRows()) {
            if (m.getNome().equalsIgnoreCase(des)) list.add(m.fromXml(m.toXml()));
        }
        return list;
    }

    public List<Hop> getHops(String des) {
        List<Hop> list = new ArrayList<Hop>();
        for (Hop m : hopTableModel.getRows()) {
            if (m.getNome().equalsIgnoreCase(des)) list.add(m.fromXml(m.toXml()));
        }
        return list;
    }
}
