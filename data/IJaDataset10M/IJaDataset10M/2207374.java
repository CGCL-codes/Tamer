package org.streamlinedsalestax.efile;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.2.8-SNAPSHOT
 * Wed Jun 16 12:51:45 EDT 2010
 * Generated source version: 2.2.8-SNAPSHOT
 * 
 */
@WebServiceClient(name = "EFileService", wsdlLocation = "file:/C:/gateway/gateway-sstp-state-client/src/main/wsdl/EFileServiceSoap.wsdl", targetNamespace = "http://streamlinedsalestax.org/efile")
public class EFileService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://streamlinedsalestax.org/efile", "EFileService");

    public static final QName EFileServiceSoap = new QName("http://streamlinedsalestax.org/efile", "EFileServiceSoap");

    public String ENDPOINT;

    static {
        URL url = null;
        try {
            url = new URL("classpath:/org/streamlinedsalestax/efile/EFileServiceSoap.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/gateway/gateway-sstp-state-client/src/main/wsdl/EFileServiceSoap.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EFileService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EFileService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EFileService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns EFileServiceSoap
     */
    @WebEndpoint(name = "EFileServiceSoap")
    public EFileServiceSoap getEFileServiceSoap() {
        EFileServiceSoap proxy = super.getPort(EFileServiceSoap, EFileServiceSoap.class);
        ((BindingProvider) proxy).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, this.getENDPOINT());
        return proxy;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EFileServiceSoap
     */
    @WebEndpoint(name = "EFileServiceSoap")
    public EFileServiceSoap getEFileServiceSoap(WebServiceFeature... features) {
        EFileServiceSoap proxy = super.getPort(EFileServiceSoap, EFileServiceSoap.class, features);
        ((BindingProvider) proxy).getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, this.getENDPOINT());
        return proxy;
    }

    public String getENDPOINT() {
        return ENDPOINT;
    }

    public void setENDPOINT(String eNDPOINT) {
        ENDPOINT = eNDPOINT;
    }
}
