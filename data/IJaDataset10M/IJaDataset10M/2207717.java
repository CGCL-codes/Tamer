package PolynomialExpressionGenerator;

/**
 *
 * @author Nicholson.Bill
 */
public class TestForm extends javax.swing.JFrame {

    private PolynomialExpression p, pTmp;

    /** Creates new form TestForm */
    public TestForm() {
        initComponents();
        PolymonialExpressionStyle.setSelectedIndex(0);
        variablePool.setText(PolynomialConfig.getDefaultVariablePool());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        PolymonialExpressionStyle = new javax.swing.JList();
        variablePool = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        simplfiedPolynomialLabel = new javax.swing.JLabel();
        generatePolymonial = new javax.swing.JButton();
        polynomialLabel = new javax.swing.JLabel();
        GenerateTest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Polynomial Generator - Test Form");
        setBounds(new java.awt.Rectangle(0, 0, 500, 500));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {

            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }

            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(null);
        PolymonialExpressionStyle.setModel(new javax.swing.AbstractListModel() {

            String[] strings = { "Single : a", "One by Two : a * ( b + c )", "Two by Two : ( a + b)  * ( c + d )", "binomial", "trinomial", "Free Form : a + b + c + d", " " };

            public int getSize() {
                return strings.length;
            }

            public Object getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane1.setViewportView(PolymonialExpressionStyle);
        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 100, 250, 130);
        variablePool.setText("abcdefghi");
        getContentPane().add(variablePool);
        variablePool.setBounds(100, 240, 53, 20);
        jLabel1.setText("Variable Pool");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 240, 62, 14);
        simplfiedPolynomialLabel.setFont(new java.awt.Font("Courier New", 1, 12));
        simplfiedPolynomialLabel.setText("Simplified Form of Polymonial");
        simplfiedPolynomialLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        getContentPane().add(simplfiedPolynomialLabel);
        simplfiedPolynomialLabel.setBounds(10, 60, 410, 16);
        generatePolymonial.setText("Generate and Simplify");
        generatePolymonial.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePolymonialActionPerformed(evt);
            }
        });
        getContentPane().add(generatePolymonial);
        generatePolymonial.setBounds(10, 10, 170, 23);
        polynomialLabel.setFont(new java.awt.Font("Courier New", 1, 12));
        polynomialLabel.setText("Polymonial");
        polynomialLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        polynomialLabel.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                polynomialLabelMouseClicked(evt);
            }
        });
        getContentPane().add(polynomialLabel);
        polynomialLabel.setBounds(10, 40, 410, 16);
        GenerateTest.setText("Printable Test");
        GenerateTest.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateTestActionPerformed(evt);
            }
        });
        getContentPane().add(GenerateTest);
        GenerateTest.setBounds(10, 270, 160, 23);
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jLabel2.setText("File will be written to c:\\temp\\test.html");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(190, 270, 270, 30);
        pack();
    }

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {
        this.setSize(500, 375);
    }

    private void generatePolymonialActionPerformed(java.awt.event.ActionEvent evt) {
        p = new PolynomialExpression();
        try {
            String str;
            Expression ex;
            int tmpExpressionStyle = PolymonialExpressionStyle.getSelectedIndex() + 1;
            p.setMaxCoefficient(10);
            p.setMinCoefficient(1);
            p.setMaxExponent(3);
            p.setMinExponent(1);
            p.setMinVariablesPerAtom(1);
            p.setMaxVariablesPerAtom(1);
            p.setVariablePool(variablePool.getText());
            switch(tmpExpressionStyle) {
                case 1:
                    p.Create(PolynomialExpression.ExpressionStyle.singleExpression);
                    break;
                case 2:
                    p.Create(PolynomialExpression.ExpressionStyle.oneByTwo);
                    break;
                case 3:
                    p.Create(PolynomialExpression.ExpressionStyle.twoByTwo);
                    break;
                case 4:
                    p.Create(PolynomialExpression.ExpressionStyle.binomial);
                    break;
                case 5:
                    p.Create(PolynomialExpression.ExpressionStyle.trinomial);
                    break;
                case 6:
                    p.Create(PolynomialExpression.ExpressionStyle.freeForm);
                    break;
            }
            str = p.toString();
            polynomialLabel.setText(str);
            pTmp = p.clone();
            str = p.Simplify().toString();
            simplfiedPolynomialLabel.setText(str);
        } catch (Exception ex) {
        }
    }

    private void polynomialLabelMouseClicked(java.awt.event.MouseEvent evt) {
        String str;
        str = pTmp.Simplify().toString();
        simplfiedPolynomialLabel.setText(str);
    }

    private void GenerateTestActionPerformed(java.awt.event.ActionEvent evt) {
        PrintableTest pt = new PrintableTest();
        ReportConfig rc = new ReportConfig();
        try {
            rc.setTotalProblems(10);
            rc.setWhatToPrint(ReportConfig.WhatToPrint.BothCopies);
            PolynomialConfig pc = new PolynomialConfig();
            pc.setMaxCoefficient(10);
            pc.setMinCoefficient(1);
            pc.setMaxExponent(3);
            pc.setMinExponent(1);
            pc.setMinVariablesPerAtom(1);
            pc.setMaxVariablesPerAtom(1);
            pc.setVariablePool(variablePool.getText());
            pc.setExpressionStyle(PolynomialExpression.ExpressionStyle.trinomial);
            pc.setVariablePool("a");
            pc.setSeed(99);
            rc.setFileNameAndPath("c:\\temp\\test.html");
            pt.GeneratePrintableTest(pc, rc);
        } catch (Exception ex) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TestForm().setVisible(true);
            }
        });
    }

    private javax.swing.JButton GenerateTest;

    private javax.swing.JList PolymonialExpressionStyle;

    private javax.swing.JButton generatePolymonial;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JLabel polynomialLabel;

    private javax.swing.JLabel simplfiedPolynomialLabel;

    private javax.swing.JTextField variablePool;
}
