package com.agentfactory.coral.compiler;

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CoralParserConstants {

    /** End of File. */
    int EOF = 0;

    /** RegularExpression Id. */
    int ACTION = 7;

    /** RegularExpression Id. */
    int SENSOR = 8;

    /** RegularExpression Id. */
    int MODULE = 9;

    /** RegularExpression Id. */
    int INCLUDE = 10;

    /** RegularExpression Id. */
    int INITIAL = 11;

    /** RegularExpression Id. */
    int IMPL = 12;

    /** RegularExpression Id. */
    int SEMIC = 13;

    /** RegularExpression Id. */
    int AND = 14;

    /** RegularExpression Id. */
    int NOT = 15;

    /** RegularExpression Id. */
    int ACHIEVE = 16;

    /** RegularExpression Id. */
    int QUERY = 17;

    /** RegularExpression Id. */
    int LBRAC = 18;

    /** RegularExpression Id. */
    int RBRAC = 19;

    /** RegularExpression Id. */
    int PLUS = 20;

    /** RegularExpression Id. */
    int MINUS = 21;

    /** RegularExpression Id. */
    int MULTIPLY = 22;

    /** RegularExpression Id. */
    int DIVIDE = 23;

    /** RegularExpression Id. */
    int COMMA = 24;

    /** RegularExpression Id. */
    int PERIOD = 25;

    /** RegularExpression Id. */
    int COLON = 26;

    /** RegularExpression Id. */
    int FOLLOWS = 27;

    /** RegularExpression Id. */
    int ALBRAC = 28;

    /** RegularExpression Id. */
    int ARBRAC = 29;

    /** RegularExpression Id. */
    int CLBRAC = 30;

    /** RegularExpression Id. */
    int CRBRAC = 31;

    /** RegularExpression Id. */
    int SLBRAC = 32;

    /** RegularExpression Id. */
    int SRBRAC = 33;

    /** RegularExpression Id. */
    int STRING = 34;

    /** RegularExpression Id. */
    int IDENTIFIER = 35;

    /** RegularExpression Id. */
    int VARIABLE = 36;

    /** RegularExpression Id. */
    int LETTER = 37;

    /** RegularExpression Id. */
    int DIGIT = 38;

    /** RegularExpression Id. */
    int PUNCT = 39;

    /** RegularExpression Id. */
    int ADVPUNCT = 40;

    /** Lexical state. */
    int DEFAULT = 0;

    /** Literal token values. */
    String[] tokenImage = { "<EOF>", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "<token of kind 5>", "<token of kind 6>", "\"action\"", "\"sensor\"", "\"module\"", "\"#include\"", "\"initial\"", "\"->\"", "\";\"", "\"&\"", "\"!\"", "\"@\"", "\"$\"", "\"(\"", "\")\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\",\"", "\".\"", "\":\"", "\"<-\"", "\"<\"", "\">\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "<STRING>", "<IDENTIFIER>", "<VARIABLE>", "<LETTER>", "<DIGIT>", "<PUNCT>", "<ADVPUNCT>" };
}
