package com.vainolo.documentmanager.gui;

import com.vainolo.documentmanager.DocumentManagerApp;
import com.vainolo.documentmanager.entities.Category;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Logger;
import javax.swing.ActionMap;
import javax.swing.DropMode;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTree;
import javax.swing.TransferHandler;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;

/**
 *
 * @author Arieh Bibliowicz
 */
public class CategoriesPanel extends javax.swing.JPanel {

    private JPopupMenu popupMenu;

    private TreeModel treeModel;

    private Category lastDropNode;

    private Logger logger = Logger.getLogger(CategoriesPanel.class.getName());

    /** Creates new form CategoriesPanel */
    public CategoriesPanel() {
        treeModel = DocumentManagerApp.getApplication().getCategoriesTreeModel();
        initComponents();
        addPopupMenu();
        categoriesTree.addMouseListener(new ClickListener());
        categoriesTree.setExpandsSelectedPaths(true);
        categoriesTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        categoriesTree.setDropMode(DropMode.ON);
        categoriesTree.setEditable(true);
        categoriesTree.setTransferHandler(new TransferHandler() {

            @Override
            public boolean canImport(TransferSupport support) {
                return true;
            }

            @Override
            public boolean importData(TransferSupport support) {
                try {
                    if (!support.isDrop()) {
                        return false;
                    }
                    JTree.DropLocation location = (JTree.DropLocation) support.getDropLocation();
                    lastDropNode = (Category) location.getPath().getLastPathComponent();
                    DocumentManagerApp.getApplication().handleBookDragAndDrop();
                    return true;
                } catch (Exception e) {
                    e.printStackTrace();
                    return false;
                }
            }
        });
    }

    /**
     * Last node where a drag&drop was done.
     * @return node where the las drag&drop operation was finished.
     */
    public Category getLastDropNode() {
        return lastDropNode;
    }

    /**
     * Return currently selected node.
     * @return the currently selected node. null if no node selected.
     */
    public Category getSelectedNode() {
        TreePath selectionPath = categoriesTree.getSelectionPath();
        if (selectionPath != null) return (Category) selectionPath.getLastPathComponent(); else return null;
    }

    public void addPopupMenu() {
        popupMenu = new JPopupMenu();
        ActionMap actionMap = DocumentManagerApp.getApplication().getContext().getActionMap();
        JMenuItem item = new JMenuItem(actionMap.get("addCategory"));
        popupMenu.add(item);
        item = new JMenuItem(actionMap.get("removeCategory"));
        popupMenu.add(item);
        item = new JMenuItem(actionMap.get("editCategory"));
        popupMenu.add(item);
    }

    public void addCategoriesTreeSelectionListener(TreeSelectionListener listener) {
        categoriesTree.addTreeSelectionListener(listener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        categoriesTree = new javax.swing.JTree(treeModel);
        setName("Form");
        setLayout(new java.awt.BorderLayout());
        jScrollPane1.setName("jScrollPane1");
        categoriesTree.setName("categoriesTree");
        jScrollPane1.setViewportView(categoriesTree);
        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }

    private javax.swing.JTree categoriesTree;

    private javax.swing.JScrollPane jScrollPane1;

    class ClickListener extends MouseAdapter {

        @Override
        public void mouseClicked(MouseEvent e) {
            super.mouseClicked(e);
        }

        @Override
        public void mousePressed(MouseEvent e) {
            super.mousePressed(e);
            if (e.isPopupTrigger()) popupMenu.show(e.getComponent(), e.getX(), e.getY());
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            super.mouseReleased(e);
            if (e.isPopupTrigger()) popupMenu.show(e.getComponent(), e.getX(), e.getY());
        }
    }
}
