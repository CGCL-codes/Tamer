package net.sourceforge.fraglets.targa;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.MediaTracker;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.text.MessageFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import net.sourceforge.fraglets.targa.TGADecoder;

/**
 * A simple TGA image viewer to testdrive the TGADecoder class.
 *
 * <p>This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * <p>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * <p>You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * @author  marion@users.sourceforge.net
 */
public class TGAViewer extends javax.swing.JFrame {

    /** Creates new form Viewer */
    public TGAViewer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        setTitle("Viewer");
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setBorder(new javax.swing.border.EtchedBorder());
        getContentPane().add(jLabel1, java.awt.BorderLayout.CENTER);
        jTextField1.setEditable(false);
        jTextField1.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        getContentPane().add(jTextField1, java.awt.BorderLayout.SOUTH);
        fileMenu.setText("File");
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);
        menuBar.add(fileMenu);
        helpMenu.setText("Help");
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);
        menuBar.add(helpMenu);
        setJMenuBar(menuBar);
        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setSize(new java.awt.Dimension(320, 360));
        setLocation((screenSize.width - 320) / 2, (screenSize.height - 360) / 2);
    }

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        JOptionPane.showMessageDialog(this, MessageFormat.format(aboutText, new Object[] { "TGAViewer", "0.1" }), "About TGAViewer", JOptionPane.INFORMATION_MESSAGE);
    }

    protected JFileChooser chooser = new JFileChooser();

    {
        FileFilter filter = new FileFilter() {

            public String getDescription() {
                return "TARGA images (*.tga)";
            }

            public boolean accept(File file) {
                return file.isDirectory() || file.getName().toLowerCase().endsWith(".tga");
            }
        };
        chooser.setMultiSelectionEnabled(false);
        chooser.setFileSelectionMode(chooser.FILES_ONLY);
        chooser.setFileFilter(filter);
    }

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        int answer = chooser.showOpenDialog(this);
        if (answer == chooser.APPROVE_OPTION) {
            try {
                File file = chooser.getSelectedFile();
                if (file != null && file.exists() && file.isFile()) {
                    InputStream in = new FileInputStream(file);
                    Image image;
                    try {
                        ImageProducer producer = TGADecoder.decode(in);
                        image = getToolkit().createImage(producer);
                    } finally {
                        in.close();
                    }
                    jLabel1.setIcon(new ImageIcon(image));
                    jTextField1.setText(file.toString());
                }
            } catch (Exception ex) {
                showException(ex);
            }
        }
    }

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {
        System.exit(0);
    }

    protected void showException(Exception ex) {
        JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), ex.getClass().getName(), JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new TGAViewer().show();
    }

    private static final String aboutText = "{0}, version {1}\nCopyright ï¿½ 2002 Klaus Rennecke.\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA";

    private javax.swing.JLabel jLabel1;

    private javax.swing.JMenu fileMenu;

    private javax.swing.JMenuItem exitMenuItem;

    private javax.swing.JMenuItem openMenuItem;

    private javax.swing.JMenuBar menuBar;

    private javax.swing.JMenuItem aboutMenuItem;

    private javax.swing.JMenu helpMenu;

    private javax.swing.JTextField jTextField1;
}
