package org.oslcm.om.map;

import java.util.Date;
import java.math.BigDecimal;
import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
  *  This class was autogenerated by Torque on:
  *
  * [Thu Jul 19 13:14:41 CEST 2007]
  *
  */
public class IssueMapBuilder implements MapBuilder {

    /**
     * The name of this class
     */
    public static final String CLASS_NAME = "org.oslcm.om.map.IssueMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt() {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap() {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException {
        if (isBuilt()) {
            return;
        }
        dbMap = Torque.getDatabaseMap("OSLCM");
        dbMap.addTable("OSLCM_ISSUES");
        TableMap tMap = dbMap.getTable("OSLCM_ISSUES");
        tMap.setJavaName("Issue");
        tMap.setOMClass(org.oslcm.om.Issue.class);
        tMap.setPeerClass(org.oslcm.om.IssuePeer.class);
        tMap.setPrimaryKeyMethod("none");
        ColumnMap cMap = null;
        cMap = new ColumnMap("ID", tMap);
        cMap.setType(new Integer(0));
        cMap.setTorqueType("INTEGER");
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
        cMap.setNotNull(true);
        cMap.setJavaName("Id");
        cMap.setAutoIncrement(true);
        cMap.setProtected(false);
        cMap.setInheritance("false");
        cMap.setPosition(1);
        tMap.addColumn(cMap);
        cMap = new ColumnMap("ID_ISSUE", tMap);
        cMap.setType("");
        cMap.setTorqueType("VARCHAR");
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName("IdIssue");
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("Codigo de la issue que genera el programa de gestion de incidencias");
        cMap.setInheritance("false");
        cMap.setPosition(2);
        tMap.addColumn(cMap);
        cMap = new ColumnMap("TYPE", tMap);
        cMap.setType(new Integer(0));
        cMap.setTorqueType("INTEGER");
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName("Type");
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("A que corresponde la issue. (Tabla)");
        cMap.setInheritance("false");
        cMap.setPosition(3);
        tMap.addColumn(cMap);
        cMap = new ColumnMap("ID_TYPE", tMap);
        cMap.setType(new Integer(0));
        cMap.setTorqueType("INTEGER");
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName("IdType");
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("codigo de tabla");
        cMap.setInheritance("false");
        cMap.setPosition(4);
        tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
