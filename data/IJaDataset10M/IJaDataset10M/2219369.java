package javanect.openni;

import com.sun.jna.Structure;
import com.sun.jna.ptr.ShortByReference;

/**
 * <i>native declaration : XnTypes.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class XnIRMetaData extends Structure {

    /**
	 * A pointer to the map meta data of this frame *<br>
	 * C type : XnMapMetaData*
	 */
    public javanect.openni.XnMapMetaData.ByReference pMap;

    /**
	 * A pointer to the IR data of this frame *<br>
	 * C type : const XnIRPixel*
	 */
    public ShortByReference pData;

    public XnIRMetaData() {
        super();
    }

    /**
	 * @param pMap A pointer to the map meta data of this frame *<br>
	 * C type : XnMapMetaData*<br>
	 * @param pData A pointer to the IR data of this frame *<br>
	 * C type : const XnIRPixel*
	 */
    public XnIRMetaData(javanect.openni.XnMapMetaData.ByReference pMap, ShortByReference pData) {
        super();
        this.pMap = pMap;
        this.pData = pData;
    }

    public static class ByReference extends XnIRMetaData implements Structure.ByReference {
    }

    ;

    public static class ByValue extends XnIRMetaData implements Structure.ByValue {
    }

    ;
}
