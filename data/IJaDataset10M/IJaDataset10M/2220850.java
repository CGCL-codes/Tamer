package com.vektorsoft.acapulco.generated;

import com.vektorsoft.acapulco.core.service.ApplicationService;

/**
  * This class is generated from source files. It will be called on module startup to register 
  * all listeners declared in a module.
  *
  *  DO NOT EDIT THIS FILE MANUALLY !!!!
  */
public class DeclaredListeners {

    private static final String EXTENSION_CLASS_NAME = "com.vektorsoft.acapulco.generated.DeclaredExtensions";

    private static final String EXTENSION_METHOD_NAME = "getExtensionFor";

    private static final String REGISTER_EXTENSIONS_METHOD = "registerExtensions";

    private Object declaredExtensionClass;

    public DeclaredListeners() {
        try {
            Class<?> cl = Class.forName(EXTENSION_CLASS_NAME);
            declaredExtensionClass = cl.newInstance();
        } catch (Exception ex) {
            System.err.println("Could not load class for DeclaredExtensions: " + ex.getMessage());
        }
    }

    public void registerDeclaredListeners(ApplicationService svc) {
        svc.registerListener(checkExtensionForClass(com.vektorsoft.acapulco.tools.source.test.ListenerAnnotatedTestClass1.class));
        svc.registerListener(checkExtensionForClass(com.vektorsoft.acapulco.tools.source.test.ListenerAnnotatedTestClass.class));
        try {
            if (declaredExtensionClass != null) {
                declaredExtensionClass.getClass().getMethod(REGISTER_EXTENSIONS_METHOD, ApplicationService.class).invoke(declaredExtensionClass, svc);
            }
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }

    private Class<?> checkExtensionForClass(Class<?> clazz) {
        Class<?> cl = null;
        if (declaredExtensionClass != null) {
            try {
                cl = (Class<?>) declaredExtensionClass.getClass().getMethod(EXTENSION_METHOD_NAME, Class.class).invoke(declaredExtensionClass, clazz);
                if (cl == null) {
                    cl = clazz;
                }
            } catch (Exception ex) {
                System.err.println("Could not register extension: " + ex.getMessage());
                cl = clazz;
            }
        } else {
            cl = clazz;
        }
        return cl;
    }
}
