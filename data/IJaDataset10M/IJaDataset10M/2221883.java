package org.bungeni.editor.actions.routers;

import com.sun.star.container.XNamed;
import com.sun.star.lang.IllegalArgumentException;
import com.sun.star.text.XTextContent;
import com.sun.star.text.XTextRange;
import com.sun.star.text.XTextSection;
import com.sun.star.text.XTextViewCursor;
import java.awt.Component;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import org.bungeni.ooo.ooQueryInterface;
import org.bungeni.extutils.MessageBox;

/**
 *
 * @author  undesa
 */
public class routerCreateScaledSection_panel extends BaseRouterSelectorPanel {

    private String originSection = "";

    private XTextSection xoriginSection = null;

    private String originBookmarkName = "";

    private String targetBookmarkName = "";

    private int nBookmarkCounter = 0;

    private static org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(routerCreateScaledSection_panel.class.getName());

    /** Creates new form routerCreateScaledSection_panel */
    public routerCreateScaledSection_panel() {
        super();
        initComponents();
    }

    private String getUniqueBookmarkName(String prefix) {
        String bookmarkName = prefix;
        int i = 0;
        String fullBookmarkName = bookmarkName + i;
        boolean bExists = ooDocument.bookmarkExists(fullBookmarkName);
        while (bExists) {
            fullBookmarkName = bookmarkName + (++i);
            bExists = ooDocument.bookmarkExists(fullBookmarkName);
        }
        return fullBookmarkName;
    }

    private void applyStartSectionBookmark() {
        try {
            String bookmarkNamePrefix = "start-sec-";
            Object objBookmark = ooDocument.createInstance("com.sun.star.text.Bookmark");
            String fullBookmarkName = getUniqueBookmarkName(bookmarkNamePrefix);
            XNamed namedBookmark = ooQueryInterface.XNamed(objBookmark);
            namedBookmark.setName(fullBookmarkName);
            XTextViewCursor currentCursor = ooDocument.getViewCursor();
            XTextRange startRange = currentCursor.getStart();
            XTextContent xContent = ooQueryInterface.XTextContent(namedBookmark);
            currentCursor.getText().insertTextContent(currentCursor, xContent, false);
            this.originBookmarkName = fullBookmarkName;
            this.originSection = ooDocument.currentSectionName();
            this.btnStartSection.setEnabled(false);
            this.btnEndSection.setEnabled(true);
        } catch (IllegalArgumentException ex) {
            log.error("applyStartSectionBookmark : " + ex.getMessage());
        }
    }

    private void applyEndSectionBookmark() {
        try {
            String bookmarkNamePrefix = "end-sec-";
            Object objBookmark = ooDocument.createInstance("com.sun.star.text.Bookmark");
            String fullBookmarkName = getUniqueBookmarkName(bookmarkNamePrefix);
            XNamed namedBookmark = ooQueryInterface.XNamed(objBookmark);
            namedBookmark.setName(fullBookmarkName);
            XTextViewCursor currentCursor = ooDocument.getViewCursor();
            XTextContent xContent = ooQueryInterface.XTextContent(namedBookmark);
            currentCursor.getText().insertTextContent(currentCursor, xContent, false);
            this.targetBookmarkName = fullBookmarkName;
        } catch (IllegalArgumentException ex) {
            log.error("applyStartSectionBookmark : " + ex.getMessage());
        }
    }

    protected void cleanupBookmarks() {
        ooDocument.deleteBookmark(this.originBookmarkName);
        ooDocument.deleteBookmark(this.targetBookmarkName);
    }

    protected void createSection() {
        String newSectionName = "";
        newSectionName = CommonRouterActions.get_newSectionNameForAction(theSubAction, ooDocument);
        if (newSectionName.length() == 0) {
            log.error("createSection : new section name could not be generated");
        } else {
            boolean bAction = CommonRouterActions.action_createSpannedContainer(ooDocument, newSectionName, this.originBookmarkName, this.targetBookmarkName);
            if (bAction) {
                log.info("createSection : spanned section was created");
                CommonRouterActions.setSectionProperties(theSubAction, newSectionName, ooDocument);
                ooDocument.setSectionMetadataAttributes(newSectionName, CommonRouterActions.get_newSectionMetadata(theSubAction));
            } else {
                log.error("createSection: error while creating section ");
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        scrollMessage = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnStartSection = new javax.swing.JButton();
        btnEndSection = new javax.swing.JButton();
        txtMessage.setColumns(20);
        txtMessage.setEditable(false);
        txtMessage.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        txtMessage.setLineWrap(true);
        txtMessage.setRows(3);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/bungeni/editor/actions/routers/Bundle");
        txtMessage.setText(bundle.getString("routerCreateScaledSection_panel.txtMessage.text"));
        txtMessage.setWrapStyleWord(true);
        txtMessage.setBorder(null);
        scrollMessage.setViewportView(txtMessage);
        btnStartSection.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        btnStartSection.setText(bundle.getString("routerCreateScaledSection_panel.btnStartSection.text"));
        btnStartSection.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSectionActionPerformed(evt);
            }
        });
        btnEndSection.setFont(new java.awt.Font("DejaVu Sans", 0, 10));
        btnEndSection.setText(bundle.getString("routerCreateScaledSection_panel.btnEndSection.text"));
        btnEndSection.setEnabled(false);
        btnEndSection.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEndSectionActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(24, 24, 24).addComponent(btnStartSection, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(btnEndSection, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(31, 31, 31)).addComponent(scrollMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(scrollMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnStartSection).addComponent(btnEndSection))));
    }

    private void btnStartSectionActionPerformed(java.awt.event.ActionEvent evt) {
        applyStartSectionBookmark();
    }

    private void btnEndSectionActionPerformed(java.awt.event.ActionEvent evt) {
        String endSectionName = ooDocument.currentSectionName();
        if (endSectionName.equals(this.originSection)) {
            applyEndSectionBookmark();
            createSection();
            cleanupBookmarks();
            this.containerFrame.dispose();
        } else {
            MessageBox.OK(this.containerFrame, "The new section must start and end within the same section. \n Please select an end point within the source section boundary.");
        }
    }

    private javax.swing.JButton btnEndSection;

    private javax.swing.JButton btnStartSection;

    private javax.swing.JScrollPane scrollMessage;

    private javax.swing.JTextArea txtMessage;

    @Override
    public void initialize() {
    }

    @Override
    public Component getPanelComponent() {
        return this;
    }

    @Override
    public void setContainerFrame(Window frm) {
        super.setContainerFrame(frm);
        this.containerFrame.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent wEvent) {
                cleanupBookmarks();
            }
        });
    }
}
