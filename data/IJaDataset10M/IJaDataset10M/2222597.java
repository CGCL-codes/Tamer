package ikinciDanisman;

import danisman.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import sosbilens.Baglanti;
import sosbilens.CreateReport;
import sosbilens.GetCurrentDirectory;

/**
 *
 * @author Kerem
 */
public class ikinciDanismanBelirlemeOgrenciListesi extends javax.swing.JFrame {

    /** Creates new form danismanBelirlemeOgrenciListesi */
    private DefaultTableModel tableModel;

    private int toplantiSayisi;

    private ResultSet result;

    private String imzalayacakKisi;

    private String subreport_path;

    private String ogrenciNo;

    private boolean vekil;

    public ikinciDanismanBelirlemeOgrenciListesi() {
        tableModel = new DefaultTableModel();
        initComponents();
        ogrenciTablosu.setModel(tableModel);
    }

    public ikinciDanismanBelirlemeOgrenciListesi(ResultSet rs, int toplantiSayi) {
        tableModel = new DefaultTableModel();
        initComponents();
        ogrenciTablosu.setModel(tableModel);
        result = rs;
        toplantiSayisi = toplantiSayi;
    }

    public ikinciDanismanBelirlemeOgrenciListesi(ResultSet rs, int toplantiSayi, String imza) {
        tableModel = new DefaultTableModel();
        initComponents();
        ogrenciTablosu.setModel(tableModel);
        result = rs;
        toplantiSayisi = toplantiSayi;
        imzalayacakKisi = imza;
    }

    public ikinciDanismanBelirlemeOgrenciListesi(int toplantiSayi, String imza, boolean vekil) {
        tableModel = new DefaultTableModel();
        initComponents();
        ogrenciTablosu.setModel(tableModel);
        toplantiSayisi = toplantiSayi;
        imzalayacakKisi = imza;
        this.vekil = vekil;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        printButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ogrenciTablosu = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        silMenuItem = new javax.swing.JMenuItem();
        guncelleMenuItem = new javax.swing.JMenuItem();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sosbilens.SosBilEnsApp.class).getContext().getResourceMap(ikinciDanismanBelirlemeOgrenciListesi.class);
        printButton.setText(resourceMap.getString("printButton.text"));
        printButton.setName("printButton");
        printButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });
        jScrollPane1.setName("jScrollPane1");
        ogrenciTablosu.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {}, new String[] {}));
        ogrenciTablosu.setName("ogrenciTablosu");
        jScrollPane1.setViewportView(ogrenciTablosu);
        jMenuBar1.setName("jMenuBar1");
        jMenu1.setText(resourceMap.getString("jMenu1.text"));
        jMenu1.setName("jMenu1");
        silMenuItem.setText(resourceMap.getString("silMenuItem.text"));
        silMenuItem.setName("silMenuItem");
        silMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                silMenuItemMouseClicked(evt);
            }
        });
        silMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(silMenuItem);
        guncelleMenuItem.setText(resourceMap.getString("guncelleMenuItem.text"));
        guncelleMenuItem.setName("guncelleMenuItem");
        guncelleMenuItem.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(guncelleMenuItem);
        jMenuBar1.add(jMenu1);
        setJMenuBar(jMenuBar1);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGap(201, 201, 201).addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(23, 23, 23).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(printButton).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        pack();
    }

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            CreateReport report = new CreateReport("danismanBelirleme.jrxml");
            HashMap parameters = new HashMap();
            parameters.put("imza", imzalayacakKisi);
            ogrenciNo = tableModel.getValueAt(ogrenciTablosu.getSelectedRow(), 0).toString();
            StringBuffer query = new StringBuffer();
            query.append("SELECT adi,tarih,D.toplantiSayisi,kararNo,raportor,abd,dekanlik,danisman2,danismanAbd2");
            query.append(" FROM APP.IKINCIDANISMAN D,APP.TOPLANTI T");
            query.append(" WHERE D.toplantiSayisi=T.toplantiSayisi AND D.toplantiSayisi=" + toplantiSayisi);
            query.append(" AND ogrenciNo LIKE '" + ogrenciNo + "'");
            Baglanti.createConnection();
            ResultSet ogrenciResult = Baglanti.runQuery(query.toString());
            report.setDataSource(ogrenciResult);
            String abd = tableModel.getValueAt(ogrenciTablosu.getSelectedRow(), 3).toString();
            String dekanlik = tableModel.getValueAt(ogrenciTablosu.getSelectedRow(), 4).toString();
            StringBuilder ogrenciListesiQuery = new StringBuilder();
            ogrenciListesiQuery.append("SELECT adi,bolum,statu,abd,tur,ogrenciNo,danisman,K.toplantiSayisi,tarih,kararNo,raportor,danismanEmekli,yonetmelikMadde");
            ogrenciListesiQuery.append(" FROM APP.DANISMAN K,APP.TOPLANTI T WHERE K.toplantiSayisi=T.toplantiSayisi ");
            ogrenciListesiQuery.append(" AND K.toplantiSayisi=" + toplantiSayisi);
            Baglanti.createConnection();
            ResultSet subResult = Baglanti.runQuery(ogrenciListesiQuery.toString());
            JRResultSetDataSource ogrenciListesiDataSource = new JRResultSetDataSource(subResult);
            parameters.put("subreport_expr", ogrenciListesiDataSource);
            parameters.put("subreport_expr2", ogrenciListesiDataSource);
            parameters.put("SUBREPORT_DIR", subreport_path);
            String imagePath = subreport_path.concat("\\images\\");
            System.out.println(imagePath);
            parameters.put("IMAGE", imagePath);
            parameters.put("vekil", vekil);
            report.printReport(parameters);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void silMenuItemMouseClicked(java.awt.event.MouseEvent evt) {
    }

    private void silMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            ogrenciNo = tableModel.getValueAt(ogrenciTablosu.getSelectedRow(), 0).toString();
            int flag = JOptionPane.showConfirmDialog(rootPane, ogrenciNo + " no'lu öğrenci silinecektir!", "Öğrenci Sil", JOptionPane.YES_NO_OPTION);
            if (flag == JOptionPane.YES_OPTION) {
                StringBuilder query = new StringBuilder();
                query.append("DELETE FROM APP.DANISMAN ").append(" WHERE toplantiSayisi=").append(toplantiSayisi).append(" AND ogrenciNo LIKE '").append(ogrenciNo).append("'");
                Baglanti.createConnection();
                Baglanti.insertQuery(query.toString());
                JOptionPane.showMessageDialog(rootPane, "Öğrenci Silindi");
                tableModel.setDataVector(new Vector(), null);
                getData();
                ogrenciTablosu.repaint();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }

    private void getData() throws SQLException {
        StringBuilder query = new StringBuilder();
        query.append("SELECT ogrenciNo,adi,danisman,abd,dekanlik  FROM APP.IKINCIDANISMAN ");
        query.append(" WHERE toplantiSayisi=?");
        Baglanti.createConnection();
        PreparedStatement stmt = Baglanti.createPreparedStatement(query.toString());
        stmt.setInt(1, toplantiSayisi);
        result = stmt.executeQuery();
        ResultSetMetaData metaData = result.getMetaData();
        for (int j = 1; j <= metaData.getColumnCount(); j++) tableModel.addColumn(metaData.getColumnName(j));
        while (result.next()) {
            Vector row = new Vector();
            for (int i = 1; i <= metaData.getColumnCount(); i++) {
                row.addElement(result.getObject(i));
            }
            tableModel.addRow(row);
        }
        subreport_path = GetCurrentDirectory.getPath();
    }

    private void guncelleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Baglanti.close();
            ogrenciNo = tableModel.getValueAt(ogrenciTablosu.getSelectedRow(), 0).toString();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        try {
            getData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ikinciDanismanBelirlemeOgrenciListesi().setVisible(true);
            }
        });
    }

    private javax.swing.JMenuItem guncelleMenuItem;

    private javax.swing.JMenu jMenu1;

    private javax.swing.JMenuBar jMenuBar1;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable ogrenciTablosu;

    private javax.swing.JButton printButton;

    private javax.swing.JMenuItem silMenuItem;
}
