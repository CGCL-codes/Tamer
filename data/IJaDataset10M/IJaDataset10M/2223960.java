package nl.openu.tiles.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.expando.model.ExpandoBridge;
import java.io.Serializable;

/**
 * The base model interface for the TileLayout service. Represents a row in the &quot;tiles_TileLayout&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link nl.openu.tiles.model.impl.TileLayoutModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link nl.openu.tiles.model.impl.TileLayoutImpl}.
 * </p>
 *
 * @author Hubert Vogten, Harrie Martens
 * @see TileLayout
 * @see nl.openu.tiles.model.impl.TileLayoutImpl
 * @see nl.openu.tiles.model.impl.TileLayoutModelImpl
 * @generated
 */
public interface TileLayoutModel extends BaseModel<TileLayout> {

    /**
	 * Gets the primary key of this tile layout.
	 *
	 * @return the primary key of this tile layout
	 */
    public long getPrimaryKey();

    /**
	 * Sets the primary key of this tile layout
	 *
	 * @param primaryKey the primary key of this tile layout
	 */
    public void setPrimaryKey(long primaryKey);

    /**
	 * Gets the tile layout ID of this tile layout.
	 *
	 * @return the tile layout ID of this tile layout
	 */
    public long getTileLayoutId();

    /**
	 * Sets the tile layout ID of this tile layout.
	 *
	 * @param tileLayoutId the tile layout ID of this tile layout
	 */
    public void setTileLayoutId(long tileLayoutId);

    /**
	 * Gets the plid of this tile layout.
	 *
	 * @return the plid of this tile layout
	 */
    public long getPlid();

    /**
	 * Sets the plid of this tile layout.
	 *
	 * @param plid the plid of this tile layout
	 */
    public void setPlid(long plid);

    /**
	 * Gets the user ID of this tile layout.
	 *
	 * @return the user ID of this tile layout
	 */
    public long getUserId();

    /**
	 * Sets the user ID of this tile layout.
	 *
	 * @param userId the user ID of this tile layout
	 */
    public void setUserId(long userId);

    /**
	 * Gets the user uuid of this tile layout.
	 *
	 * @return the user uuid of this tile layout
	 * @throws SystemException if a system exception occurred
	 */
    public String getUserUuid() throws SystemException;

    /**
	 * Sets the user uuid of this tile layout.
	 *
	 * @param userUuid the user uuid of this tile layout
	 */
    public void setUserUuid(String userUuid);

    /**
	 * Gets the layout of this tile layout.
	 *
	 * @return the layout of this tile layout
	 */
    @AutoEscape
    public String getLayout();

    /**
	 * Sets the layout of this tile layout.
	 *
	 * @param layout the layout of this tile layout
	 */
    public void setLayout(String layout);

    public boolean isNew();

    public void setNew(boolean n);

    public boolean isCachedModel();

    public void setCachedModel(boolean cachedModel);

    public boolean isEscapedModel();

    public void setEscapedModel(boolean escapedModel);

    public Serializable getPrimaryKeyObj();

    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    public ExpandoBridge getExpandoBridge();

    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    public Object clone();

    public int compareTo(TileLayout tileLayout);

    public int hashCode();

    public CacheModel<TileLayout> toCacheModel();

    public TileLayout toEscapedModel();

    public String toString();

    public String toXmlString();
}
