package others.Test;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.hl7.rim.Entity;
import org.hl7.rim.LanguageCommunication;
import org.hl7.rim.Role;
import org.hl7.rim.impl.EntityImpl;
import org.hl7.rim.impl.LanguageCommunicationImpl;
import org.hl7.rim.impl.PatientImpl;
import org.hl7.rim.impl.PersonImpl;
import org.hl7.rim.impl.RoleImpl;
import org.hl7.types.AD;
import org.hl7.types.ADXP;
import org.hl7.types.BL;
import org.hl7.types.CE;
import org.hl7.types.CS;
import org.hl7.types.EN;
import org.hl7.types.ENXP;
import org.hl7.types.II;
import org.hl7.types.TS;
import org.hl7.types.ValueFactory;
import org.hl7.types.enums.AddressPartType;
import org.hl7.types.enums.EntityNamePartType;
import org.hl7.types.impl.BAGjuListAdapter;
import org.hl7.types.impl.SETjuSetAdapter;
import org.hl7.types.impl.TSjuDateAdapter;
import org.hl7.xml.BLPresenter;
import org.hmaciel.rph.constants.CodesSystemNames;
import org.hmaciel.rph.constants.CodesSystems;
import org.hmaciel.rph.ejb.constats.ClassCodes;
import org.hmaciel.rph.ejb.session.HRepo;
import org.hmaciel.rph.ejb.session.HRepoBean;

/**
 * @author pclavijo
 */
public class AltaPacientePrueba {

    /**
	 * @author pclavijo
	 */
    public static void main(String[] args) {
        prueba();
    }

    /**
	 * @autor pclavijo
	 */
    @SuppressWarnings("all")
    public static void prueba() {
        ValueFactory valueFactory = ValueFactory.getInstance();
        PersonImpl person = new PersonImpl();
        List<LanguageCommunication> languages = new LinkedList<LanguageCommunication>();
        LanguageCommunication le = new LanguageCommunicationImpl();
        le.setInternalVersionNumber(3);
        Map m = new HashMap();
        m.put(BLPresenter.ATTR_VALUE, "true");
        BL preferenceInd = valueFactory.BLvalueOf(true);
        le.setPreferenceInd(preferenceInd);
        CE languageCode = valueFactory.CSvalueOf("codigo de lenguage", CodesSystems.LANGUAGE_CODE_PERSON);
        le.setLanguageCode(languageCode);
        languages.add(le);
        LanguageCommunication le2 = new LanguageCommunicationImpl();
        le2.setInternalVersionNumber(3);
        preferenceInd = valueFactory.BLvalueOf(true);
        le2.setPreferenceInd(preferenceInd);
        languageCode = valueFactory.CSvalueOf("codigo de lenguage2", CodesSystems.LANGUAGE_CODE_PERSON);
        le2.setLanguageCode(languageCode);
        languages.add(le2);
        person.setLanguageCommunication(languages);
        List<ADXP> adxpslist = new LinkedList<ADXP>();
        ADXP ADXP1 = valueFactory.ADXPvalueOf("512", AddressPartType.Direction);
        adxpslist.add(ADXP1);
        ADXP ADXP2 = valueFactory.ADXPvalueOf("J H y Reissig", AddressPartType.StreetName);
        adxpslist.add(ADXP2);
        ADXP ADXP3 = valueFactory.ADXPvalueOf("12500", AddressPartType.PostalCode);
        adxpslist.add(ADXP3);
        ADXP ADXP4 = valueFactory.ADXPvalueOf("Uruguay", AddressPartType.Country);
        adxpslist.add(ADXP4);
        AD d = valueFactory.ADvalueOf(adxpslist, null, null);
        List<AD> l_ad = new ArrayList<AD>();
        l_ad.add(d);
        person.setAddr(BAGjuListAdapter.valueOf(l_ad));
        List<ENXP> enxpList = new LinkedList<ENXP>();
        ENXP EXP1 = valueFactory.ENXPvalueOf("Clavijo Villalba", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        ENXP EXP2 = valueFactory.ENXPvalueOf("Pablo Andres", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        EN e = valueFactory.ENvalueOf(enxpList, null, null);
        List<ENXP> enxpList2 = new LinkedList<ENXP>();
        ENXP ENXP3 = valueFactory.ENXPvalueOf("qucsi qecmu", EntityNamePartType.Family, null);
        enxpList2.add(ENXP3);
        ENXP ENXP4 = valueFactory.ENXPvalueOf("nombre2 nombre2", EntityNamePartType.Given, null);
        enxpList2.add(ENXP4);
        EN e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        List<EN> l_en = new ArrayList<EN>();
        l_en.add(e);
        l_en.add(e2);
        person.setName(BAGjuListAdapter.valueOf(l_en));
        BL muerto = valueFactory.BLvalueOf(false);
        person.setDeceasedInd(muerto);
        CE administrativeGenderCode = valueFactory.CSvalueOf("macho", CodesSystems.ADMINISTRATIVE_GENDER_CODE_PERSON);
        person.setAdministrativeGenderCode(administrativeGenderCode);
        CS determinerCode = valueFactory.CSvalueOf("1", CodesSystems.DETERMINET_CODE_PERSON);
        person.setDeterminerCode(determinerCode);
        CS classcode = valueFactory.CSvalueOf(ClassCodes.PERSON, CodesSystems.CLASS_CODE_PERSON);
        person.setClassCode(classcode);
        List<Role> roles = new LinkedList<Role>();
        PatientImpl paciente = new PatientImpl();
        CS classCode = valueFactory.CSvalueOf(ClassCodes.PATIENT, CodesSystems.CLASS_CODE_PATIENT);
        paciente.setClassCode(classCode);
        classCode = null;
        CS statusCode = valueFactory.CSvalueOf("STAUS CODE", CodesSystems.STATUS_CODE_PATIENT);
        paciente.setStatusCode(statusCode);
        CE veryImportantPersonCode = valueFactory.CSvalueOf("Persona Importante", CodesSystems.VERY_IMPORTANT_PERSON_CODE_PATIENT);
        paciente.setVeryImportantPersonCode(veryImportantPersonCode);
        CE CEcode = valueFactory.CSvalueOf("codigopaciente", CodesSystems.PATIENT_CODE);
        paciente.setCode(CEcode);
        List<II> l_ii = new ArrayList<II>();
        String idGenerado = (new Long(System.currentTimeMillis())).toString();
        II ii0 = valueFactory.IIvalueOf("2.16.840", idGenerado);
        II ii1 = valueFactory.IIvalueOf("2.16.841", "id1");
        II ii2 = valueFactory.IIvalueOf("2.16.842", "pasaporte1");
        l_ii.add(ii0);
        l_ii.add(ii1);
        l_ii.add(ii2);
        paciente.setId(SETjuSetAdapter.valueOf(l_ii));
        roles.add(paciente);
        Role cit = new RoleImpl();
        l_en = new ArrayList<EN>();
        enxpList = new LinkedList<ENXP>();
        EXP1 = valueFactory.ENXPvalueOf("Bulgaro ", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        EXP2 = valueFactory.ENXPvalueOf("ciudadano de Bulgaria", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        e = valueFactory.ENvalueOf(enxpList, null, null);
        l_en.add(e);
        enxpList2 = new LinkedList<ENXP>();
        ENXP EXP3 = valueFactory.ENXPvalueOf("Ucrano", EntityNamePartType.Family, null);
        enxpList2.add(EXP1);
        ENXP EXP4 = valueFactory.ENXPvalueOf("ciudadano de Ucrania", EntityNamePartType.Given, null);
        enxpList2.add(EXP2);
        e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        l_en.add(e2);
        cit.setName(BAGjuListAdapter.valueOf(l_en));
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840.999", "4144209");
        ii1 = valueFactory.IIvalueOf("2.16.842", "pasaporte1");
        l_ii.add(ii0);
        l_ii.add(ii1);
        cit.setId(SETjuSetAdapter.valueOf(l_ii));
        cit.setPlayer(person);
        classCode = valueFactory.CSvalueOf(ClassCodes.CITIZEN, CodesSystems.CLASS_CODE_CITIZEN);
        cit.setClassCode(classCode);
        Entity nation = new EntityImpl();
        classCode = valueFactory.CSvalueOf(ClassCodes.NATION, CodesSystems.CLASS_CODE_NATION);
        nation.setClassCode(classCode);
        determinerCode = valueFactory.CSvalueOf("determinerCode", CodesSystems.DETERMINET_CODE_NATION);
        nation.setDeterminerCode(determinerCode);
        l_en = new ArrayList<EN>();
        enxpList = new LinkedList<ENXP>();
        EXP1 = valueFactory.ENXPvalueOf("Bulgaria ", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        EXP2 = valueFactory.ENXPvalueOf("Republica de Bulgaria", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        e = valueFactory.ENvalueOf(enxpList, null, null);
        l_en.add(e);
        enxpList2 = new LinkedList<ENXP>();
        EXP3 = valueFactory.ENXPvalueOf("Ucrania", EntityNamePartType.Family, null);
        enxpList2.add(EXP1);
        EXP4 = valueFactory.ENXPvalueOf("Republica de Ucrania", EntityNamePartType.Given, null);
        enxpList2.add(EXP2);
        e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        l_en.add(e2);
        nation.setName(BAGjuListAdapter.valueOf(l_en));
        nation.addPlayedRole(cit);
        CEcode = valueFactory.CSvalueOf("codigonacion", CodesSystems.CODE_NATION);
        nation.setCode(CEcode);
        cit.setScoper(nation);
        roles.add(cit);
        Role emp = new RoleImpl();
        classCode = valueFactory.CSvalueOf(ClassCodes.EMPLOYMENT, CodesSystems.CLASS_CODE_EMPLOYMENT);
        emp.setClassCode(classCode);
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("9.5.4.22", "989543");
        ii1 = valueFactory.IIvalueOf("434.7.4.22", "1112222");
        ii2 = valueFactory.IIvalueOf("9.5.4.22", "4333444");
        l_ii.add(ii0);
        l_ii.add(ii1);
        l_ii.add(ii2);
        emp.setId(SETjuSetAdapter.valueOf(l_ii));
        CE code = valueFactory.CSvalueOf("00000", CodesSystems.CODE_EMPLOYMENT);
        emp.setCode(code);
        roles.add(emp);
        person.setPlayedRole(roles);
        Role other = new RoleImpl();
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840", "030202");
        ii1 = valueFactory.IIvalueOf("2.16.841", "545454");
        l_ii.add(ii0);
        l_ii.add(ii1);
        other.setId(SETjuSetAdapter.valueOf(l_ii));
        classCode = valueFactory.CSvalueOf("OTH", CodesSystems.CLASS_CODE_OTHER_ID);
        other.setClassCode(classCode);
        Collection<Role> otherids = new ArrayList<Role>();
        otherids.add(other);
        roles = person.getPlayedRole();
        roles.addAll(otherids);
        person.setPlayedRole(roles);
        Role rel = new RoleImpl();
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840", "030202");
        ii1 = valueFactory.IIvalueOf("2.16.842", "444");
        l_ii.add(ii0);
        l_ii.add(ii1);
        rel.setId(SETjuSetAdapter.valueOf(l_ii));
        classCode = valueFactory.CSvalueOf(ClassCodes.PERSONAL_RELATION_SHIP, ClassCodes.PERSONAL_RELATION_SHIP);
        rel.setClassCode(classCode);
        statusCode = valueFactory.CSvalueOf("codigo estado relacion", CodesSystemNames.STAUS_CODE);
        rel.setStatusCode(statusCode);
        rel.setScoper(person);
        CEcode = valueFactory.CSvalueOf("codigoRelacionPersonal", CodesSystemNames.PERSONAL_RELATION_SHIP_CODE);
        rel.setCode(CEcode);
        Collection<Role> relations = new ArrayList<Role>();
        relations.add(rel);
        roles = person.getPlayedRole();
        roles.addAll(relations);
        person.setPlayedRole(roles);
        HRepo h = new HRepoBean();
        h.altaPaciente(person, nation);
    }

    /**
	 * @autor pclavijo
	 * @deprecated
	 */
    @SuppressWarnings("all")
    public static void prueba_old() {
        ValueFactory valueFactory = ValueFactory.getInstance();
        PersonImpl person = new PersonImpl();
        List<LanguageCommunication> languages = new LinkedList<LanguageCommunication>();
        LanguageCommunication le = new LanguageCommunicationImpl();
        le.setInternalVersionNumber(3);
        Map m = new HashMap();
        m.put(BLPresenter.ATTR_VALUE, "true");
        BL preferenceInd = valueFactory.BLvalueOf(true);
        le.setPreferenceInd(preferenceInd);
        CE languageCode = valueFactory.CSvalueOf("codigo de lenguage", CodesSystems.LANGUAGE_CODE_PERSON);
        le.setLanguageCode(languageCode);
        languages.add(le);
        LanguageCommunication le2 = new LanguageCommunicationImpl();
        le2.setInternalVersionNumber(3);
        preferenceInd = valueFactory.BLvalueOf(true);
        le2.setPreferenceInd(preferenceInd);
        languageCode = valueFactory.CSvalueOf("codigo de lenguage2", CodesSystems.LANGUAGE_CODE_PERSON);
        le2.setLanguageCode(languageCode);
        languages.add(le2);
        person.setLanguageCommunication(languages);
        List<ADXP> adxpslist = new LinkedList<ADXP>();
        ADXP ADXP1 = valueFactory.ADXPvalueOf("512", AddressPartType.Direction);
        adxpslist.add(ADXP1);
        ADXP ADXP2 = valueFactory.ADXPvalueOf("J H y Reissig", AddressPartType.StreetName);
        adxpslist.add(ADXP2);
        ADXP ADXP3 = valueFactory.ADXPvalueOf("12500", AddressPartType.PostalCode);
        adxpslist.add(ADXP3);
        ADXP ADXP4 = valueFactory.ADXPvalueOf("Uruguay", AddressPartType.Country);
        adxpslist.add(ADXP4);
        AD d = valueFactory.ADvalueOf(adxpslist, null, null);
        List<AD> l_ad = new ArrayList<AD>();
        l_ad.add(d);
        person.setAddr(BAGjuListAdapter.valueOf(l_ad));
        List<ENXP> enxpList = new LinkedList<ENXP>();
        ENXP EXP1 = valueFactory.ENXPvalueOf("Clavijo Villalba", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        ENXP EXP2 = valueFactory.ENXPvalueOf("Pablo Andres", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        EN e = valueFactory.ENvalueOf(enxpList, null, null);
        List<ENXP> enxpList2 = new LinkedList<ENXP>();
        ENXP ENXP3 = valueFactory.ENXPvalueOf("qucsi qecmu", EntityNamePartType.Family, null);
        enxpList2.add(ENXP3);
        ENXP ENXP4 = valueFactory.ENXPvalueOf("nombre2 nombre2", EntityNamePartType.Given, null);
        enxpList2.add(ENXP4);
        EN e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        List<EN> l_en = new ArrayList<EN>();
        l_en.add(e);
        l_en.add(e2);
        person.setName(BAGjuListAdapter.valueOf(l_en));
        BL muerto = valueFactory.BLvalueOf(false);
        person.setDeceasedInd(muerto);
        CE administrativeGenderCode = valueFactory.CSvalueOf("macho", CodesSystems.ADMINISTRATIVE_GENDER_CODE_PERSON);
        person.setAdministrativeGenderCode(administrativeGenderCode);
        CS determinerCode = valueFactory.CSvalueOf("1", CodesSystems.DETERMINET_CODE_PERSON);
        person.setDeterminerCode(determinerCode);
        CS classcode = valueFactory.CSvalueOf(ClassCodes.PERSON, CodesSystems.CLASS_CODE_PERSON);
        person.setClassCode(classcode);
        List<Role> roles = new LinkedList<Role>();
        PatientImpl paciente = new PatientImpl();
        CS classCode = valueFactory.CSvalueOf(ClassCodes.PATIENT, CodesSystems.CLASS_CODE_PATIENT);
        paciente.setClassCode(classCode);
        classCode = null;
        CS statusCode = valueFactory.CSvalueOf("STAUS CODE", CodesSystems.STATUS_CODE_PATIENT);
        paciente.setStatusCode(statusCode);
        CE veryImportantPersonCode = valueFactory.CSvalueOf("Persona Importante", CodesSystems.VERY_IMPORTANT_PERSON_CODE_PATIENT);
        paciente.setVeryImportantPersonCode(veryImportantPersonCode);
        CE CEcode = valueFactory.CSvalueOf("codigopaciente", CodesSystems.PATIENT_CODE);
        paciente.setCode(CEcode);
        List<II> l_ii = new ArrayList<II>();
        String idGenerado = (new Long(System.currentTimeMillis())).toString();
        II ii0 = valueFactory.IIvalueOf("2.16.840", idGenerado);
        II ii1 = valueFactory.IIvalueOf("2.16.841", "id1");
        II ii2 = valueFactory.IIvalueOf("2.16.842", "pasaporte1");
        l_ii.add(ii0);
        l_ii.add(ii1);
        l_ii.add(ii2);
        paciente.setId(SETjuSetAdapter.valueOf(l_ii));
        roles.add(paciente);
        Role cit = new RoleImpl();
        l_en = new ArrayList<EN>();
        enxpList = new LinkedList<ENXP>();
        EXP1 = valueFactory.ENXPvalueOf("Bulgaro ", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        EXP2 = valueFactory.ENXPvalueOf("ciudadano de Bulgaria", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        e = valueFactory.ENvalueOf(enxpList, null, null);
        l_en.add(e);
        enxpList2 = new LinkedList<ENXP>();
        ENXP EXP3 = valueFactory.ENXPvalueOf("Ucrano", EntityNamePartType.Family, null);
        enxpList2.add(EXP1);
        ENXP EXP4 = valueFactory.ENXPvalueOf("ciudadano de Ucrania", EntityNamePartType.Given, null);
        enxpList2.add(EXP2);
        e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        l_en.add(e2);
        cit.setName(BAGjuListAdapter.valueOf(l_en));
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840.999", "4144209");
        ii1 = valueFactory.IIvalueOf("2.16.842", "pasaporte1");
        l_ii.add(ii0);
        l_ii.add(ii1);
        cit.setId(SETjuSetAdapter.valueOf(l_ii));
        cit.setPlayer(person);
        classCode = valueFactory.CSvalueOf(ClassCodes.CITIZEN, CodesSystems.CLASS_CODE_CITIZEN);
        cit.setClassCode(classCode);
        Entity nation = new EntityImpl();
        classCode = valueFactory.CSvalueOf(ClassCodes.NATION, CodesSystems.CLASS_CODE_NATION);
        nation.setClassCode(classCode);
        determinerCode = valueFactory.CSvalueOf("determinerCode", CodesSystems.DETERMINET_CODE_NATION);
        nation.setDeterminerCode(determinerCode);
        l_en = new ArrayList<EN>();
        enxpList = new LinkedList<ENXP>();
        EXP1 = valueFactory.ENXPvalueOf("Bulgaria ", EntityNamePartType.Family, null);
        enxpList.add(EXP1);
        EXP2 = valueFactory.ENXPvalueOf("Republica de Bulgaria", EntityNamePartType.Given, null);
        enxpList.add(EXP2);
        e = valueFactory.ENvalueOf(enxpList, null, null);
        l_en.add(e);
        enxpList2 = new LinkedList<ENXP>();
        EXP3 = valueFactory.ENXPvalueOf("Ucrania", EntityNamePartType.Family, null);
        enxpList2.add(EXP1);
        EXP4 = valueFactory.ENXPvalueOf("Republica de Ucrania", EntityNamePartType.Given, null);
        enxpList2.add(EXP2);
        e2 = valueFactory.ENvalueOf(enxpList2, null, null);
        l_en.add(e2);
        nation.setName(BAGjuListAdapter.valueOf(l_en));
        nation.addPlayedRole(cit);
        CEcode = valueFactory.CSvalueOf("codigonacion", CodesSystems.CODE_NATION);
        nation.setCode(CEcode);
        cit.setScoper(nation);
        roles.add(cit);
        Role emp = new RoleImpl();
        classCode = valueFactory.CSvalueOf(ClassCodes.EMPLOYMENT, CodesSystems.CLASS_CODE_EMPLOYMENT);
        emp.setClassCode(classCode);
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("9.5.4.22", "989543");
        ii1 = valueFactory.IIvalueOf("434.7.4.22", "1112222");
        ii2 = valueFactory.IIvalueOf("9.5.4.22", "4333444");
        l_ii.add(ii0);
        l_ii.add(ii1);
        l_ii.add(ii2);
        emp.setId(SETjuSetAdapter.valueOf(l_ii));
        CE code = valueFactory.CSvalueOf("00000", CodesSystems.CODE_EMPLOYMENT);
        emp.setCode(code);
        roles.add(emp);
        person.setPlayedRole(roles);
        Role other = new RoleImpl();
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840", "030202");
        ii1 = valueFactory.IIvalueOf("2.16.841", "545454");
        l_ii.add(ii0);
        l_ii.add(ii1);
        other.setId(SETjuSetAdapter.valueOf(l_ii));
        classCode = valueFactory.CSvalueOf("OTH", CodesSystemNames.CLASS_CODE);
        other.setClassCode(classCode);
        Collection<Role> otherids = new ArrayList<Role>();
        otherids.add(other);
        roles = person.getPlayedRole();
        roles.addAll(otherids);
        person.setPlayedRole(roles);
        Role rel = new RoleImpl();
        l_ii = new ArrayList<II>();
        ii0 = valueFactory.IIvalueOf("2.16.840", "030202");
        ii1 = valueFactory.IIvalueOf("2.16.842", "444");
        l_ii.add(ii0);
        l_ii.add(ii1);
        rel.setId(SETjuSetAdapter.valueOf(l_ii));
        classCode = valueFactory.CSvalueOf(ClassCodes.PERSONAL_RELATION_SHIP, ClassCodes.PERSONAL_RELATION_SHIP);
        rel.setClassCode(classCode);
        statusCode = valueFactory.CSvalueOf("codigo estado relacion", CodesSystemNames.STAUS_CODE);
        rel.setStatusCode(statusCode);
        rel.setScoper(person);
        CEcode = valueFactory.CSvalueOf("codigoRelacionPersonal", CodesSystemNames.PERSONAL_RELATION_SHIP_CODE);
        rel.setCode(CEcode);
        Collection<Role> relations = new ArrayList<Role>();
        relations.add(rel);
        roles = person.getPlayedRole();
        roles.addAll(relations);
        person.setPlayedRole(roles);
        TS effectiveTime = TSjuDateAdapter.valueOf("20061105212900.000");
        person.setBirthTime(effectiveTime);
        HRepo h = new HRepoBean();
        h.altaPaciente(person, nation);
    }
}
