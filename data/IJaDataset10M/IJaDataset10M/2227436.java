package newgen.presentation.administration;

import newgen.presentation.*;

/**
 * 
 * @author  Administrator
 */
public class SearchMeetingNameSHAFDialog extends javax.swing.JDialog {

    /** Creates new form SearchMeetingNameSHAFDialog */
    public SearchMeetingNameSHAFDialog(String initialSearchString) {
        super();
        initComponents();
        this.warningPanel.setVisible(false);
        this.bnDoNothing.setVisible(false);
        this.searchpanel = new newgen.presentation.administration.SearchMeetingNameSHAF(initialSearchString);
        this.addPanel.add(this.searchpanel);
        this.setModal(true);
        this.setSize(650, 450);
        this.setLocation(NewGenMain.getAppletInstance().getLocation(550, 450));
        newgen.presentation.NewGenMain.getAppletInstance().applyOrientation(this);
        this.show();
    }

    public SearchMeetingNameSHAFDialog(String str, String initialSearchString) {
        super();
        initComponents();
        this.warningPanel.setVisible(false);
        this.bnDoNothing.setVisible(false);
        this.searchpanel = new newgen.presentation.administration.SearchMeetingNameSHAF(initialSearchString);
        this.addPanel.add(this.searchpanel);
        this.setModal(true);
        this.setSize(550, 450);
        this.setLocation(NewGenMain.getAppletInstance().getLocation(550, 450));
        this.searchpanel.setTextFieldText(str);
        newgen.presentation.NewGenMain.getAppletInstance().applyOrientation(this);
        this.show();
    }

    public SearchMeetingNameSHAFDialog(java.util.ArrayList list, String initialSearchString) {
        super();
        initComponents();
        this.searchpanel = new newgen.presentation.administration.SearchMeetingNameSHAF(initialSearchString);
        boolean retboo = this.searchpanel.compareWithWholeData(list);
        this.addPanel.add(this.searchpanel);
        this.setModal(true);
        this.setSize(550, 450);
        this.setLocation(NewGenMain.getAppletInstance().getLocation(550, 450));
        if (!retboo) {
            this.setShown(true);
            this.warningPanel.setVisible(true);
            this.bnDoNothing.setVisible(true);
            this.bok.setText(NewGenMain.getAppletInstance().getMyResource().getString("SelectExisting"));
            this.bcancel.setText(NewGenMain.getAppletInstance().getMyResource().getString("CreateNew"));
        } else {
            this.setMatchedkey(this.searchpanel.getMatchedkey());
            this.setShown(false);
        }
        newgen.presentation.NewGenMain.getAppletInstance().applyOrientation(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        bok = new javax.swing.JButton();
        bhelp = new javax.swing.JButton();
        bHelpCsh = new javax.swing.JButton();
        bcancel = new javax.swing.JButton();
        bnDoNothing = new javax.swing.JButton();
        addPanel = new javax.swing.JPanel();
        warningPanel = new javax.swing.JPanel();
        warningLabel = new javax.swing.JLabel();
        setTitle(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("SearchMeetingNameSubjectHeading"));
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        jPanel1.setBorder(new javax.swing.border.EtchedBorder());
        bok.setMnemonic('o');
        bok.setText(java.util.ResourceBundle.getBundle("Administration").getString("Ok"));
        bok.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bokActionPerformed(evt);
            }
        });
        jPanel1.add(bok);
        bhelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/help.gif")));
        bhelp.setMnemonic('h');
        jPanel1.add(bhelp);
        bHelpCsh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/newgen/images/helpcsh.gif")));
        jPanel1.add(bHelpCsh);
        bcancel.setMnemonic('c');
        bcancel.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Cancel"));
        bcancel.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelActionPerformed(evt);
            }
        });
        jPanel1.add(bcancel);
        bnDoNothing.setMnemonic('e');
        bnDoNothing.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("Close"));
        bnDoNothing.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnDoNothingActionPerformed(evt);
            }
        });
        jPanel1.add(bnDoNothing);
        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);
        addPanel.setLayout(new java.awt.BorderLayout());
        addPanel.setBorder(new javax.swing.border.EtchedBorder());
        getContentPane().add(addPanel, java.awt.BorderLayout.CENTER);
        warningLabel.setForeground(new java.awt.Color(255, 51, 102));
        warningLabel.setText(newgen.presentation.NewGenMain.getAppletInstance().getMyResource().getString("TheTermBelowIsNotInCurrentAuthorityFile"));
        warningPanel.add(warningLabel);
        getContentPane().add(warningPanel, java.awt.BorderLayout.NORTH);
        pack();
    }

    private void bnDoNothingActionPerformed(java.awt.event.ActionEvent evt) {
        this.returncode = 2;
        this.dispose();
    }

    private void bcancelActionPerformed(java.awt.event.ActionEvent evt) {
        this.returncode = 1;
        this.dispose();
    }

    private void bokActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.searchpanel.getSelectedRow() != -1) {
            retobjtab = this.searchpanel.getSelectedValuesForTable();
            retobj = this.searchpanel.getSelectedValues();
            retobjkey = this.searchpanel.getSelectedValuesWithKey();
            this.returncode = 0;
            this.dispose();
        }
    }

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {
        setVisible(false);
        dispose();
    }

    public Object[] getSelectedValuesForTable() {
        return retobjtab;
    }

    public Object[] getSelectedValues() {
        return retobj;
    }

    public Object[] getSelectedValuesWithKey() {
        return retobjkey;
    }

    public int getReturnCode() {
        return this.returncode;
    }

    /** Getter for property matchedkey.
     * @return Value of property matchedkey.
     */
    public java.lang.String[] getMatchedkey() {
        return this.matchedkey;
    }

    /** Setter for property matchedkey.
     * @param matchedkey New value of property matchedkey.
     */
    public void setMatchedkey(java.lang.String[] matchedkey) {
        this.matchedkey = matchedkey;
    }

    /** Getter for property shown.
     * @return Value of property shown.
     */
    public boolean isShown() {
        return shown;
    }

    /** Setter for property shown.
     * @param shown New value of property shown.
     */
    public void setShown(boolean shown) {
        this.shown = shown;
    }

    private javax.swing.JPanel addPanel;

    private javax.swing.JButton bHelpCsh;

    private javax.swing.JButton bcancel;

    private javax.swing.JButton bhelp;

    private javax.swing.JButton bnDoNothing;

    private javax.swing.JButton bok;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JLabel warningLabel;

    private javax.swing.JPanel warningPanel;

    private newgen.presentation.administration.SearchMeetingNameSHAF searchpanel;

    private Object[] retobjtab, retobj, retobjkey;

    private int returncode = 0;

    private String[] matchedkey = null;

    private boolean shown = false;
}
