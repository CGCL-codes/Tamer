package traderjournal.model.hibernate;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Ccy generated by hbm2java
 */
public class Ccy extends traderjournal.model.hibernate.HibernateBaseModel implements java.io.Serializable {

    private Integer id;

    private String name;

    private Set accounts = new HashSet(0);

    private Set instruments = new HashSet(0);

    public Ccy() {
    }

    public Ccy(String name) {
        this.name = name;
    }

    public Ccy(String name, Set accounts, Set instruments) {
        this.name = name;
        this.accounts = accounts;
        this.instruments = instruments;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Set getAccounts() {
        return this.accounts;
    }

    public void setAccounts(Set accounts) {
        this.accounts = accounts;
    }

    public Set getInstruments() {
        return this.instruments;
    }

    public void setInstruments(Set instruments) {
        this.instruments = instruments;
    }

    public <X> X get(String property) {
        if (property.equals("id")) {
            return (X) getId();
        }
        if (property.equals("name")) {
            return (X) getName();
        }
        if (property.equals("accounts")) {
            return (X) getAccounts();
        }
        if (property.equals("instruments")) {
            return (X) getInstruments();
        }
        return null;
    }

    public Map<String, Object> getProperties() {
        HashMap<String, Object> hm = new HashMap<String, Object>();
        hm.put("id", getId());
        hm.put("name", getName());
        hm.put("accounts", getAccounts());
        hm.put("instruments", getInstruments());
        return hm;
    }

    public Collection<String> getPropertyNames() {
        List<String> ret = new ArrayList<String>();
        ret.add("id");
        ret.add("name");
        ret.add("accounts");
        ret.add("instruments");
        return ret;
    }

    public <X> X remove(String property) {
        return null;
    }

    public <X> X set(String property, X value) {
        if (property.equals("id")) {
            setId((Integer) value);
        }
        if (property.equals("name")) {
            setName((String) value);
        }
        if (property.equals("accounts")) {
            setAccounts((Set) value);
        }
        if (property.equals("instruments")) {
            setInstruments((Set) value);
        }
        return null;
    }
}
