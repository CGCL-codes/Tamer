package ca.uhn.hunit.swing.ui.event.expect;

import ca.uhn.hunit.swing.controller.ctx.EventEditorContextController;
import ca.uhn.hunit.swing.controller.ctx.TestEditorController;
import ca.uhn.hunit.event.expect.Hl7V2ExpectSpecificMessageImpl;
import ca.uhn.hunit.msg.Hl7V2MessageImpl;
import ca.uhn.hunit.swing.ui.event.AbstractEventEditorForm;

/**
 *
 * @author James
 */
public class Hl7V2ExpectSpecificMessageEditorForm extends AbstractEventEditorForm {

    private static final long serialVersionUID = 1L;

    private Hl7V2ExpectSpecificMessageImpl myEvent;

    private EventEditorContextController myController;

    /** Creates new form Hl7V2ExpectSpecificMessageEditorForm */
    public Hl7V2ExpectSpecificMessageEditorForm() {
        myEvent = null;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        myReplyMessageButtonGroup = new javax.swing.ButtonGroup();
        myBaseEventEditorForm = new ca.uhn.hunit.swing.ui.event.BaseEventEditorForm();
        myBaseExpectMessageEditorForm = new ca.uhn.hunit.swing.ui.event.expect.BaseExpectMessageEditorForm();
        jLabel1 = new javax.swing.JLabel();
        myAckRadioButton = new javax.swing.JRadioButton();
        myCustomRadioButton = new javax.swing.JRadioButton();
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("ca/uhn/hunit/l10n/UiStrings");
        jLabel1.setText(bundle.getString("eventeditor.reply_message"));
        myReplyMessageButtonGroup.add(myAckRadioButton);
        myAckRadioButton.setText(bundle.getString("eventeditor.reply_message.hl7.ack"));
        myAckRadioButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myAckRadioButtonActionPerformed(evt);
            }
        });
        myReplyMessageButtonGroup.add(myCustomRadioButton);
        myCustomRadioButton.setText(bundle.getString("eventeditor.reply_message.custom"));
        myCustomRadioButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myCustomRadioButtonActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(myBaseEventEditorForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(myBaseExpectMessageEditorForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(myAckRadioButton).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(myCustomRadioButton).addGap(171, 171, 171)));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addComponent(myBaseEventEditorForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(myBaseExpectMessageEditorForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(myAckRadioButton).addComponent(myCustomRadioButton))));
    }

    private void myAckRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {
        updateReplyType();
    }

    private void myCustomRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {
        updateReplyType();
    }

    private javax.swing.JLabel jLabel1;

    private javax.swing.JRadioButton myAckRadioButton;

    private ca.uhn.hunit.swing.ui.event.BaseEventEditorForm myBaseEventEditorForm;

    private ca.uhn.hunit.swing.ui.event.expect.BaseExpectMessageEditorForm myBaseExpectMessageEditorForm;

    private javax.swing.JRadioButton myCustomRadioButton;

    private javax.swing.ButtonGroup myReplyMessageButtonGroup;

    /**
     * {@inheritDoc }
     */
    @Override
    public void setController(EventEditorContextController theController) {
        myEvent = (Hl7V2ExpectSpecificMessageImpl) theController.getEvent();
        myController = theController;
        myBaseEventEditorForm.setController(theController);
        myBaseExpectMessageEditorForm.setController(theController);
        if (myEvent.getReplyMessage() != null) {
            myCustomRadioButton.setSelected(true);
        } else {
            myAckRadioButton.setSelected(true);
        }
    }

    private void updateReplyType() {
        if (myAckRadioButton.isSelected()) {
            myEvent.setReplyMessage(null);
        } else if (myEvent.getReplyMessage() == null) {
            myEvent.setReplyMessage(new Hl7V2MessageImpl());
        }
    }

    @Override
    public void tearDown() {
        myBaseEventEditorForm.tearDown();
        myBaseExpectMessageEditorForm.tearDown();
    }
}
