package com.iver.cit.jdwglib.dwg.readers.objreaders.v1314;

import java.util.List;
import com.iver.cit.jdwglib.dwg.CorruptedDwgEntityException;
import com.iver.cit.jdwglib.dwg.DwgHandleReference;
import com.iver.cit.jdwglib.dwg.DwgObject;
import com.iver.cit.jdwglib.dwg.DwgUtil;
import com.iver.cit.jdwglib.dwg.objects.DwgDimOrd;

public class DwgDimOrdReader1314 extends AbstractDwg1314Reader {

    public void readSpecificObj(int[] data, int offset, DwgObject dwgObj) throws RuntimeException, CorruptedDwgEntityException {
        if (!(dwgObj instanceof DwgDimOrd)) throw new RuntimeException("ArcReader 14 solo puede leer DwgDimOrd");
        DwgDimOrd dim = (DwgDimOrd) dwgObj;
        int bitPos = offset;
        bitPos = headTailReader.readObjectHeader(data, bitPos, dim);
        List val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double x = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double y = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double z = ((Double) val.get(1)).doubleValue();
        dim.setExtrusion(new double[] { x, y, z });
        val = DwgUtil.getRawDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        x = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getRawDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        y = ((Double) val.get(1)).doubleValue();
        dim.setTextMidPoint(new double[] { x, y });
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double elevation = ((Double) val.get(1)).doubleValue();
        dim.setElevation(elevation);
        val = DwgUtil.getRawChar(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        int flags = ((Integer) val.get(1)).intValue();
        dim.setFlags(flags);
        val = DwgUtil.getTextString(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        String txt = (String) val.get(1);
        dim.setText(txt);
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double textRotation = ((Double) val.get(1)).doubleValue();
        dim.setTextRotation(textRotation);
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double horizDir = ((Double) val.get(1)).doubleValue();
        dim.setHorizDir(horizDir);
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        x = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        y = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        z = ((Double) val.get(1)).doubleValue();
        dim.setInsScale(new double[] { x, y, z });
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double insRotation = ((Double) val.get(1)).doubleValue();
        dim.setInsRotation(insRotation);
        val = DwgUtil.getRawDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double v1 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getRawDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double v2 = ((Double) val.get(1)).doubleValue();
        dim.set12Pt(new double[] { v1, v2 });
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v1 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v2 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        double v3 = ((Double) val.get(1)).doubleValue();
        dim.set10Pt(new double[] { v1, v2, v3 });
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v1 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v2 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v3 = ((Double) val.get(1)).doubleValue();
        dim.set13Pt(new double[] { v1, v2, v3 });
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v1 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v2 = ((Double) val.get(1)).doubleValue();
        val = DwgUtil.getBitDouble(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        v3 = ((Double) val.get(1)).doubleValue();
        dim.set14Pt(new double[] { v1, v2, v3 });
        val = DwgUtil.getRawChar(data, bitPos);
        bitPos = ((Integer) val.get(0)).intValue();
        flags = ((Integer) val.get(1)).intValue();
        dim.setFlags2(flags);
        bitPos = headTailReader.readObjectTailer(data, bitPos, dim);
        DwgHandleReference handle = new DwgHandleReference();
        bitPos = handle.read(data, bitPos);
        dim.setDimStyleHandle(handle);
        handle = new DwgHandleReference();
        bitPos = handle.read(data, bitPos);
        dim.setAnonBlockHandle(handle);
    }
}
