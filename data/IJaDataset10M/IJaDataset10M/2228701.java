package com.ibm.realtime.flexotask;

/**
 * Represents an instantiated FlexotaskGraph from the outside standpoint.  The actual Runnables in the
 *   graph are directly accessible only to the scheduler.  This object provides an FlexotaskRunner which has, 
 *   in turn, been generated by the scheduler to allow outside control  of execution as defined by the scheduler.
 */
public interface FlexotaskGraph {

    /**
	 * Destroys the FlexotaskGraph and recovers resources associated with it.
	 */
    public void destroy();

    /**
	 * Obtains the guard object for a task iff that task's implementation extends {@link AtomicFlexotask}.
	 * @param taskName the name of the task whose guard object is requested
	 * @return the guard object or null if taskName does not name an atomic Flexotask in this graph
	 */
    public ExternalMethods getGuardObject(String taskName);

    /**
	 * Retrieves a Throwable that caused abnormal termination of this FlexotaskGraph.  Will return null if the graph has not begun
	 *   executing, is still executing, or completed normally.
	 * @return the exception or null
	 */
    public Throwable getException();

    /**
	 * Retrieves a FlexotaskRunner object that extends the control API provided by this class with additional methods that directly
	 *   control scheduler threads
	 * @return a FlexotaskRunner provided by the scheduler
	 */
    public FlexotaskRunner getRunner();
}
