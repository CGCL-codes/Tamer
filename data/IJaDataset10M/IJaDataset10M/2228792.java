package org.mitre.rt.client.ui.configuration;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import org.apache.log4j.*;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import org.mitre.rt.client.properties.RTClientProperties;
import org.mitre.rt.client.util.GlobalUITools;

/**
 *
 * @author BWORRELL
 */
public class EscapeConfigurationPanel extends javax.swing.JPanel implements IConfiguration {

    private static final Logger logger = Logger.getLogger(EscapeConfigurationPanel.class.getPackage().getName());

    private File escapeBinFile = null;

    private final RTClientProperties rtProps = RTClientProperties.instance();

    /** Creates new form EscapeConfigurationPanel */
    public EscapeConfigurationPanel() {
        initComponents();
        setCheckListener();
        initProperties();
    }

    private void setCheckListener() {
        this.checkEnabled.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                boolean selected = (e.getStateChange() == ItemEvent.SELECTED);
                GlobalUITools.enableComponentsWithinContainer(panelInstallation, selected);
                GlobalUITools.enableComponentsWithinContainer(panelJavaOpts, selected);
                txtInstallation.setBackground(txtJavaOpts.getBackground());
            }
        });
    }

    public void initProperties() {
        String installPath = this.rtProps.getEscapeDir() + File.separator + this.rtProps.getEscapeBin();
        List<String> javaOptsList = this.rtProps.getEscapeJavaOpts();
        String javaOpts = "";
        boolean enabled = this.rtProps.isEscapeEnabled();
        for (String opt : javaOptsList) {
            javaOpts += opt;
            javaOpts += " ";
        }
        this.txtInstallation.setText(installPath);
        this.txtJavaOpts.setText(javaOpts);
        this.checkEnabled.setSelected(enabled);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        fileChooserInstall = new javax.swing.JFileChooser();
        panelTop = new javax.swing.JPanel();
        panelCenter = new javax.swing.JPanel();
        panelEnabledContainer = new javax.swing.JPanel();
        panelEnabled = new javax.swing.JPanel();
        lblEnabled = new javax.swing.JLabel();
        checkEnabled = new javax.swing.JCheckBox();
        panelInstallation = new javax.swing.JPanel();
        lblInstallation = new javax.swing.JLabel();
        txtInstallation = new javax.swing.JTextField();
        separator1 = new javax.swing.JSeparator();
        btnBrowseInstallation = new javax.swing.JButton();
        panelJavaOpts = new javax.swing.JPanel();
        lblJavaOpts = new javax.swing.JLabel();
        txtJavaOpts = new javax.swing.JTextField();
        setLayout(new java.awt.BorderLayout());
        panelTop.setLayout(new javax.swing.BoxLayout(panelTop, javax.swing.BoxLayout.LINE_AXIS));
        add(panelTop, java.awt.BorderLayout.NORTH);
        panelCenter.setLayout(new javax.swing.BoxLayout(panelCenter, javax.swing.BoxLayout.Y_AXIS));
        panelEnabledContainer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelEnabledContainer.setMaximumSize(new java.awt.Dimension(2147483647, 23));
        panelEnabledContainer.setLayout(new java.awt.BorderLayout());
        panelEnabled.setMaximumSize(new java.awt.Dimension(166, 23));
        panelEnabled.setPreferredSize(new java.awt.Dimension(166, 23));
        panelEnabled.setLayout(new javax.swing.BoxLayout(panelEnabled, javax.swing.BoxLayout.LINE_AXIS));
        lblEnabled.setText("Enabled");
        lblEnabled.setMaximumSize(new java.awt.Dimension(85, 14));
        lblEnabled.setMinimumSize(new java.awt.Dimension(85, 14));
        lblEnabled.setPreferredSize(new java.awt.Dimension(85, 14));
        panelEnabled.add(lblEnabled);
        checkEnabled.setSelected(true);
        panelEnabled.add(checkEnabled);
        panelEnabledContainer.add(panelEnabled, java.awt.BorderLayout.WEST);
        panelCenter.add(panelEnabledContainer);
        panelInstallation.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelInstallation.setMaximumSize(new java.awt.Dimension(2147483647, 23));
        panelInstallation.setLayout(new javax.swing.BoxLayout(panelInstallation, javax.swing.BoxLayout.LINE_AXIS));
        lblInstallation.setText("Installation:");
        lblInstallation.setMaximumSize(new java.awt.Dimension(85, 14));
        lblInstallation.setMinimumSize(new java.awt.Dimension(85, 14));
        lblInstallation.setPreferredSize(new java.awt.Dimension(85, 14));
        panelInstallation.add(lblInstallation);
        txtInstallation.setBackground(new java.awt.Color(255, 255, 255));
        txtInstallation.setEditable(false);
        panelInstallation.add(txtInstallation);
        separator1.setMaximumSize(new java.awt.Dimension(5, 0));
        separator1.setMinimumSize(new java.awt.Dimension(5, 0));
        separator1.setPreferredSize(new java.awt.Dimension(5, 0));
        panelInstallation.add(separator1);
        btnBrowseInstallation.setText("Browse");
        btnBrowseInstallation.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseInstallationActionPerformed(evt);
            }
        });
        panelInstallation.add(btnBrowseInstallation);
        panelCenter.add(panelInstallation);
        panelJavaOpts.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        panelJavaOpts.setMaximumSize(new java.awt.Dimension(2147483647, 23));
        panelJavaOpts.setMinimumSize(new java.awt.Dimension(91, 23));
        panelJavaOpts.setPreferredSize(new java.awt.Dimension(100, 23));
        panelJavaOpts.setLayout(new javax.swing.BoxLayout(panelJavaOpts, javax.swing.BoxLayout.LINE_AXIS));
        lblJavaOpts.setText("Java Options");
        lblJavaOpts.setMaximumSize(new java.awt.Dimension(85, 14));
        lblJavaOpts.setMinimumSize(new java.awt.Dimension(85, 14));
        lblJavaOpts.setPreferredSize(new java.awt.Dimension(85, 14));
        panelJavaOpts.add(lblJavaOpts);
        panelJavaOpts.add(txtJavaOpts);
        panelCenter.add(panelJavaOpts);
        add(panelCenter, java.awt.BorderLayout.CENTER);
    }

    private void btnBrowseInstallationActionPerformed(java.awt.event.ActionEvent evt) {
        String currentInstallPath = this.txtInstallation.getText();
        this.fileChooserInstall = new JFileChooser(currentInstallPath);
        this.fileChooserInstall.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int result = this.fileChooserInstall.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            this.escapeBinFile = this.fileChooserInstall.getSelectedFile();
            this.txtInstallation.setText(this.escapeBinFile.getAbsolutePath());
        }
    }

    private javax.swing.JButton btnBrowseInstallation;

    private javax.swing.JCheckBox checkEnabled;

    private javax.swing.JFileChooser fileChooserInstall;

    private javax.swing.JLabel lblEnabled;

    private javax.swing.JLabel lblInstallation;

    private javax.swing.JLabel lblJavaOpts;

    private javax.swing.JPanel panelCenter;

    private javax.swing.JPanel panelEnabled;

    private javax.swing.JPanel panelEnabledContainer;

    private javax.swing.JPanel panelInstallation;

    private javax.swing.JPanel panelJavaOpts;

    private javax.swing.JPanel panelTop;

    private javax.swing.JSeparator separator1;

    private javax.swing.JTextField txtInstallation;

    private javax.swing.JTextField txtJavaOpts;

    @Override
    public void applyConfiguration() throws Exception {
        if (this.checkEnabled.isSelected()) {
            if (escapeBinFile != null) {
                this.rtProps.setEscapeDir(this.escapeBinFile.getParentFile().getCanonicalPath());
                this.rtProps.setEscapeBin(this.escapeBinFile.getName());
            }
            this.rtProps.setEscapeJavaOpts(this.txtJavaOpts.getText());
        }
        this.rtProps.setEscapeEnabled(this.checkEnabled.isSelected());
    }
}
