package org.junian.jtrmailclient.gui;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.junian.jtrmailclient.Header;
import org.junian.jtrmailclient.Message;
import org.junian.jtrmailclient.Pop3Client;

/**
 *
 * @author bakajunichi
 */
public class MainFrame extends javax.swing.JFrame {

    private Pop3Client client = null;

    private Map<Integer, Header> headers = null;

    private Map<Integer, Message> messageDownloaded = null;

    private TableFiller tbl = null;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        headers = new HashMap<Integer, Header>();
        messageDownloaded = new HashMap<Integer, Message>();
        resetTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMailServer = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        chkUseSsl = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMails = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUndoDelete = new javax.swing.JButton();
        txtFrom = new javax.swing.JTextField();
        txtSubject = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnStat = new javax.swing.JButton();
        btnNoop = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        txtListIndex = new javax.swing.JTextField();
        btnListAll = new javax.swing.JButton();
        btnDele = new javax.swing.JButton();
        btnRetr = new javax.swing.JButton();
        txtRetr = new javax.swing.JTextField();
        txtDele = new javax.swing.JTextField();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JTr Mail");
        addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Mail Settings"));
        jLabel1.setText("Mail Server:");
        jLabel2.setText("Username:");
        jLabel3.setText("Password:");
        txtMailServer.setText("mail.its.ac.id");
        jLabel4.setText("Port:");
        txtPort.setText("110");
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        chkUseSsl.setText("use SSL");
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(txtUsername)).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(txtMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(35, 35, 35).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel3).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup().addComponent(chkUseSsl).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnLogin)).addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false).addComponent(jLabel1).addComponent(txtMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false).addComponent(jLabel2).addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3)).addGap(6, 6, 6).addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnLogin).addComponent(chkUseSsl)).addContainerGap(17, Short.MAX_VALUE)));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Your Mail"));
        txtMessage.setContentType("text/html");
        txtMessage.setEditable(false);
        txtMessage.setText("<html>\r   <head>\r \r   </head>\r   <body>\r     <p style=\"margin-top: 0\">\r      <a href=\"http://www.its.ac.id\">Everything Goes here</a>     </p>\r   </body>\r </html>\r ");
        jScrollPane1.setViewportView(txtMessage);
        tblMails.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } }, new String[] { "", "", "From", "Subject" }) {

            Class[] types = new Class[] { java.lang.Integer.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class };

            boolean[] canEdit = new boolean[] { false, true, false, false };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblMails.setColumnSelectionAllowed(true);
        tblMails.getTableHeader().setReorderingAllowed(false);
        tblMails.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblMailsMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblMails);
        tblMails.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblMails.getColumnModel().getColumn(0).setResizable(false);
        tblMails.getColumnModel().getColumn(0).setPreferredWidth(1);
        tblMails.getColumnModel().getColumn(1).setResizable(false);
        tblMails.getColumnModel().getColumn(1).setPreferredWidth(1);
        tblMails.getColumnModel().getColumn(2).setPreferredWidth(500);
        tblMails.getColumnModel().getColumn(3).setPreferredWidth(1000);
        jLabel5.setText("From:");
        jLabel6.setText("Subject:");
        jLabel7.setText("Date:");
        btnDelete.setText("Delete Selected");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        btnUndoDelete.setText("Undo Delete");
        btnUndoDelete.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoDeleteActionPerformed(evt);
            }
        });
        txtFrom.setEditable(false);
        txtSubject.setEditable(false);
        txtDate.setEditable(false);
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE).addGroup(jPanel2Layout.createSequentialGroup().addComponent(btnUndoDelete).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btnDelete))).addGap(14, 14, 14).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGap(2, 2, 2).addComponent(jLabel6)).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel5).addComponent(jLabel7))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(txtDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE).addComponent(txtFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE).addComponent(txtSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)))).addContainerGap()));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup().addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnUndoDelete).addComponent(btnDelete))).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(8, 8, 8).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel7)).addGap(9, 9, 9).addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))).addContainerGap()));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Manual Commands"));
        btnStat.setText("STAT");
        btnStat.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatActionPerformed(evt);
            }
        });
        btnNoop.setText("NOOP");
        btnNoop.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoopActionPerformed(evt);
            }
        });
        btnList.setText("LIST");
        btnList.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });
        btnListAll.setText("LIST");
        btnListAll.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListAllActionPerformed(evt);
            }
        });
        btnDele.setText("DELE");
        btnDele.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleActionPerformed(evt);
            }
        });
        btnRetr.setText("RETR");
        btnRetr.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addContainerGap().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(btnStat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnListAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnNoop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(btnDele, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnRetr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btnList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(txtDele).addComponent(txtRetr).addComponent(txtListIndex, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)).addContainerGap(88, Short.MAX_VALUE)));
        jPanel3Layout.setVerticalGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel3Layout.createSequentialGroup().addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnStat).addComponent(btnList).addComponent(txtListIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnNoop).addComponent(btnRetr).addComponent(txtRetr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnListAll).addComponent(btnDele).addComponent(txtDele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE).addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width - 859) / 2, (screenSize.height - 674) / 2, 859, 674);
    }

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {
        String cmd = btnLogin.getText();
        if (cmd.compareTo("Login") == 0) {
            try {
                int port = Integer.parseInt(txtPort.getText());
                String mailServer = txtMailServer.getText();
                client = new Pop3Client(mailServer, port, chkUseSsl.isSelected());
                String username = txtUsername.getText();
                String password = txtPassword.getText();
                if (!client.login(username, password)) {
                    JOptionPane.showMessageDialog(this, "Login failed! Try Again");
                    return;
                }
                showHeaderOnTable();
                btnLogin.setText("Logout");
            } catch (Exception ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Something wrong with the server!");
            }
        } else {
            try {
                client.close();
                messageDownloaded.clear();
                headers.clear();
                if (tbl != null && tbl.isAlive()) tbl.stop();
                resetTable();
                btnLogin.setText("Login");
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Something wrong when logging out!");
            }
        }
    }

    private void formWindowClosing(java.awt.event.WindowEvent evt) {
        if (client != null && client.isConnected()) try {
            client.close();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Oops! Something wrong when closing!");
        }
    }

    private void btnStatActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String[] s = client.getStatistics();
            JOptionPane.showMessageDialog(this, "Total message: " + s[0] + ", Octet: " + s[1]);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Oops! Something wrong with STAT");
        }
    }

    private void tblMailsMousePressed(java.awt.event.MouseEvent evt) {
        int row = tblMails.getSelectedRow();
        if (row > -1) {
            int col = tblMails.getSelectedColumn();
            if (col > 1) {
                Message msg = null;
                try {
                    int index = (Integer) tblMails.getValueAt(row, 0);
                    if (messageDownloaded.get(index) == null) {
                        msg = client.retrieveMessage(index);
                        messageDownloaded.put(index, msg);
                    } else {
                        msg = messageDownloaded.get(index);
                    }
                    System.out.println(client.getMessagePath() + "\\" + msg.getMessageFile());
                    txtMessage.setPage(new File(client.getMessagePath() + "\\" + msg.getMessageFile()).toURL());
                    txtFrom.setText(msg.getHeader("from"));
                    txtSubject.setText(msg.getHeader("subject"));
                    txtDate.setText(msg.getHeader("date"));
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Wow, something wrong when loading message");
                }
            }
        }
    }

    private void btnNoopActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            JOptionPane.showMessageDialog(null, "NOOP response: " + client.noop());
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Woot, something wrong with NOOP");
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblMails.getModel();
            for (int i = 0; i < dtm.getRowCount(); i++) {
                if (dtm.getValueAt(i, 1).equals(true)) {
                    client.deleteMessage((Integer) dtm.getValueAt(i, 0));
                }
            }
            showHeaderOnTable();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Something wrong when deleting message");
        }
    }

    private void btnUndoDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            client.undoDelete();
            showHeaderOnTable();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Something wrong with RSET");
        }
    }

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            int s = client.getList(Integer.parseInt(txtListIndex.getText()));
            if (s < 0) {
                JOptionPane.showMessageDialog(this, "No Such Message");
            } else {
                JOptionPane.showMessageDialog(this, "LIST response: " + s + " octet");
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Whot, something wrong with LIST [msg]");
        }
    }

    private void btnListAllActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String[] list = client.getList();
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < list.length; i++) {
                sb.append(list[i]).append("\n");
            }
            JOptionPane.showMessageDialog(this, sb.toString());
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Something wrong");
        }
    }

    private void btnDeleActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            if (client.deleteMessage(Integer.parseInt(txtDele.getText()))) {
                JOptionPane.showMessageDialog(this, "Message Deleted");
            } else {
                JOptionPane.showMessageDialog(this, "Message not found");
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Something wrong with DELE");
        }
    }

    private void btnRetrActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            int index = Integer.parseInt(txtRetr.getText());
            Message msg = null;
            if (messageDownloaded.get(index) == null) {
                try {
                    msg = client.retrieveMessage(index);
                    messageDownloaded.put(index, msg);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                msg = messageDownloaded.get(index);
            }
            System.out.println(client.getMessagePath() + "\\" + msg.getMessageFile());
            txtMessage.setPage(new File(client.getMessagePath() + "\\" + msg.getMessageFile()).toURL());
            txtFrom.setText(msg.getHeader("from"));
            txtSubject.setText(msg.getHeader("subject"));
            txtDate.setText(msg.getHeader("date"));
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Something wrong with RETR");
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    private void showHeaderOnTable() throws IOException {
        String[] headerList = client.getList();
        DefaultTableModel dtm = (DefaultTableModel) tblMails.getModel();
        dtm.setRowCount(0);
        if (tbl != null && tbl.isAlive()) tbl.stop();
        tbl = new TableFiller(headers, headerList, dtm, client);
        tbl.start();
    }

    private void resetTable() {
        DefaultTableModel dt = (DefaultTableModel) tblMails.getModel();
        dt.setRowCount(0);
    }

    private javax.swing.JButton btnDele;

    private javax.swing.JButton btnDelete;

    private javax.swing.JButton btnList;

    private javax.swing.JButton btnListAll;

    private javax.swing.JButton btnLogin;

    private javax.swing.JButton btnNoop;

    private javax.swing.JButton btnRetr;

    private javax.swing.JButton btnStat;

    private javax.swing.JButton btnUndoDelete;

    private javax.swing.JCheckBox chkUseSsl;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel3;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel jLabel7;

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel jPanel2;

    private javax.swing.JPanel jPanel3;

    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JScrollPane jScrollPane2;

    private javax.swing.JTable tblMails;

    private javax.swing.JTextField txtDate;

    private javax.swing.JTextField txtDele;

    private javax.swing.JTextField txtFrom;

    private javax.swing.JTextField txtListIndex;

    private javax.swing.JTextField txtMailServer;

    private javax.swing.JEditorPane txtMessage;

    private javax.swing.JPasswordField txtPassword;

    private javax.swing.JTextField txtPort;

    private javax.swing.JTextField txtRetr;

    private javax.swing.JTextField txtSubject;

    private javax.swing.JTextField txtUsername;
}
