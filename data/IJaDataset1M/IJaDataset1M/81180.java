package plugin.charactersheet.gui;

import java.awt.Color;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

/**
 *
 * @author  ddjone3
 */
public class DualListPane extends javax.swing.JPanel {

    private Map map = new HashMap();

    /** Creates new form featPane */
    public DualListPane() {
        initComponents();
        setLocalColor();
    }

    /** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        listPane = new javax.swing.JPanel();
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 1, 0));
        title.setFont(new java.awt.Font("Dialog", 1, 14));
        title.setText(" ");
        jPanel1.add(title);
        add(jPanel1);
        listPane.setLayout(new gmgen.gui.GridBoxLayout(0, 1));
        add(listPane);
    }

    private javax.swing.JPanel jPanel1;

    private javax.swing.JPanel listPane;

    private javax.swing.JLabel title;

    /**
	 * Set color
	 */
    public void setColor() {
        setLocalColor();
        refresh();
    }

    /**
	 * Set local colour
	 */
    public void setLocalColor() {
        setBackground(CharacterPanel.white);
        jPanel1.setBackground(CharacterPanel.header);
        jPanel1.setBorder(new javax.swing.border.LineBorder(CharacterPanel.border));
        listPane.setBackground(CharacterPanel.white);
        listPane.setBorder(new javax.swing.border.LineBorder(CharacterPanel.border));
    }

    /**
	 * Set map
	 * @param title
	 * @param map
	 */
    public void setMap(String title, Map map) {
        this.map = map;
        this.title.setText(title);
        setVisible(false);
        refresh();
    }

    /**
	 * Refresh
	 */
    public void refresh() {
        if (map.size() > 0) {
            setVisible(true);
            listPane.removeAll();
            Set keySet = map.keySet();
            int i = 0;
            for (Iterator it = keySet.iterator(); it.hasNext(); ) {
                String key = (String) it.next();
                Color color;
                if (i % 2 == 0) {
                    color = CharacterPanel.bodyLight;
                } else {
                    color = CharacterPanel.bodyMedLight;
                }
                addLine(key, (String) map.get(key), color);
                i++;
            }
        } else {
            setVisible(false);
        }
    }

    private void addLine(String text1, String text2, Color color) {
        javax.swing.JTextArea listDisplay1 = new javax.swing.JTextArea();
        listDisplay1.setLineWrap(true);
        listDisplay1.setWrapStyleWord(true);
        listDisplay1.setBackground(color);
        listDisplay1.setFont(new java.awt.Font("Dialog", 1, 11));
        listDisplay1.setText(text1);
        listPane.add(listDisplay1);
        if (!text2.equals("")) {
            javax.swing.JTextArea listDisplay2 = new javax.swing.JTextArea();
            listDisplay2.setLineWrap(true);
            listDisplay2.setWrapStyleWord(true);
            listDisplay2.setBackground(color);
            listDisplay2.setFont(new java.awt.Font("Dialog", 0, 10));
            listDisplay2.setText(text2);
            listPane.add(listDisplay2);
        }
    }

    /**
	 * Destroy
	 */
    public void destruct() {
    }
}
