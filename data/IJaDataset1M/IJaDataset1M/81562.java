package net.sf.gham.plugins.panels.opponent.team;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import net.sf.gham.core.entity.league.League;
import net.sf.gham.core.entity.team.otherteam.Team;
import net.sf.gham.core.gui.league.LeagueClassificationPanel;
import net.sf.gham.plugins.panels.team.detail.infopanel.TeamInfoPanel;
import net.sf.gham.swing.plugin.panel.PluginPanel;
import net.sf.gham.swing.preferences.PreferencesTab;
import net.sf.gham.swing.table.JTableExt;
import net.sf.gham.swing.table.TableTwoTitle;
import net.sf.gham.swing.view.IStatisticPanel;
import net.sf.jtwa.Messages;

/**
 *
 * @author  Fabio Collini
 */
public class TeamPanel extends javax.swing.JPanel implements IStatisticPanel<Team>, PluginPanel<Team> {

    private LeagueClassificationPanel leagueTablePanel;

    /** Creates new form MyTeamPanel */
    public TeamPanel() {
        initComponents();
        leagueTablePanel.setBorder(new javax.swing.border.TitledBorder(""));
        JTableExt lt = leagueTablePanel.getTable();
        lt.setPreferredScrollableViewportSize(new Dimension((int) lt.getPreferredSize().getWidth(), lt.getRowHeight() * 8));
        lt.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ((TableTwoTitle) formationTable).init(new String[] { "5-4-1", "5-3-2", "5-2-3", "4-5-1", "4-4-2", "4-3-3", "3-5-2", "3-4-3", "2-5-3" }, new String[] { Messages.getString("League"), Messages.getString("Cup"), Messages.getString("Friendly") }, 100);
        ((TableTwoTitle) tacticTable).init(new String[] { Messages.getString("Normal"), Messages.getString("Pressing"), Messages.getString("Counter-attacks"), Messages.getString("Attack_in_the_middle"), Messages.getString("Attack_in_wings"), Messages.getString("Play_creatively") }, new String[] { Messages.getString("League"), Messages.getString("Cup"), Messages.getString("Friendly") }, 100);
    }

    public void save() {
        leagueTablePanel.save();
    }

    public void setLeague(League league) {
        if (league != null) {
            leagueTablePanel.setBorder(new javax.swing.border.TitledBorder(league.getName()));
            leagueTablePanel.setObject(league);
        }
    }

    private Team team;

    /** Aggiorna il pannello impostando il nuovo team da mostrare*/
    public void setObject(Team t) {
        if (t != null && team != t) {
            this.team = t;
            setLeague(team.getLeague());
            mainPanel.setTeam(team);
            teamNameLabel.setText(team.getName() + " (" + team.getId() + ")");
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    ((TableTwoTitle) formationTable).setDataVector(team.getFormations());
                    ((TableTwoTitle) tacticTable).setDataVector(team.getTactics());
                }
            });
            leagueTablePanel.setTeam(t);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        leagueTablePanel = new LeagueClassificationPanel("LeagueClassificationTable");
        teamNameLabel = new javax.swing.JLabel();
        mainPanel = new TeamInfoPanel(false);
        jPanel3 = new javax.swing.JPanel();
        formationPanel = new javax.swing.JPanel();
        formationTable = new TableTwoTitle();
        tacticPanel = new javax.swing.JPanel();
        tacticTable = new TableTwoTitle();
        setLayout(new java.awt.GridBagLayout());
        teamNameLabel.setFont(new java.awt.Font("Dialog", 1, 24));
        teamNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teamNameLabel.setText(" ");
        java.awt.GridBagConstraints gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.gridwidth = 2;
        gridBagConstraints1.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints1.ipady = 7;
        gridBagConstraints1.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints1.insets = new java.awt.Insets(4, 0, 8, 0);
        java.awt.GridBagConstraints gridBagConstraints2 = new java.awt.GridBagConstraints();
        gridBagConstraints2.gridx = 1;
        gridBagConstraints2.gridy = 0;
        gridBagConstraints2.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints2.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints2.weightx = 1.0D;
        gridBagConstraints2.weighty = 0.0D;
        gridBagConstraints2.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel3.setLayout(new java.awt.GridBagLayout());
        formationPanel.setLayout(new java.awt.BorderLayout());
        formationPanel.setBorder(new javax.swing.border.TitledBorder(Messages.getString("Formations")));
        formationPanel.add(formationTable, java.awt.BorderLayout.CENTER);
        java.awt.GridBagConstraints gridBagConstraints3 = new java.awt.GridBagConstraints();
        gridBagConstraints3.gridx = 0;
        gridBagConstraints3.gridy = 0;
        gridBagConstraints3.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints3.weightx = 1.0;
        jPanel3.add(formationPanel, gridBagConstraints3);
        tacticPanel.setLayout(new java.awt.GridLayout(1, 1));
        tacticPanel.setBorder(new javax.swing.border.TitledBorder(Messages.getString("Tactics")));
        tacticPanel.add(tacticTable);
        GridBagConstraints gridBagConstraints4 = new java.awt.GridBagConstraints();
        gridBagConstraints4.gridx = 0;
        gridBagConstraints4.gridy = 1;
        gridBagConstraints4.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints4.weightx = 1.0;
        gridBagConstraints4.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel3.add(tacticPanel, gridBagConstraints4);
        GridBagConstraints gridBagConstraints5 = new java.awt.GridBagConstraints();
        gridBagConstraints5.gridx = 0;
        gridBagConstraints5.gridy = 0;
        gridBagConstraints5.gridwidth = 2;
        gridBagConstraints5.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints5.weightx = 1.0;
        gridBagConstraints5.insets = new java.awt.Insets(10, 5, 0, 5);
        GridBagConstraints gridBagConstraints6 = new java.awt.GridBagConstraints();
        gridBagConstraints6.gridx = 0;
        gridBagConstraints6.gridy = 1;
        gridBagConstraints6.gridwidth = 1;
        gridBagConstraints6.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints6.weightx = 1.0;
        gridBagConstraints6.insets = new java.awt.Insets(10, 5, 0, 5);
        this.add(teamNameLabel, gridBagConstraints5);
        GridBagConstraints gridBagConstraints7 = new java.awt.GridBagConstraints();
        gridBagConstraints7.gridx = 0;
        gridBagConstraints7.gridy = 2;
        gridBagConstraints7.gridwidth = 2;
        gridBagConstraints7.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints7.weightx = 1.0;
        gridBagConstraints7.insets = new java.awt.Insets(10, 5, 0, 5);
        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.0D;
        this.add(mainPanel, gridBagConstraints6);
        this.add(jPanel3, gridBagConstraints7);
        this.add(leagueTablePanel, gridBagConstraints);
    }

    private javax.swing.JPanel formationPanel;

    private javax.swing.JTable formationTable;

    private javax.swing.JPanel jPanel3;

    private TeamInfoPanel mainPanel;

    private javax.swing.JPanel tacticPanel;

    private javax.swing.JTable tacticTable;

    private javax.swing.JLabel teamNameLabel;

    private JScrollPane scrollPane = new JScrollPane(this);

    public List<PreferencesTab> getPreferencesPanels() {
        return null;
    }

    public String getLabel() {
        return Messages.getString("Team");
    }

    public JComponent getComponent() {
        return scrollPane;
    }
}
