package org.fudaa.dodico.corba.hydraulique1d.loi;

/**
* org/fudaa/dodico/corba/hydraulique1d/loi/ILoiGeometrique_Tie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/devel/fudaa/fudaa_devel/dodico/idl/metier/hydraulique1d.idl
* mercredi 6 aoï¿½t 2008 22 h 27 CEST
*/
public class ILoiGeometrique_Tie extends ILoiGeometriquePOA {

    public ILoiGeometrique_Tie(org.fudaa.dodico.corba.hydraulique1d.loi.ILoiGeometriqueOperations delegate) {
        this._impl = delegate;
    }

    public ILoiGeometrique_Tie(org.fudaa.dodico.corba.hydraulique1d.loi.ILoiGeometriqueOperations delegate, org.omg.PortableServer.POA poa) {
        this._impl = delegate;
        this._poa = poa;
    }

    public org.fudaa.dodico.corba.hydraulique1d.loi.ILoiGeometriqueOperations _delegate() {
        return this._impl;
    }

    public void _delegate(org.fudaa.dodico.corba.hydraulique1d.loi.ILoiGeometriqueOperations delegate) {
        this._impl = delegate;
    }

    public org.omg.PortableServer.POA _default_POA() {
        if (_poa != null) {
            return _poa;
        } else {
            return super._default_POA();
        }
    }

    public double[] d() {
        return _impl.d();
    }

    public void d(double[] newD) {
        _impl.d(newD);
    }

    public double[] z() {
        return _impl.z();
    }

    public void z(double[] newZ) {
        _impl.z(newZ);
    }

    public double gdu(int i) {
        return _impl.gdu(i);
    }

    public void sdu(int i, double v) {
        _impl.sdu(i, v);
    }

    public double gzu(int i) {
        return _impl.gzu(i);
    }

    public void szu(int i, double v) {
        _impl.szu(i, v);
    }

    public int numero() {
        return _impl.numero();
    }

    public void numero(int newNumero) {
        _impl.numero(newNumero);
    }

    public int indice() {
        return _impl.indice();
    }

    public void indice(int newIndice) {
        _impl.indice(newIndice);
    }

    public String nom() {
        return _impl.nom();
    }

    public void nom(String newNom) {
        _impl.nom(newNom);
    }

    public void creePoint(int indice) {
        _impl.creePoint(indice);
    }

    public void supprimePoints(int[] indices) {
        _impl.supprimePoints(indices);
    }

    public void setValeur(double valeur, int ligne, int colonne) {
        _impl.setValeur(valeur, ligne, colonne);
    }

    public void setPoints(double[][] points) {
        _impl.setPoints(points);
    }

    public String typeLoi() {
        return _impl.typeLoi();
    }

    public int nbPoints() {
        return _impl.nbPoints();
    }

    public boolean verifiePermanent() {
        return _impl.verifiePermanent();
    }

    public boolean verifieTempsNonPermanent() {
        return _impl.verifieTempsNonPermanent();
    }

    public double getValeur(int ligne, int colonne) {
        return _impl.getValeur(ligne, colonne);
    }

    public double[][] pointsToDoubleArray() {
        return _impl.pointsToDoubleArray();
    }

    public String[] getInfos() {
        return _impl.getInfos();
    }

    public void dispose() {
        _impl.dispose();
    }

    public void initialise(org.fudaa.dodico.corba.objet.IObjet o) {
        _impl.initialise(o);
    }

    public void reconnecte(String nom) {
        _impl.reconnecte(nom);
    }

    public org.fudaa.dodico.corba.objet.IObjet creeClone() {
        return _impl.creeClone();
    }

    public String moduleCorba() {
        return _impl.moduleCorba();
    }

    public String[] interfacesCorba() {
        return _impl.interfacesCorba();
    }

    public boolean egale(org.fudaa.dodico.corba.objet.IObjet o) {
        return _impl.egale(o);
    }

    public int codeHachage() {
        return _impl.codeHachage();
    }

    public String enChaine() {
        return _impl.enChaine();
    }

    private org.fudaa.dodico.corba.hydraulique1d.loi.ILoiGeometriqueOperations _impl;

    private org.omg.PortableServer.POA _poa;
}
