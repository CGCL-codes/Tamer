package userbasedqueuecontrol.client;

import clubmixer.commons.plugins.annotations.CommunicationChannel;
import clubmixer.commons.plugins.annotations.SearchresultHandler;
import clubmixer.commons.plugins.client.handler.searchResult.SearchResultHandler;
import clubmixer.commons.plugins.client.handler.songInfo.SongInfoChangeListener;
import clubmixer.commons.plugins.client.handler.songInfo.SongInfoEvent;
import clubmixer.commons.plugins.client.handler.user.UserEvent;
import clubmixer.commons.plugins.client.handler.user.UserListener;
import clubmixer.commons.plugins.communication.ICommunicationChannel;
import clubmixer.commons.plugins.communication.PluginInvocationResult;
import com.slychief.clubmixer.server.library.entities.ClubmixerUser;
import com.slychief.clubmixer.server.library.entities.Song;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import userbasedqueuecontrol.IUserbasedQueueControlPreferences;

/**
 *
 * @author Alexander Schindler
 */
public class ControlPanel extends javax.swing.JPanel implements SongInfoChangeListener, UserListener {

    @CommunicationChannel(pluginname = IUserbasedQueueControlPreferences.NAME)
    private ICommunicationChannel comChannel;

    @SearchresultHandler
    private SearchResultHandler searchResultHandler;

    private Song currentSong;

    private ClubmixerUser currentUser;

    /** Creates new form ControlPanel */
    public ControlPanel() {
        initComponents();
        initControlPanel();
    }

    private void getRatingFromServer() {
        HashMap params = new HashMap();
        params.put("userid", currentUser.getId());
        params.put("songid", currentSong.getId());
        PluginInvocationResult result = comChannel.requestResponse("getRatings", params);
        Integer userrating = (Integer) result.getData().get("userrating");
        Float totalrating = (Float) result.getData().get("totalrating");
        if (userrating == null) {
            lbl_rating.setText("no rating");
            setRater(0);
        } else {
            lbl_rating.setText(userrating.toString());
            setRater(userrating);
        }
        if (totalrating == null) {
            lbl_global.setText("no rating");
        } else {
            lbl_global.setText(totalrating.toString());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        ratings = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbl_song = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rb_rate1 = new javax.swing.JRadioButton();
        rb_rate2 = new javax.swing.JRadioButton();
        rb_rate3 = new javax.swing.JRadioButton();
        rb_rate4 = new javax.swing.JRadioButton();
        rb_rate5 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        lbl_rating = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_global = new javax.swing.JLabel();
        btn_rate = new javax.swing.JButton();
        btn_allRatedSongs = new javax.swing.JButton();
        btnGetPlaylist = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1.setText("Logged in as");
        jLabel2.setText("Song:");
        lbl_song.setText("Artist - Name");
        jLabel4.setText("Your Rating:");
        ratings.add(rb_rate1);
        ratings.add(rb_rate2);
        ratings.add(rb_rate3);
        ratings.add(rb_rate4);
        ratings.add(rb_rate5);
        jLabel5.setText("Rating:");
        lbl_rating.setText("3,5");
        jLabel6.setText("/ Global:");
        lbl_global.setText("2,3");
        btn_rate.setText("Rate");
        btn_rate.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rateActionPerformed(evt);
            }
        });
        btn_allRatedSongs.setText("Get all my rated songs");
        btn_allRatedSongs.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_allRatedSongsActionPerformed(evt);
            }
        });
        btnGetPlaylist.setText("Get Playlist");
        btnGetPlaylist.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetPlaylistActionPerformed(evt);
            }
        });
        jButton1.setText("Transfer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(10, 10, 10).addComponent(lbl_song)).addGroup(layout.createSequentialGroup().addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(lbl_username)).addComponent(jLabel2).addComponent(jLabel4).addGroup(layout.createSequentialGroup().addGap(10, 10, 10).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel5).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lbl_rating).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel6).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lbl_global)).addGroup(layout.createSequentialGroup().addComponent(rb_rate1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(rb_rate2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(rb_rate3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(rb_rate4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(rb_rate5))))).addContainerGap(170, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(271, Short.MAX_VALUE).addComponent(btn_rate).addContainerGap()).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap(108, Short.MAX_VALUE).addComponent(jButton1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(btnGetPlaylist, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(btn_allRatedSongs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(lbl_username)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lbl_song).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(rb_rate1).addComponent(rb_rate2).addComponent(rb_rate3))).addComponent(rb_rate4).addComponent(rb_rate5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel5).addComponent(lbl_rating).addComponent(jLabel6).addComponent(lbl_global)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(btn_rate).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE).addComponent(btnGetPlaylist).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btn_allRatedSongs).addComponent(jButton1)).addContainerGap()));
    }

    private void btn_rateActionPerformed(java.awt.event.ActionEvent evt) {
        HashMap params = new HashMap();
        params.put("userid", currentUser.getId());
        params.put("songid", currentSong.getId());
        params.put("rate", getSongRating());
        comChannel.fireAndForget("rateSong", params);
        getRatingFromServer();
    }

    private void btn_allRatedSongsActionPerformed(java.awt.event.ActionEvent evt) {
        HashMap params = new HashMap();
        params.put("userid", currentUser.getId());
        Song[] myRatedSongs = comChannel.querySongs("getAllRatedSongs", params);
        searchResultHandler.fireSearchResultChanged(myRatedSongs);
    }

    private void btnGetPlaylistActionPerformed(java.awt.event.ActionEvent evt) {
        HashMap params = new HashMap();
        Song[] playlist = comChannel.querySongs("getPlaylist", params);
        searchResultHandler.fireSearchResultChanged(playlist);
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream("test.mp3");
            HashMap params = new HashMap();
            params.put("songid", 1);
            DataHandler handler = comChannel.getFile("downloadFile", params);
            ByteArrayOutputStream bos = (ByteArrayOutputStream) handler.getOutputStream();
            fos.write(bos.toByteArray());
            bos.close();
        } catch (IOException ex) {
            ex.printStackTrace();
        } finally {
            try {
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(ControlPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private javax.swing.JButton btnGetPlaylist;

    private javax.swing.JButton btn_allRatedSongs;

    private javax.swing.JButton btn_rate;

    private javax.swing.JButton jButton1;

    private javax.swing.JLabel jLabel1;

    private javax.swing.JLabel jLabel2;

    private javax.swing.JLabel jLabel4;

    private javax.swing.JLabel jLabel5;

    private javax.swing.JLabel jLabel6;

    private javax.swing.JLabel lbl_global;

    private javax.swing.JLabel lbl_rating;

    private javax.swing.JLabel lbl_song;

    private javax.swing.JLabel lbl_username;

    private javax.swing.ButtonGroup ratings;

    private javax.swing.JRadioButton rb_rate1;

    private javax.swing.JRadioButton rb_rate2;

    private javax.swing.JRadioButton rb_rate3;

    private javax.swing.JRadioButton rb_rate4;

    private javax.swing.JRadioButton rb_rate5;

    @Override
    public void onSongInfoChanged(SongInfoEvent se) {
        currentSong = se.getSong();
        lbl_song.setText(currentSong.getArtist() + " - " + currentSong.getTitle());
        getRatingFromServer();
    }

    @Override
    public void userChanged(UserEvent event) {
        this.currentUser = event.getUser();
        lbl_username.setText(currentUser.getLogin());
    }

    private void setRater(Integer rating) {
        if (rating == -2) rb_rate1.setSelected(true); else if (rating == -1) rb_rate2.setSelected(true); else if (rating == 0) rb_rate3.setSelected(true); else if (rating == 1) rb_rate4.setSelected(true); else if (rating == 2) rb_rate5.setSelected(true);
    }

    private String getSongRating() {
        if (rb_rate1.isSelected()) return "-2"; else if (rb_rate2.isSelected()) return "-1"; else if (rb_rate3.isSelected()) return "0"; else if (rb_rate4.isSelected()) return "1"; else if (rb_rate5.isSelected()) return "2";
        return "0";
    }

    private void initControlPanel() {
    }
}
