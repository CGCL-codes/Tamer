package org.didicero.base.entity;

/**
 * Autogenerated POJO EJB class for ModuleAttendance containing the 
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * <p>
 * <html>
 * </p>
 * <p>
 * <head>
 * </p>
 * <p>
 * </head>
 * </p>
 * <p>
 * <body>
 * </p>
 * <p>
 * <p>
 * </p>
 * <p>
 * The <a
 * href="mdel://_9_5_1_25e60543_1263927430859_962595_3652">ModuleAttendance</a>
 * </p>
 * <p>
 * is the root of all user specific activities concerning this <a
 * href="mdel://_9_5_1_25e60543_1263069087375_874782_5273">LearningModule</a>.
 * </p>
 * <p>
 * </p>
 * </p>
 * <p>
 * </body>
 * </p>
 * <p>
 * </html>
 * </p>
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "MODULE_ATTENDANCE")
@javax.persistence.NamedQuery(name = "ModuleAttendance.findAll", query = "select moduleAttendance from ModuleAttendance AS moduleAttendance")
public class ModuleAttendance extends ModelObject implements java.io.Serializable, Comparable<ModuleAttendance> {

    private static final long serialVersionUID = -922263889038669524L;

    private java.lang.Long id;

    private org.didicero.base.entity.LearningModule learningModule;

    private java.util.Set<org.didicero.base.entity.Statistics> statistics = new java.util.TreeSet<org.didicero.base.entity.Statistics>();

    private org.didicero.base.entity.Test modulesTest;

    private java.util.Set<org.didicero.base.entity.TestResult> testResults = new java.util.TreeSet<org.didicero.base.entity.TestResult>();

    /**
     * Default empty constructor
     */
    public ModuleAttendance() {
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param learningModule Value for the learningModule relation
     * @param statistics Value for the statistics relation
     * @param modulesTest Value for the modulesTest relation
     * @param testResults Value for the testResults relation
     */
    public ModuleAttendance(org.didicero.base.entity.LearningModule learningModule, java.util.Set<org.didicero.base.entity.Statistics> statistics, org.didicero.base.entity.Test modulesTest, java.util.Set<org.didicero.base.entity.TestResult> testResults) {
        setLearningModule(learningModule);
        setStatistics(statistics);
        setModulesTest(modulesTest);
        setTestResults(testResults);
    }

    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getId() {
        return id;
    }

    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        firePropertyChange("id", this.id, this.id = value);
    }

    /**
     * Get the learningModule
     *
     * @return org.didicero.base.entity.LearningModule
     */
    @javax.persistence.ManyToOne(optional = false)
    @javax.persistence.JoinColumn(name = "LEARNING_MODULE_FK")
    public org.didicero.base.entity.LearningModule getLearningModule() {
        return this.learningModule;
    }

    /**
    * Set the learningModule
    *
    * @param learningModule
    */
    public void setLearningModule(org.didicero.base.entity.LearningModule learningModule) {
        firePropertyChange("learningModule", this.learningModule, this.learningModule = learningModule);
    }

    /**
     * Get the statistics Collection
     *
     * @return java.util.Set<org.didicero.base.entity.Statistics>
     */
    @javax.persistence.OneToMany(mappedBy = "moduleAttendance")
    public java.util.Set<org.didicero.base.entity.Statistics> getStatistics() {
        return this.statistics;
    }

    /**
     * Set the statistics
     *
     * @param statistics
     */
    public void setStatistics(java.util.Set<org.didicero.base.entity.Statistics> statistics) {
        this.statistics = statistics;
    }

    /**
     * Get the modulesTest
     *
     * @return org.didicero.base.entity.Test
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "MODULES_TEST_FK")
    public org.didicero.base.entity.Test getModulesTest() {
        return this.modulesTest;
    }

    /**
    * Set the modulesTest
    *
    * @param modulesTest
    */
    public void setModulesTest(org.didicero.base.entity.Test modulesTest) {
        this.modulesTest = modulesTest;
    }

    /**
     * Get the testResults Collection
     *
     * @return java.util.Set<org.didicero.base.entity.TestResult>
     */
    @javax.persistence.OneToMany()
    @javax.persistence.JoinTable(name = "HAS_TEST_RESULTS", joinColumns = { @javax.persistence.JoinColumn(name = "MODULE_ATTENDANCE_ID_FK", referencedColumnName = "ID") }, inverseJoinColumns = { @javax.persistence.JoinColumn(name = "TEST_RESULTS_ID_FK", referencedColumnName = "ID") })
    public java.util.Set<org.didicero.base.entity.TestResult> getTestResults() {
        return this.testResults;
    }

    /**
     * Set the testResults
     *
     * @param testResults
     */
    public void setTestResults(java.util.Set<org.didicero.base.entity.TestResult> testResults) {
        this.testResults = testResults;
    }

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof ModuleAttendance)) {
            return false;
        }
        final ModuleAttendance that = (ModuleAttendance) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("ModuleAttendance(=");
        sb.append("id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(ModuleAttendance o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
        }
        return cmp;
    }
}
