package br.ufal.ic.forbile.infra.emathema.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import java.util.*;
import br.ufal.ic.forbile.infra.emathema.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/emathema.owl#GroupDiscussion
 *
 * @version generated on Wed Sep 27 02:26:48 GMT-03:00 2006
 */
public class DefaultGroupDiscussion extends DefaultTHINGInferredCSCLData implements GroupDiscussion {

    public DefaultGroupDiscussion(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }

    public DefaultGroupDiscussion() {
    }

    public Discussion getIsComposedBy_Discussion() {
        return (Discussion) getPropertyValueAs(getIsComposedBy_DiscussionProperty(), Discussion.class);
    }

    public RDFProperty getIsComposedBy_DiscussionProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#isComposedBy_Discussion";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasIsComposedBy_Discussion() {
        return getPropertyValueCount(getIsComposedBy_DiscussionProperty()) > 0;
    }

    public void setIsComposedBy_Discussion(Discussion newIsComposedBy_Discussion) {
        setPropertyValue(getIsComposedBy_DiscussionProperty(), newIsComposedBy_Discussion);
    }

    public RDFSLiteral getNumberParallelDiscussion() {
        return (RDFSLiteral) getPropertyValue(getNumberParallelDiscussionProperty());
    }

    public RDFProperty getNumberParallelDiscussionProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#numberParallelDiscussion";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasNumberParallelDiscussion() {
        return getPropertyValueCount(getNumberParallelDiscussionProperty()) > 0;
    }

    public void setNumberParallelDiscussion(RDFSLiteral newNumberParallelDiscussion) {
        setPropertyValue(getNumberParallelDiscussionProperty(), newNumberParallelDiscussion);
    }

    public RDFSLiteral getNumberProposal() {
        return (RDFSLiteral) getPropertyValue(getNumberProposalProperty());
    }

    public RDFProperty getNumberProposalProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#numberProposal";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasNumberProposal() {
        return getPropertyValueCount(getNumberProposalProperty()) > 0;
    }

    public void setNumberProposal(RDFSLiteral newNumberProposal) {
        setPropertyValue(getNumberProposalProperty(), newNumberProposal);
    }

    public float getRate() {
        return getPropertyValueLiteral(getRateProperty()).getFloat();
    }

    public RDFProperty getRateProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#rate";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasRate() {
        return getPropertyValueCount(getRateProperty()) > 0;
    }

    public void setRate(float newRate) {
        setPropertyValue(getRateProperty(), new Float(newRate));
    }

    public Object getStageDiscussion() {
        return (Object) getPropertyValue(getStageDiscussionProperty());
    }

    public RDFProperty getStageDiscussionProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#stageDiscussion";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasStageDiscussion() {
        return getPropertyValueCount(getStageDiscussionProperty()) > 0;
    }

    public void setStageDiscussion(Object newStageDiscussion) {
        setPropertyValue(getStageDiscussionProperty(), newStageDiscussion);
    }

    public Collection getStateDiscussion() {
        return getPropertyValues(getStateDiscussionProperty());
    }

    public RDFProperty getStateDiscussionProperty() {
        final String uri = "http://www.owl-ontologies.com/emathema.owl#stateDiscussion";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }

    public boolean hasStateDiscussion() {
        return getPropertyValueCount(getStateDiscussionProperty()) > 0;
    }

    public Iterator listStateDiscussion() {
        return listPropertyValues(getStateDiscussionProperty());
    }

    public void addStateDiscussion(Object newStateDiscussion) {
        addPropertyValue(getStateDiscussionProperty(), newStateDiscussion);
    }

    public void removeStateDiscussion(Object oldStateDiscussion) {
        removePropertyValue(getStateDiscussionProperty(), oldStateDiscussion);
    }

    public void setStateDiscussion(Collection newStateDiscussion) {
        setPropertyValues(getStateDiscussionProperty(), newStateDiscussion);
    }
}
