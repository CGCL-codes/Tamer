/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AccessionView.java
 *
 * Created on May 10, 2011, 3:04:12 PM
 */
package cu.edu.cujae.biowh.gui.gene;

import cu.edu.cujae.biowh.BioWH2App;
import cu.edu.cujae.biowh.gui.component.table.model.ListTableModel;
import cu.edu.cujae.biowh.parser.gene.entities.Gene2Accession;
import cu.edu.cujae.biowh.parser.gene.entities.GeneInfo;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Set;
import javax.swing.JFrame;
import org.jdesktop.application.Action;

/**
 *
 * @author rvera
 */
public class AccessionView extends javax.swing.JDialog {

    /** Creates new form AccessionView
     * @param parent
     * @param modal
     * @param gene
     */
    public AccessionView(java.awt.Frame parent, boolean modal, GeneInfo gene) {
        super(parent, modal);
        mainFrame = BioWH2App.getApplication().getMainFrame();
        this.gene = gene;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelGeneId = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cu.edu.cujae.biowh.BioWH2App.class).getContext().getResourceMap(AccessionView.class);
        setTitle(resourceMap.getString("title")); // NOI18N

        jLabel1.setText("Accession for Gene:");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabelGeneId.setText((new Long(gene.getGeneID())).toString());
        jLabelGeneId.setName("jLabelGeneId"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        ArrayList<List<Object>> arrayList = new ArrayList<>();
        for (Gene2Accession accession : (Set<Gene2Accession>) gene.getGene2Accession()) {
            ArrayList<Object> list = new ArrayList<>();
            list.add(accession.getStatus());
            if (accession.getRNANucleotideAccession() != null) {
                if (accession.getrNANucleotideAccessionVersion() != null) {
                    list.add(accession.getRNANucleotideAccession()
                        + "." + accession.getrNANucleotideAccessionVersion());
                } else {
                    list.add(accession.getRNANucleotideAccession());
                }
            }
            if (accession.getProteinAccession() != null) {
                if (accession.getProteinAccessionVersion() != null) {
                    list.add(accession.getProteinAccession()
                        + "." + accession.getProteinAccessionVersion());
                } else {
                    list.add(accession.getProteinAccession());
                }
            }
            if (accession.getGenomicNucleotideAccession() != null) {
                if (accession.getGenomicNucleotideAccessionVersion() != null) {
                    list.add(accession.getGenomicNucleotideAccession()
                        + "." + accession.getGenomicNucleotideAccessionVersion());
                } else {
                    list.add(accession.getGenomicNucleotideAccession());
                }
            }
            list.add(accession.getStartPositionOnTheGenomicAccession());
            list.add(accession.getEndPositionOnTheGenomicAccession());
            list.add(accession.getOrientation());
            list.add(accession.getAssembly());
            arrayList.add(list);
        }

        String[] accessionColumn = {"Status", "RNA", "Protein", "Genomic", "Start", "End", "Orientation", "Assembly"};
        jTable1.setModel(new ListTableModel(accessionColumn, arrayList,
            new Class[]{java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class,
                java.lang.Object.class, java.lang.Object.class},
            new boolean[]{false, false, false, false, false, false, false, false}));
    jTable1.setColumnSelectionAllowed(true);
    jTable1.setFillsViewportHeight(true);
    jTable1.setGridColor(new java.awt.Color(204, 204, 204));
    jTable1.setName("jTable1"); // NOI18N
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);
    jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(cu.edu.cujae.biowh.BioWH2App.class).getContext().getActionMap(AccessionView.class, this);
    jButtonClose.setAction(actionMap.get("close")); // NOI18N
    jButtonClose.setText(resourceMap.getString("jButtonClose.text")); // NOI18N
    jButtonClose.setName("jButtonClose"); // NOI18N

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabelGeneId))
                .addComponent(jButtonClose))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(jLabelGeneId))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButtonClose)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        HashMap param = new HashMap();
        if (jTable1.getSelectedColumn() == 2) {
            String accessionNumber = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 2);
            String shortAccessionNumber = null;
            if (accessionNumber.indexOf(".") != -1) {
                shortAccessionNumber = accessionNumber.substring(0, accessionNumber.indexOf("."));
            } else {
                shortAccessionNumber = accessionNumber;
            }
            //TODO Add protein search on clic
            /*
            if (shortAccessionNumber.length() == 6) {
            param.put("accessionNumber", shortAccessionNumber);
            ProteinWIDAccessionNumberJpaController instance = new ProteinWIDAccessionNumberJpaController(warehousePUEntityManager);

            List result = instance.useNamedQuery("ProteinWIDAccessionNumber.findByAccessionNumber", param);
            if (!result.isEmpty()) {
            Iterator it = result.iterator();
            while (it.hasNext()) {
            ProteinWIDAccessionNumber protein = (ProteinWIDAccessionNumber) it.next();
            ProteinView proteinView = new ProteinView(mainFrame, true, protein.getProtein(), warehousePUEntityManager);
            proteinView.toFront();
            proteinView.setVisible(true);
            }
            } else {
            System.out.println("Protein not found");
            }
            } else {
            Object accessionOgb[] = gene.getGene2Accession().toArray();
            Gene2Accession accession = (Gene2Accession) accessionOgb[jTable1.getSelectedRow()];
            System.out.println("ProteinAccession: " + accession.getProteinAccession());
            System.out.println("ProteinGi: " + accession.getProteinGi());
            if (!accession.getProtein().isEmpty()) {
            System.out.println("Protein : " + accession.getProtein().iterator().next().getWid());
            ProteinListView proteinListView = new ProteinListView(mainFrame, true, accession.getProtein(), warehousePUEntityManager);
            proteinListView.toFront();
            proteinListView.setVisible(true);
            } else {
            System.out.println("Protein not found");
            }
            }
             */
        }
    }//GEN-LAST:event_jTable1MouseClicked
    /**
     * Close the Dialog
     */
    @Action
    public void close() {
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelGeneId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    private GeneInfo gene;
    private JFrame mainFrame;
}
