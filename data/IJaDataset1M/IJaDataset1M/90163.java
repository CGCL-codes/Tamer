package org.ist_contract.services.wsdl.refundstatus;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.1-hudson-417-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RefundedService", targetNamespace = "http://www.ist-contract.org/services/wsdl/RefundStatus", wsdlLocation = "http://__IP__:__PORT__/RefundedService/RefundedPort?WSDL")
public class RefundedService extends Service {

    private static final URL REFUNDEDSERVICE_WSDL_LOCATION;

    private static final Logger logger = Logger.getLogger(org.ist_contract.services.wsdl.refundstatus.RefundedService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = org.ist_contract.services.wsdl.refundstatus.RefundedService.class.getResource(".");
            url = new URL(baseUrl, "http://__IP__:__PORT__/RefundedService/RefundedPort?WSDL");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://__IP__:__PORT__/RefundedService/RefundedPort?WSDL', retrying as a local file");
            logger.warning(e.getMessage());
        }
        REFUNDEDSERVICE_WSDL_LOCATION = url;
    }

    public RefundedService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RefundedService() {
        super(REFUNDEDSERVICE_WSDL_LOCATION, new QName("http://www.ist-contract.org/services/wsdl/RefundStatus", "RefundedService"));
    }

    /**
     * 
     * @return
     *     returns RefundedPT
     */
    @WebEndpoint(name = "RefundedPort")
    public RefundedPT getRefundedPort() {
        return super.getPort(new QName("http://www.ist-contract.org/services/wsdl/RefundStatus", "RefundedPort"), RefundedPT.class);
    }
}
