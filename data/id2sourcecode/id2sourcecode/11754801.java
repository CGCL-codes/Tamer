    public Object[][] getContents() {
        return new Object[][] { { "textframe.button.dismiss", "Stäng" }, { "appletviewer.tool.title", "Applet Viewer: {0}" }, { "appletviewer.menu.applet", "Applet" }, { "appletviewer.menuitem.restart", "Starta om" }, { "appletviewer.menuitem.reload", "Läs in igen" }, { "appletviewer.menuitem.stop", "Stoppa" }, { "appletviewer.menuitem.save", "Spara ..." }, { "appletviewer.menuitem.start", "Starta" }, { "appletviewer.menuitem.clone", "Klona ..." }, { "appletviewer.menuitem.tag", "Tagga ..." }, { "appletviewer.menuitem.info", "Info ..." }, { "appletviewer.menuitem.edit", "Redigera" }, { "appletviewer.menuitem.encoding", "Teckenkodning" }, { "appletviewer.menuitem.print", "Skriv ut ..." }, { "appletviewer.menuitem.props", "Egenskaper ..." }, { "appletviewer.menuitem.close", "Stäng" }, { "appletviewer.menuitem.quit", "Avsluta" }, { "appletviewer.label.hello", "Hallå ..." }, { "appletviewer.status.start", "startar applet ..." }, { "appletviewer.appletsave.filedialogtitle", "Ordna appletar seriellt i filen" }, { "appletviewer.appletsave.err1", "serialiserar en {0} till {1}" }, { "appletviewer.appletsave.err2", "i appletSave: {0}" }, { "appletviewer.applettag", "Visad tagg" }, { "appletviewer.applettag.textframe", "HTML-tagg för applet" }, { "appletviewer.appletinfo.applet", "-- ingen applet-info --" }, { "appletviewer.appletinfo.param", "-- ingen parameterinfo --" }, { "appletviewer.appletinfo.textframe", "Applet-info" }, { "appletviewer.appletprint.fail", "Utskrift misslyckades." }, { "appletviewer.appletprint.finish", "Utskriften är klar." }, { "appletviewer.appletprint.cancel", "Utskriften avbröts." }, { "appletviewer.appletencoding", "Teckenkodning: {0}" }, { "appletviewer.parse.warning.requiresname", "Varning: Taggen <param name=... value=...> kräver ett namnattribut." }, { "appletviewer.parse.warning.paramoutside", "Varning: Taggen <param> utanför <applet> ... </applet>." }, { "appletviewer.parse.warning.applet.requirescode", "Varning: <applet> Taggen kräver kodattribut." }, { "appletviewer.parse.warning.applet.requiresheight", "Varning: <applet> Taggen kräver höjdattribut." }, { "appletviewer.parse.warning.applet.requireswidth", "Varning: <applet> Taggen kräver breddattribut." }, { "appletviewer.parse.warning.object.requirescode", "Varning: <object> Taggen kräver kodattribut." }, { "appletviewer.parse.warning.object.requiresheight", "Varning: <object> Taggen kräver höjdattribut." }, { "appletviewer.parse.warning.object.requireswidth", "Varning: <object> koden kräver breddattribut." }, { "appletviewer.parse.warning.embed.requirescode", "Varning: <embed> koden kräver programkodattribut." }, { "appletviewer.parse.warning.embed.requiresheight", "Varning: <embed> koden kräver höjdattribut." }, { "appletviewer.parse.warning.embed.requireswidth", "Varning: <embed> koden kräver breddattribut." }, { "appletviewer.parse.warning.appnotLongersupported", "Varning: Taggen <app> stöds inte längre, använd <applet> istället:" }, { "appletviewer.usage", "Syntax: appletviewer <alternativ> url(s)\n\ndär <alternativ> omfattar:\n  -debug                  Starta applet-granskaren i Java-felsökaren\n  -encoding <kodning>    Ange teckenkodningen som används av HTML-filer\n  -J<körtidsflagga>        Skicka argumentet till Java-tolken\n\nAlternativet -J är inte ett standardalternativ och kan ändras utan föregående meddelande." }, { "appletviewer.main.err.unsupportedopt", "Alternativet stöds inte: {0}" }, { "appletviewer.main.err.unrecognizedarg", "Okänt argument: {0}" }, { "appletviewer.main.err.dupoption", "Alternativet är duplicerat: {0}" }, { "appletviewer.main.err.inputfile", "Inga indatafiler har angetts." }, { "appletviewer.main.err.badurl", "Felaktig URL: {0} ( {1} )" }, { "appletviewer.main.err.io", "I/O-undantag vid läsning: {0}" }, { "appletviewer.main.err.readablefile", "Kontrollera att {0} är en läsbar fil." }, { "appletviewer.main.err.correcturl", "Är {0} rätt URL?" }, { "appletviewer.main.prop.store", "Användarspecifika egenskaper för AppletViewer" }, { "appletviewer.main.err.prop.cantread", "Det går inte att läsa filen med användaregenskaper: {0}" }, { "appletviewer.main.err.prop.cantsave", "Det går inte att spara filen med användaregenskaper: {0}" }, { "appletviewer.main.warn.nosecmgr", "Varning: avaktiverar säkerheten." }, { "appletviewer.main.debug.cantfinddebug", "Det går inte att hitta felsökaren!" }, { "appletviewer.main.debug.cantfindmain", "Det går inte att hitta huvudmetod i felsökaren!" }, { "appletviewer.main.debug.exceptionindebug", "Undantagsavbrott i felsökaren!" }, { "appletviewer.main.debug.cantaccess", "Det går inte att hämta felsökaren!" }, { "appletviewer.main.nosecmgr", "Varning: SecurityManager har inte installerats!" }, { "appletviewer.main.warning", "Varning: Inga appletar startades. Kontrollera att indata innehåller en <applet>-tagg." }, { "appletviewer.main.warn.prop.overwrite", "Varning: Skriver tillfälligt över systemegenskap på användarens begäran: nyckel: {0} gammalt värde: {1} nytt värde: {2}" }, { "appletviewer.main.warn.cantreadprops", "Varning: Det går inte att läsa egenskapsfilen till AppletViewer: {0} Använder standardvärden." }, { "appletioexception.loadclass.throw.interrupted", "klassinläsning avbröts: {0}" }, { "appletioexception.loadclass.throw.notloaded", "klassen har inte lästs in: {0}" }, { "appletclassloader.loadcode.verbose", "Öppnar ström till: {0} för att få {1}" }, { "appletclassloader.filenotfound", "Fil saknas vid sökning efter: {0}" }, { "appletclassloader.fileformat", "Filformatundantag vid inläsning: {0}" }, { "appletclassloader.fileioexception", "I/O-undantag vid inläsning: {0}" }, { "appletclassloader.fileexception", "{0}-undantag vid inläsning: {1}" }, { "appletclassloader.filedeath", "{0} avslutades vid inläsning: {1}" }, { "appletclassloader.fileerror", "{0} fel vid inläsning: {1}" }, { "appletclassloader.findclass.verbose.findclass", "{0} sök klass {1}" }, { "appletclassloader.findclass.verbose.openstream", "Öppnar ström till: {0} för att få {1}" }, { "appletclassloader.getresource.verbose.forname", "AppletClassLoader.getResource för namnet {0}" }, { "appletclassloader.getresource.verbose.found", "Hittade resursen {0} som en systemresurs" }, { "appletclassloader.getresourceasstream.verbose", "Hittade resursen {0} som en systemresurs" }, { "appletpanel.runloader.err", "Antingen objekt- eller kodparameter!" }, { "appletpanel.runloader.exception", "undantag vid avserialisering {0}" }, { "appletpanel.destroyed", "Appleten förstörd." }, { "appletpanel.loaded", "Appleten är inläst." }, { "appletpanel.started", "Appleten har startat." }, { "appletpanel.inited", "Appleten har initierats." }, { "appletpanel.stopped", "Appleten har stoppats." }, { "appletpanel.disposed", "Appleten har slängts." }, { "appletpanel.nocode", "Taggen APPLET saknar parametern CODE." }, { "appletpanel.notfound", "inläsning: klassen {0} finns inte." }, { "appletpanel.nocreate", "inläsning: kan inte skapa instans av {0}." }, { "appletpanel.noconstruct", "inläsning: {0} är inte allmän eller har ingen allmän konstruktor." }, { "appletpanel.death", "avslutad" }, { "appletpanel.exception", "undantag: {0}." }, { "appletpanel.exception2", "undantag: {0}: {1}." }, { "appletpanel.error", "fel: {0}." }, { "appletpanel.error2", "fel: {0}: {1}." }, { "appletpanel.notloaded", "Init: appleten har inte lästs in." }, { "appletpanel.notinited", "Start: appleten har inte initierats." }, { "appletpanel.notstarted", "Stopp: appleten har inte startats." }, { "appletpanel.notstopped", "Destruktion: appleten har inte stoppats." }, { "appletpanel.notdestroyed", "Släng: appleten har inte förstörts." }, { "appletpanel.notdisposed", "Inläsning: appletten har inte slängts." }, { "appletpanel.bail", "Avbruten: avaktiverar." }, { "appletpanel.filenotfound", "Fil saknas vid sökning efter: {0}" }, { "appletpanel.fileformat", "Filformatundantag vid inläsning: {0}" }, { "appletpanel.fileioexception", "I/O-undantag vid inläsning: {0}" }, { "appletpanel.fileexception", "{0}-undantag vid inläsning: {1}" }, { "appletpanel.filedeath", "{0} avslutades vid inläsning: {1}" }, { "appletpanel.fileerror", "{0} fel vid inläsning: {1}" }, { "appletpanel.badattribute.exception", "Html-tolkning: felaktigt värde för höjd-breddattribut" }, { "appletillegalargumentexception.objectinputstream", "AppletObjectInputStream kräver inläsare som inte är tom" }, { "appletprops.title", "Egenskaper för AppletViewer" }, { "appletprops.label.http.server", "Proxy-server för HTTP:" }, { "appletprops.label.http.proxy", "HTTP-proxyns port:" }, { "appletprops.label.network", "Nätverksåtkomst:" }, { "appletprops.choice.network.item.none", "Inget" }, { "appletprops.choice.network.item.applethost", "Applet-värd" }, { "appletprops.choice.network.item.unrestricted", "Obegränsad" }, { "appletprops.label.class", "Klassåtkomst:" }, { "appletprops.choice.class.item.restricted", "Begränsad" }, { "appletprops.choice.class.item.unrestricted", "Obegränsad" }, { "appletprops.label.unsignedapplet", "Tillåt osignerade appletar:" }, { "appletprops.choice.unsignedapplet.no", "Nej" }, { "appletprops.choice.unsignedapplet.yes", "Ja" }, { "appletprops.button.apply", "Utför" }, { "appletprops.button.cancel", "Avbryt" }, { "appletprops.button.reset", "Återställ" }, { "appletprops.apply.exception", "Kunde inte spara egenskaperna: {0}" }, { "appletprops.title.invalidproxy", "Ogiltig inmatning" }, { "appletprops.label.invalidproxy", "Proxyporten måste anges som ett positivt heltal" }, { "appletprops.button.ok", "OK" }, { "appletprops.prop.store", "Användarspecifika egenskaper för AppletViewer" }, { "appletsecurityexception.checkcreateclassloader", "Säkerhetsundantag: klassinläsare" }, { "appletsecurityexception.checkaccess.thread", "Säkerhetsundantag: tråd" }, { "appletsecurityexception.checkaccess.threadgroup", "Säkerhetsundantag: trådgruppen {0}" }, { "appletsecurityexception.checkexit", "Säkerhetsundantag: exit-punkten {0}" }, { "appletsecurityexception.checkexec", "Säkerhetsundantag: programfilen {0}" }, { "appletsecurityexception.checklink", "Säkerhetsundantag: länken {0}" }, { "appletsecurityexception.checkpropsaccess", "Säkerhetsundantag: egenskaperna" }, { "appletsecurityexception.checkpropsaccess.key", "Säkerhetsundantag: egenskapsåtkomsten {0}" }, { "appletsecurityexception.checkread.exception1", "Säkerhetsundantag: {0}, {1}" }, { "appletsecurityexception.checkread.exception2", "Säkerhetsundantag: file.read: {0}" }, { "appletsecurityexception.checkread", "Säkerhetsundantag: file.read: {0} == {1}" }, { "appletsecurityexception.checkwrite.exception", "Säkerhetsundantag: {0}, {1}" }, { "appletsecurityexception.checkwrite", "Säkerhetsundantag: file.write: {0} == {1}" }, { "appletsecurityexception.checkread.fd", "Säkerhetsundantag: fd.read" }, { "appletsecurityexception.checkwrite.fd", "Säkerhetsundantag: fd.write" }, { "appletsecurityexception.checklisten", "Säkerhetsundantag: socket.listen: {0}" }, { "appletsecurityexception.checkaccept", "Säkerhetsundantag: socket.accept: {0}:{1}" }, { "appletsecurityexception.checkconnect.networknone", "Säkerhetsundantag: socket.connect: {0}->{1}" }, { "appletsecurityexception.checkconnect.networkhost1", "Säkerhetsundantag: Kan inte koppla upp till {0} som kommer från {1}." }, { "appletsecurityexception.checkconnect.networkhost2", "Säkerhetsundantag: Kan inte översätta adressen för värdsystemet {0} eller for {1}. " }, { "appletsecurityexception.checkconnect.networkhost3", "Säkerhetsundantag: Kan inte översätta adressen för värdsystemet {0}. Kontrollera egenskapen trustProxy." }, { "appletsecurityexception.checkconnect", "Säkerhetsundantag: uppkoppling: {0}->{1}" }, { "appletsecurityexception.checkpackageaccess", "Säkerhetsundantag: får inte åtkomst till paketet: {0}" }, { "appletsecurityexception.checkpackagedefinition", "Säkerhetsundantag: kan inte definiera paketet: {0}" }, { "appletsecurityexception.cannotsetfactory", "Säkerhetsundantag: kan inte ställa in factory" }, { "appletsecurityexception.checkmemberaccess", "Säkerhetsundantag: kontrollera medlemsåtkomst" }, { "appletsecurityexception.checkgetprintjob", "Säkerhetsundantag: getPrintJob" }, { "appletsecurityexception.checksystemclipboardaccess", "Säkerhetsundantag: getSystemClipboard" }, { "appletsecurityexception.checkawteventqueueaccess", "Säkerhetsundantag: getEventQueue" }, { "appletsecurityexception.checksecurityaccess", "Säkerhetsundantag: säkerhetsbearbetning: {0}" }, { "appletsecurityexception.getsecuritycontext.unknown", "Okänd typ av klassinläsare. Kan inte leta efter getContext" }, { "appletsecurityexception.checkread.unknown", "Okänd typ av klassinläsare. Kan inte leta efter checking read {0}" }, { "appletsecurityexception.checkconnect.unknown", "Okänd typ av klassinläsare. Kan inte leta efter checking connect" } };
    }
