    public void testGetTypesWithPropertyDefinition() throws UnmarshallerException {
        Document doc = XMLParser.parse(getTypeDefinitionIncludePropertyDefinition);
        Node entryNode = doc.getElementsByTagName(CMIS.ATOM_ENTRY.getLocalName()).item(0);
        TypeEntry typeEntry = new TypeEntry();
        TypeParser.getTypeEntry(entryNode, typeEntry);
        assertEquals(11, typeEntry.getTypeCmisTypeDefinition().getPropertyDefinitions().size());
        IdPropertyDefinition propertyDefinition = (IdPropertyDefinition) typeEntry.getTypeCmisTypeDefinition().getPropertyDefinition(CMIS.CMIS_SOURCE_ID);
        assertEquals("cmis:sourceId", propertyDefinition.getId());
        assertEquals("id", propertyDefinition.getPropertyType().value());
        assertEquals("single", propertyDefinition.getCardinality().value());
        assertEquals("oncreate", propertyDefinition.getUpdatability().value());
        assertEquals("cmis:sourceId", propertyDefinition.getQueryName());
        assertEquals("cmis:sourceId", propertyDefinition.getDisplayName());
        assertEquals("Relationship source ID.", propertyDefinition.getDescription());
        assertFalse(propertyDefinition.isInherited());
        assertTrue(propertyDefinition.isRequired());
        assertTrue(propertyDefinition.isQueryable());
        assertTrue(propertyDefinition.isOrderable());
        assertFalse(propertyDefinition.isOpenChoice());
        propertyDefinition = (IdPropertyDefinition) typeEntry.getTypeCmisTypeDefinition().getPropertyDefinition(CMIS.CMIS_TARGET_ID);
        assertEquals("cmis:targetId", propertyDefinition.getId());
        assertEquals("id", propertyDefinition.getPropertyType().value());
        assertEquals("single", propertyDefinition.getCardinality().value());
        assertEquals("oncreate", propertyDefinition.getUpdatability().value());
        assertEquals("cmis:targetId", propertyDefinition.getQueryName());
        assertEquals("cmis:targetId", propertyDefinition.getLocalName());
        assertEquals("cmis:targetId", propertyDefinition.getDisplayName());
        assertEquals("Relationship target ID.", propertyDefinition.getDescription());
        assertFalse(propertyDefinition.isInherited());
        assertTrue(propertyDefinition.isRequired());
        assertTrue(propertyDefinition.isQueryable());
        assertTrue(propertyDefinition.isOrderable());
        assertFalse(propertyDefinition.isOpenChoice());
        DateTimePropertyDefinition propertyDate = (DateTimePropertyDefinition) typeEntry.getTypeCmisTypeDefinition().getPropertyDefinition(CMIS.CMIS_LAST_MODIFICATION_DATE);
        assertEquals("cmis:lastModificationDate", propertyDate.getId());
        assertEquals("datetime", propertyDate.getPropertyType().value());
        assertEquals("single", propertyDate.getCardinality().value());
        assertEquals("readonly", propertyDate.getUpdatability().value());
        assertEquals("cmis:lastModificationDate", propertyDate.getQueryName());
        assertEquals("cmis:lastModificationDate", propertyDate.getLocalName());
        assertEquals("cmis:lastModificationDate", propertyDate.getDisplayName());
        assertEquals("Date when object was last modified.", propertyDate.getDescription());
        assertFalse(propertyDate.isInherited());
        assertFalse(propertyDate.isRequired());
        assertTrue(propertyDate.isQueryable());
        assertTrue(propertyDate.isOrderable());
        assertFalse(propertyDate.isOpenChoice());
        StringPropertyDefinition propertyString = (StringPropertyDefinition) typeEntry.getTypeCmisTypeDefinition().getPropertyDefinition(CMIS.CMIS_NAME);
        assertEquals("cmis:name", propertyString.getId());
        assertEquals("string", propertyString.getPropertyType().value());
        assertEquals("single", propertyString.getCardinality().value());
        assertEquals("readwrite", propertyString.getUpdatability().value());
        assertEquals("cmis:name", propertyString.getQueryName());
        assertEquals("cmis:name", propertyString.getLocalName());
        assertEquals("cmis:name", propertyString.getDisplayName());
        assertEquals("Object's name.", propertyString.getDescription());
        assertEquals(new Long(65536), propertyString.getMaxLength());
        assertFalse(propertyString.isInherited());
        assertFalse(propertyString.isRequired());
        assertTrue(propertyString.isQueryable());
        assertTrue(propertyString.isOrderable());
        assertFalse(propertyString.isOpenChoice());
        propertyString = (StringPropertyDefinition) typeEntry.getTypeCmisTypeDefinition().getPropertyDefinition(CMIS.CMIS_CREATED_BY);
        assertEquals("cmis:createdBy", propertyString.getId());
        assertEquals("string", propertyString.getPropertyType().value());
        assertEquals("single", propertyString.getCardinality().value());
        assertEquals("readonly", propertyString.getUpdatability().value());
        assertEquals("cmis:createdBy", propertyString.getQueryName());
        assertEquals("exo:owner", propertyString.getLocalName());
        assertEquals("cmis:createdBy", propertyString.getDisplayName());
        assertEquals("User's name who created this object.", propertyString.getDescription());
        assertEquals(new Long(65536), propertyString.getMaxLength());
        assertFalse(propertyString.isInherited());
        assertFalse(propertyString.isRequired());
        assertTrue(propertyString.isQueryable());
        assertTrue(propertyString.isOrderable());
        assertFalse(propertyString.isOpenChoice());
    }
