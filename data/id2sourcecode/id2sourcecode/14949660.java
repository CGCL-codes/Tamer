    @Test
    public void testThreeInstancesOfDirectoryInteracting() throws IOException {
        makeDirectory();
        Directory dir2 = new GAERAMDirectory("unit test case directory");
        IndexWriter writer = new IndexWriter(dir, new SimpleAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);
        Document doc = new Document();
        doc.add(new Field("partnum", "Q36", Field.Store.YES, Field.Index.NOT_ANALYZED));
        doc.add(new Field("description", buildRandomString(100), Field.Store.NO, Field.Index.ANALYZED));
        writer.addDocument(doc);
        writer.close();
        ((GAERAMDirectory) dir2).pullLatest();
        IndexSearcher searcher = new IndexSearcher(dir2);
        Query query = new TermQuery(new Term("partnum", "Q36"));
        TopDocs rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        Directory dir3 = new GAERAMDirectory("unit test case directory");
        searcher = new IndexSearcher(dir3);
        query = new TermQuery(new Term("partnum", "Q36"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        writer = new IndexWriter(dir3, new SimpleAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);
        doc = new Document();
        doc.add(new Field("partnum", "Q37", Field.Store.YES, Field.Index.NOT_ANALYZED));
        doc.add(new Field("description", buildRandomString(100), Field.Store.NO, Field.Index.ANALYZED));
        writer.addDocument(doc);
        writer.close();
        writer = new IndexWriter(dir2, new SimpleAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);
        doc = new Document();
        doc.add(new Field("partnum", "Q38", Field.Store.YES, Field.Index.NOT_ANALYZED));
        doc.add(new Field("description", buildRandomString(100), Field.Store.NO, Field.Index.ANALYZED));
        writer.addDocument(doc);
        writer.close();
        ((GAERAMDirectory) ((CountingDirectory) dir).getInnerDirectory()).pullLatest();
        ((GAERAMDirectory) dir3).pullLatest();
        searcher = new IndexSearcher(dir);
        query = new TermQuery(new Term("partnum", "Q36"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir2);
        query = new TermQuery(new Term("partnum", "Q36"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir3);
        query = new TermQuery(new Term("partnum", "Q36"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir);
        query = new TermQuery(new Term("partnum", "Q37"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir2);
        query = new TermQuery(new Term("partnum", "Q37"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir3);
        query = new TermQuery(new Term("partnum", "Q37"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir);
        query = new TermQuery(new Term("partnum", "Q38"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir2);
        query = new TermQuery(new Term("partnum", "Q38"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        searcher = new IndexSearcher(dir3);
        query = new TermQuery(new Term("partnum", "Q38"));
        rs = searcher.search(query, null, 10);
        assertEquals(1, rs.totalHits);
        printStats("Basic single write single read operations");
    }
