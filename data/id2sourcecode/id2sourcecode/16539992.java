    public PasswordPacket(Packet requestPassword, EthernetPacket ep, String password) throws Exception {
        this.datalink = ep;
        byte[] fore = new byte[] { 0x01, 0x00, 0x00, 0x16, 0x02, 0x00, 0x00, 0x16, (byte) 0x99, 0x12 };
        arraycopy(requestPassword.data, 5, fore, 5, 1);
        byte[] md5ChanllengeAndId = new byte[17];
        arraycopy(requestPassword.data, 9, md5ChanllengeAndId, 0, 16);
        md5ChanllengeAndId[16] = requestPassword.data[5];
        MessageDigest md5 = MessageDigest.getInstance("MD5");
        md5.update(md5ChanllengeAndId);
        byte[] md5Result = md5.digest();
        int sum = 0;
        for (int i = 0; i < 16; i++) {
            if (md5ChanllengeAndId[i] < 0) {
                sum += md5ChanllengeAndId[i] & 0x7f | 0x80;
            } else {
                sum += md5ChanllengeAndId[i];
            }
        }
        int di = sum % 10;
        di <<= 4;
        char[] varPublic = new char[] { 0x75, 0x73, 0x65, 0x20, 0x6D, 0x64, 0x35, 0x20, 0x65, 0x72, 0x72, 0x6F, 0x72, 0x21, 0x21, 0x00, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x00, 0x2C, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0x70, 0xB7, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x8C, 0x2D, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0x59, 0xB7, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x98, 0x30, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0x42, 0xB7, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x10, 0x2C, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0x2B, 0xB7, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x04, 0x2C, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0x14, 0xB7, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0x90, 0x2D, 0x43, 0x00, 0x50, 0xFF, 0x15, 0x00, 0x68, 0x43, 0x00, 0x3B, 0xF4, 0xE8, 0xFD, 0xB6, 0xFF, 0xFF, 0x8B, 0xF4, 0x6A, 0x01, 0xA1, 0xF0 };
        for (int i = 0; i < 16; i++) {
            md5Result[i] ^= (byte) varPublic[di + i];
        }
        for (int i = 0; i < password.length(); i++) {
            md5Result[i] ^= password.getBytes()[i];
        }
        byte[] last = "linkage".getBytes();
        byte[] packetData = joinBytes(fore, md5Result);
        packetData = joinBytes(packetData, last);
        this.data = packetData;
    }
