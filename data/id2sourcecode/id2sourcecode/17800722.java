    public Object[][] getContents() {
        return new Object[][] { { "textframe.button.dismiss", "关闭" }, { "appletviewer.tool.title", "小程序查看器：{0}" }, { "appletviewer.menu.applet", "Applet" }, { "appletviewer.menuitem.restart", "重新启动" }, { "appletviewer.menuitem.reload", "重新载入" }, { "appletviewer.menuitem.stop", "停止" }, { "appletviewer.menuitem.save", "保存..." }, { "appletviewer.menuitem.start", "启动" }, { "appletviewer.menuitem.clone", "复制..." }, { "appletviewer.menuitem.tag", "标记..." }, { "appletviewer.menuitem.info", "信息..." }, { "appletviewer.menuitem.edit", "编辑" }, { "appletviewer.menuitem.encoding", "字符编码" }, { "appletviewer.menuitem.print", "打印..." }, { "appletviewer.menuitem.props", "属性..." }, { "appletviewer.menuitem.close", "关闭" }, { "appletviewer.menuitem.quit", "退出" }, { "appletviewer.label.hello", "Hello..." }, { "appletviewer.status.start", "正在启动小程序..." }, { "appletviewer.appletsave.filedialogtitle", "将小程序序列化为文件" }, { "appletviewer.appletsave.err1", "将 {0} 序列化为 {1}" }, { "appletviewer.appletsave.err2", "在 appletSave 中：{0}" }, { "appletviewer.applettag", "显示的标记" }, { "appletviewer.applettag.textframe", "小程序 HTML 标记" }, { "appletviewer.appletinfo.applet", "-- 没有任何小程序信息 --" }, { "appletviewer.appletinfo.param", "-- 没有任何参数信息 --" }, { "appletviewer.appletinfo.textframe", "小程序信息" }, { "appletviewer.appletprint.fail", "打印失败。" }, { "appletviewer.appletprint.finish", "已完成打印。" }, { "appletviewer.appletprint.cancel", "打印被取消。" }, { "appletviewer.appletencoding", "字符编码： {0}" }, { "appletviewer.parse.warning.requiresname", "警告：<param name=... value=...> 标记需要名称属性。" }, { "appletviewer.parse.warning.paramoutside", "警告：<param> 标记在 <applet> ... </applet> 外部。" }, { "appletviewer.parse.warning.applet.requirescode", "警告： <applet> 标记需要代码属性。" }, { "appletviewer.parse.warning.applet.requiresheight", "警告：<applet> 标记需要高度属性。" }, { "appletviewer.parse.warning.applet.requireswidth", "警告： <applet> 标记需要宽度属性。" }, { "appletviewer.parse.warning.object.requirescode", "警告： <object> 标记需要代码属性。" }, { "appletviewer.parse.warning.object.requiresheight", "警告：<object> 标记需要高度属性。" }, { "appletviewer.parse.warning.object.requireswidth", "警告：<object> 标记需要宽度属性。" }, { "appletviewer.parse.warning.embed.requirescode", "警告： <embed> 标记需要代码属性。" }, { "appletviewer.parse.warning.embed.requiresheight", "警告： <embed> 标记需要高度属性。" }, { "appletviewer.parse.warning.embed.requireswidth", "警告： <embed> 标记需要宽度属性。" }, { "appletviewer.parse.warning.appnotLongersupported", "警告： 不再支持 <app> 标记，请使用 <applet> ：" }, { "appletviewer.usage", "用法：appletviewer <options> url(s)\n\n其中，<options> 包括：\n  -debug                  在 Java 调试器中启动 applet 小程序查看器\n  -encoding <encoding>    指定由 HTML 文件使用的字符编码\n  -J<runtime flag>        向 Java 解释器传递参数\n\n-J 选项不是标准选项，如有更改，不另行通知。" }, { "appletviewer.main.err.unsupportedopt", "不支持的选项：{0}" }, { "appletviewer.main.err.unrecognizedarg", "不可识别的参数：{0}" }, { "appletviewer.main.err.dupoption", "重复使用的选项：{0}" }, { "appletviewer.main.err.inputfile", "没有指定输入文件。" }, { "appletviewer.main.err.badurl", "URL 错误：{0} ( {1} )" }, { "appletviewer.main.err.io", "进行读取时出现 I/O 异常： {0}" }, { "appletviewer.main.err.readablefile", "确保 {0} 是一个文件，并且是可读的。" }, { "appletviewer.main.err.correcturl", "{0} 是否是正确的 URL？" }, { "appletviewer.main.prop.store", "用户指定的 AppletViewer 属性" }, { "appletviewer.main.err.prop.cantread", "不能读取用户属性文件：{0}" }, { "appletviewer.main.err.prop.cantsave", "不能保存用户属性文件：{0}" }, { "appletviewer.main.warn.nosecmgr", "警告： 禁用安全控制" }, { "appletviewer.main.debug.cantfinddebug", "没有找到调试器！" }, { "appletviewer.main.debug.cantfindmain", "在调试器中没有找到主函数！" }, { "appletviewer.main.debug.exceptionindebug", "在调试器中发生异常！" }, { "appletviewer.main.debug.cantaccess", "不能访问调试器！" }, { "appletviewer.main.nosecmgr", "警告：没有安装 SecurityManager！" }, { "appletviewer.main.warning", "警告：没有启动任何小程序。请确保输入中包含 <applet> 标记。" }, { "appletviewer.main.warn.prop.overwrite", "警告：应用户请求临时覆盖系统属性：关键字：{0} 旧值：{1} 新值：{2}" }, { "appletviewer.main.warn.cantreadprops", "警告：不能读取 AppletViewer 的属性文件： {0} 使用默认值。" }, { "appletioexception.loadclass.throw.interrupted", "类载入被中断：{0}" }, { "appletioexception.loadclass.throw.notloaded", "未载入类：{0}" }, { "appletclassloader.loadcode.verbose", "正在打开流到： {0} 以获取 {1}" }, { "appletclassloader.filenotfound", "查找时找不到文件：{0}" }, { "appletclassloader.fileformat", "载入时引发文件格式异常：{0}" }, { "appletclassloader.fileioexception", "载入时引发出现 I/O 异常：{0}" }, { "appletclassloader.fileexception", "载入时引发 {0} 异常：{1}" }, { "appletclassloader.filedeath", "载入时 {0} 被取消：{1}" }, { "appletclassloader.fileerror", "载入时 {0} 出错：{1}" }, { "appletclassloader.findclass.verbose.findclass", "{0} 查找类 {1}" }, { "appletclassloader.findclass.verbose.openstream", "正在打开流到： {0} 以获取 {1}" }, { "appletclassloader.getresource.verbose.forname", "用于名称的 AppletClassLoader.getResource： {0} " }, { "appletclassloader.getresource.verbose.found", "已找到的资源：{0} 作为系统资源" }, { "appletclassloader.getresourceasstream.verbose", "已找到的资源：{0} 作为系统资源" }, { "appletpanel.runloader.err", "对象或代码参数！" }, { "appletpanel.runloader.exception", "并行化 {0} 时引发异常" }, { "appletpanel.destroyed", "小程序已销毁。" }, { "appletpanel.loaded", "小程序已载入。" }, { "appletpanel.started", "小程序已启动。" }, { "appletpanel.inited", "小程序已初始化。" }, { "appletpanel.stopped", "小程序已停止。" }, { "appletpanel.disposed", "小程序已撤消。" }, { "appletpanel.nocode", "APPLET 标记丢失 CODE 参数。" }, { "appletpanel.notfound", "载入：找不到类 {0}。" }, { "appletpanel.nocreate", "载入：无法实例化 {0}。" }, { "appletpanel.noconstruct", "载入：{0} 不是 public 对象或没有公共构造函数。" }, { "appletpanel.death", "已终止" }, { "appletpanel.exception", "异常： {0}。" }, { "appletpanel.exception2", "异常：{0}: {1}。" }, { "appletpanel.error", "错误：{0}。" }, { "appletpanel.error2", "错误：{0}: {1}。" }, { "appletpanel.notloaded", "初始化： 未载入小程序。" }, { "appletpanel.notinited", "启动： 未初始化小程序。" }, { "appletpanel.notstarted", "停止： 未启动小程序。" }, { "appletpanel.notstopped", "销毁： 未停止小程序。" }, { "appletpanel.notdestroyed", "撤消： 未销毁小程序。" }, { "appletpanel.notdisposed", "载入： 未撤消小程序。" }, { "appletpanel.bail", "已中断：正在跳出。" }, { "appletpanel.filenotfound", "查找时找不到文件： {0}" }, { "appletpanel.fileformat", "载入时发生文件格式异常： {0}" }, { "appletpanel.fileioexception", "载入时发生 I/O 异常： {0}" }, { "appletpanel.fileexception", "载入 {1} 时发生 {0} 异常" }, { "appletpanel.filedeath", "载入 {1} 时终止 {0}" }, { "appletpanel.fileerror", "载入 {1} 时 {0} 出错" }, { "appletpanel.badattribute.exception", "HTML 解析: 宽度/高度属性值不正确" }, { "appletillegalargumentexception.objectinputstream", "AppletObjectInputStream 需要非空载入程序" }, { "appletprops.title", "AppletViewer 属性" }, { "appletprops.label.http.server", "Http 代理服务器：" }, { "appletprops.label.http.proxy", "Http 代理服务器端口：" }, { "appletprops.label.network", "网络访问：" }, { "appletprops.choice.network.item.none", "无" }, { "appletprops.choice.network.item.applethost", "小程序主机" }, { "appletprops.choice.network.item.unrestricted", "无限制" }, { "appletprops.label.class", "类访问：" }, { "appletprops.choice.class.item.restricted", "有限制" }, { "appletprops.choice.class.item.unrestricted", "无限制" }, { "appletprops.label.unsignedapplet", "允许使用无签名的小程序：" }, { "appletprops.choice.unsignedapplet.no", "否" }, { "appletprops.choice.unsignedapplet.yes", "是" }, { "appletprops.button.apply", "应用" }, { "appletprops.button.cancel", "取消" }, { "appletprops.button.reset", "重设" }, { "appletprops.apply.exception", "保存属性时失败： {0}" }, { "appletprops.title.invalidproxy", "无效的项目" }, { "appletprops.label.invalidproxy", "代理服务器的端口号必须是一个正整数值。" }, { "appletprops.button.ok", "确定" }, { "appletprops.prop.store", "AppletViewer 的用户特有属性" }, { "appletsecurityexception.checkcreateclassloader", "安全性异常：类载入程序" }, { "appletsecurityexception.checkaccess.thread", "安全性异常：线程 " }, { "appletsecurityexception.checkaccess.threadgroup", "安全性异常： 线程组： {0}" }, { "appletsecurityexception.checkexit", "安全性异常：退出： {0}" }, { "appletsecurityexception.checkexec", "安全性异常：执行： {0}" }, { "appletsecurityexception.checklink", "安全性异常：连接： {0}" }, { "appletsecurityexception.checkpropsaccess", "安全性异常：属性" }, { "appletsecurityexception.checkpropsaccess.key", "安全性异常：属性访问 {0}" }, { "appletsecurityexception.checkread.exception1", "安全性异常：{0}, {1}" }, { "appletsecurityexception.checkread.exception2", "安全性异常：file.read: {0}" }, { "appletsecurityexception.checkread", "安全性异常：file.read: {0} == {1}" }, { "appletsecurityexception.checkwrite.exception", "安全性异常：{0}, {1}" }, { "appletsecurityexception.checkwrite", "安全性异常：file.write: {0} == {1}" }, { "appletsecurityexception.checkread.fd", "安全性异常：fd.read" }, { "appletsecurityexception.checkwrite.fd", "安全性异常：fd.write" }, { "appletsecurityexception.checklisten", "安全性异常：socket.listen: {0}" }, { "appletsecurityexception.checkaccept", "安全性异常：socket.accept: {0}:{1}" }, { "appletsecurityexception.checkconnect.networknone", "安全性异常：socket.connect: {0}->{1}" }, { "appletsecurityexception.checkconnect.networkhost1", "安全性异常：无法用来自 {1} 的源连接到 {0}。" }, { "appletsecurityexception.checkconnect.networkhost2", "安全性异常：无法解析主机 {0} 或 {1} 的 IP。" }, { "appletsecurityexception.checkconnect.networkhost3", "安全性异常：无法解析主机 {0} 的 IP。请参见属性 trustProxy。" }, { "appletsecurityexception.checkconnect", "安全性异常： 连接: {0}->{1}" }, { "appletsecurityexception.checkpackageaccess", "安全性异常：无法访问程序包：{0}" }, { "appletsecurityexception.checkpackagedefinition", "安全性异常：无法定义程序包：{0}" }, { "appletsecurityexception.cannotsetfactory", "安全性异常：无法设置工厂" }, { "appletsecurityexception.checkmemberaccess", "安全性异常：检查成员访问" }, { "appletsecurityexception.checkgetprintjob", "安全性异常：getPrintJob" }, { "appletsecurityexception.checksystemclipboardaccess", "安全性异常：getSystemClipboard" }, { "appletsecurityexception.checkawteventqueueaccess", "安全性异常：getEventQueue" }, { "appletsecurityexception.checksecurityaccess", "安全性异常：安全操作 {0}" }, { "appletsecurityexception.getsecuritycontext.unknown", "未知的类载入程序类型。无法检查 getContext" }, { "appletsecurityexception.checkread.unknown", "未知的类载入程序类型。无法检查由检查读 {0} 生成的结果" }, { "appletsecurityexception.checkconnect.unknown", "未知的类载入程序类型。无法检查由检查连接生成的结果" } };
    }
