    public SegyUnzip(String inFile, String outFile) throws IOException {
        _inputStream = new FileInputStream(inFile);
        _inputChannel = _inputStream.getChannel();
        _outputStream = new FileOutputStream(outFile);
        _outputChannel = _outputStream.getChannel();
        _workBuffer = ByteBuffer.allocate(8);
        _workBuffer.order(ByteOrder.BIG_ENDIAN);
        _workBuffer.position(0);
        int nRead = _inputChannel.read(_workBuffer);
        _nbytesRead += nRead;
        if (nRead != 8) throw new IOException("Error reading file header: " + nRead + "!=8");
        int cookie = _workBuffer.getInt(0);
        if (cookie != SegyZip.COOKIE_V1) throw new RuntimeException("Sorry - you are trying to unzip data from an invalid or corrupted file " + "(contact ddiller@tierrageo.com if this is unacceptable) " + cookie + " " + SegyZip.COOKIE_V1);
        ByteBuffer reelHdrBuffer = ByteBuffer.allocate(SegyZip.LEN_REEL_HDR);
        nRead = _inputChannel.read(reelHdrBuffer);
        _nbytesRead += nRead;
        if (nRead != SegyZip.LEN_REEL_HDR) throw new IOException("Error reading SEG-Y reel header: " + nRead + "!=" + SegyZip.LEN_REEL_HDR);
        reelHdrBuffer.position(0);
        int nWritten = _outputChannel.write(reelHdrBuffer);
        _nbytesWritten += nWritten;
        if (nWritten != SegyZip.LEN_REEL_HDR) throw new IOException("Error writing SEG-Y reel header: " + nWritten + "!=" + SegyZip.LEN_REEL_HDR);
        ByteBuffer binaryHdrBuffer = ByteBuffer.allocate(SegyZip.LEN_BINARY_HDR);
        nRead = _inputChannel.read(binaryHdrBuffer);
        _nbytesRead += nRead;
        if (nRead != SegyZip.LEN_BINARY_HDR) throw new IOException("Error reading SEG-Y binary header: " + nRead + "!=" + SegyZip.LEN_BINARY_HDR);
        binaryHdrBuffer.position(0);
        nWritten = _outputChannel.write(binaryHdrBuffer);
        _nbytesWritten += nWritten;
        if (nWritten != SegyZip.LEN_BINARY_HDR) throw new IOException("Error writing SEG-Y binary header: " + nWritten + "!=" + SegyZip.LEN_BINARY_HDR);
        binaryHdrBuffer.order(ByteOrder.BIG_ENDIAN);
        int tracesPerFrame = binaryHdrBuffer.getShort(12);
        System.out.println("tracesPerFrame= " + tracesPerFrame);
        float sampleInterval = (float) binaryHdrBuffer.getShort(16) / 1000.0F;
        System.out.println("sampleInterval= " + sampleInterval);
        int samplesPerTrace = (int) binaryHdrBuffer.getShort(20);
        System.out.println("samplesPerTrace= " + samplesPerTrace);
        _nbytesPerTrace = samplesPerTrace * 4;
        _traces = new float[tracesPerFrame][samplesPerTrace];
        _hdrs = new int[tracesPerFrame][SegyZip.NINTS_PER_HDR];
        _compressedHdrBytes = new byte[HdrCompressor.getOutputBufferSize(SegyZip.NINTS_PER_HDR, tracesPerFrame)];
        _compressedHdrByteBuffer = ByteBuffer.wrap(_compressedHdrBytes);
        _compressedTrcBytes = new byte[samplesPerTrace * tracesPerFrame * 4];
        _compressedTrcByteBuffer = ByteBuffer.wrap(_compressedTrcBytes);
    }
