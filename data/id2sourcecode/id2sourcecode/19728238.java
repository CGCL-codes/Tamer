    public static Carrefour createCarrefour_4V_2V(Point position, Angle3D angle, double ecartementPrincipal, double ecartementSecondaire) {
        Carrefour3Branches carrefour = new Carrefour3Branches(position, angle);
        double ecartMoy = (ecartementSecondaire + ecartementPrincipal) / 2;
        PointSortie p1 = new PointSortie(-ecartMoy, 3 * ecartementPrincipal / 2);
        PointEntree p2 = new PointEntree(ecartMoy, 3 * ecartementPrincipal / 2);
        PointSortie p3 = new PointSortie(-ecartMoy, ecartementPrincipal / 2);
        PointEntree p4 = new PointEntree(ecartMoy, ecartementPrincipal / 2);
        PointEntree p5 = new PointEntree(-ecartMoy, -ecartementPrincipal / 2);
        PointSortie p6 = new PointSortie(ecartMoy, -ecartementPrincipal / 2);
        PointEntree p7 = new PointEntree(-ecartMoy, -3 * ecartementPrincipal / 2);
        PointSortie p8 = new PointSortie(ecartMoy, -3 * ecartementPrincipal / 2);
        PointSortie p9 = new PointSortie(-ecartementSecondaire / 2, -2 * ecartementPrincipal);
        PointEntree p10 = new PointEntree(ecartementSecondaire / 2, -2 * ecartementPrincipal);
        CourbeConduite cc1 = new CourbeConduite(carrefour, p2, p1);
        cc1.addSegment();
        CourbeConduite cc2 = new CourbeConduite(carrefour, p4, p3);
        cc2.addSegment();
        CourbeConduite cc3 = new CourbeConduite(carrefour, p5, p6);
        cc3.addSegment();
        CourbeConduite cc4 = new CourbeConduite(carrefour, p7, p8);
        cc4.addSegment();
        CourbeConduite cc5 = new CourbeConduite(carrefour, p10, p8);
        cc5.addArc(new Point(ecartMoy, -2 * ecartementPrincipal), ecartementPrincipal / 2, -Math.PI / 2, Math.PI / 2, 0);
        CourbeConduite cc6 = new CourbeConduite(carrefour, p10, p6);
        cc6.addPointIntermediaire(new Point(ecartementSecondaire / 2, -ecartementPrincipal));
        cc6.addSegment();
        cc6.addArc(new Point(ecartMoy, -ecartementPrincipal), ecartementPrincipal / 2, -Math.PI / 2, Math.PI / 2, 0);
        CourbeConduite cc7 = new CourbeConduite(carrefour, p10, p1);
        cc7.addSegment();
        CourbeConduite cc8 = new CourbeConduite(carrefour, p10, p3);
        cc8.addSegment();
        CourbeConduite cc9 = new CourbeConduite(carrefour, p2, p9);
        cc9.addSegment();
        CourbeConduite cc10 = new CourbeConduite(carrefour, p4, p9);
        cc10.addSegment();
        CourbeConduite cc11 = new CourbeConduite(carrefour, p5, p9);
        cc11.addSegment();
        CourbeConduite cc12 = new CourbeConduite(carrefour, p7, p9);
        cc12.addArc(new Point(-ecartMoy, -2 * ecartementPrincipal), ecartementPrincipal / 2, 0, Math.PI / 2, 0);
        carrefour.addCourbeConduite(cc1);
        carrefour.addCourbeConduite(cc2);
        carrefour.addCourbeConduite(cc3);
        carrefour.addCourbeConduite(cc4);
        carrefour.addCourbeConduite(cc5);
        carrefour.addCourbeConduite(cc6);
        carrefour.addCourbeConduite(cc7);
        carrefour.addCourbeConduite(cc8);
        carrefour.addCourbeConduite(cc9);
        carrefour.addCourbeConduite(cc10);
        carrefour.addCourbeConduite(cc11);
        carrefour.addCourbeConduite(cc12);
        carrefour.addEntree(p2);
        carrefour.addEntree(p4);
        carrefour.addEntree(p5);
        carrefour.addEntree(p7);
        carrefour.addEntree(p10);
        carrefour.addSortie(p1);
        carrefour.addSortie(p3);
        carrefour.addSortie(p6);
        carrefour.addSortie(p8);
        carrefour.addSortie(p9);
        carrefour.creerFrontiere2(ecartementSecondaire + ecartementPrincipal, 4 * ecartementPrincipal);
        return carrefour;
    }
