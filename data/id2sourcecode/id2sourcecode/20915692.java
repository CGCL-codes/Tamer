    public static Area createArc(int x, int y, int width, int height, double start, double end, int innerXOffset, int innerYOffset) {
        Shape s = new Ellipse2D.Double(x, y, width, height);
        Area a = new Area(s);
        int center_x = x + width / 2;
        int center_y = y + height / 2;
        int xs[] = new int[6];
        int ys[] = new int[6];
        xs[0] = center_x;
        ys[0] = center_y;
        double middle = start + (end - start) / 2;
        double quarter1 = start + (middle - start) / 2;
        double quarter2 = middle + (end - middle) / 2;
        int pt1_x = (int) (center_x + width * Math.cos(start));
        int pt1_y = (int) (center_y + height * Math.sin(start));
        int pt2_x = (int) (center_x + width * Math.cos(end));
        int pt2_y = (int) (center_y + height * Math.sin(end));
        int mid_x = (int) (center_x + width * Math.cos(middle));
        int mid_y = (int) (center_y + height * Math.sin(middle));
        int quar1_x = (int) (center_x + height * Math.cos(quarter1));
        int quar1_y = (int) (center_y + height * Math.sin(quarter1));
        int quar2_x = (int) (center_x + height * Math.cos(quarter2));
        int quar2_y = (int) (center_y + height * Math.sin(quarter2));
        xs[1] = pt1_x;
        ys[1] = pt1_y;
        xs[2] = quar1_x;
        ys[2] = quar1_y;
        xs[3] = mid_x;
        ys[3] = mid_y;
        xs[4] = quar2_x;
        ys[4] = quar2_y;
        xs[5] = pt2_x;
        ys[5] = pt2_y;
        Polygon p = new Polygon(xs, ys, 6);
        Area clip = new Area(p);
        a.intersect(clip);
        Ellipse2D.Double inner = new Ellipse2D.Double(x + innerXOffset, y + innerYOffset, width - innerXOffset * 2, height - innerYOffset * 2);
        a.subtract(new Area(inner));
        return a;
    }
