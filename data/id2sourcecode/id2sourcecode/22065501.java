    @Test
    public void testUsageMultiOnly() {
        BigTestMultiOnly opts = new BigTestMultiOnly();
        CommandLine line = new CommandLine(opts, "prog", "file...", "This is some descriptive text for the command, which ought" + " to be formatted by the underlying usage() method." + "  This lets us test whether that works or not.");
        line.setOptionDescriptionIndent(12);
        StringWriter out = new StringWriter();
        line.briefUsage(out);
        assertEquals(out.toString(), "prog [-help] [-boolT] [-boolF] [-boolDT] [-boolDF] [-boolN] [-charV char]\n" + "    [-charD char] [-charN char] [-strV str] [-strD str] [-strN str] [-byteV num]\n" + "    [-byteD num] [-byteN num] [-shortV num] [-shortD num] [-shortN num]\n" + "    [-intV num] [-intD num] [-intN num] [-longV num] [-longD num] [-longN num]\n" + "    [-floatV float] [-floatD float] [-floatN float] [-doubleV double]\n" + "    [-doubleD double] [-doubleN double] [-thingV thing] [-thingD thing]\n" + "    [-thingN thing] [-fileV path] [-fileD path] [-fileN path] [-readV file]\n" + "    [-readD file] [-readN file] [-writeV file] [-writeD file] [-writeN file]\n" + "    [-inV file] [-inD file] [-inN file] [-outV file] [-outD file] [-outN file]\n" + "    [-randN file] [-valsV num,...] [-valsD num,...] [-valsN num,...] file...\n");
        out = new StringWriter();
        line.fullUsage(out);
        assertEquals(out.toString(), "prog [-help] [-boolT] [-boolF] [-boolDT] [-boolDF] [-boolN] [-charV char]\n" + "    [-charD char] [-charN char] [-strV str] [-strD str] [-strN str] [-byteV num]\n" + "    [-byteD num] [-byteN num] [-shortV num] [-shortD num] [-shortN num]\n" + "    [-intV num] [-intD num] [-intN num] [-longV num] [-longD num] [-longN num]\n" + "    [-floatV float] [-floatD float] [-floatN float] [-doubleV double]\n" + "    [-doubleD double] [-doubleN double] [-thingV thing] [-thingD thing]\n" + "    [-thingN thing] [-fileV path] [-fileD path] [-fileN path] [-readV file]\n" + "    [-readD file] [-readN file] [-writeV file] [-writeD file] [-writeN file]\n" + "    [-inV file] [-inD file] [-inN file] [-outV file] [-outD file] [-outN file]\n" + "    [-randN file] [-valsV num,...] [-valsD num,...] [-valsN num,...] file...\n" + "This is some descriptive text for the command, which ought to be formatted by\n" + "the underlying usage() method.  This lets us test whether that works or not.\n" + "\n" + "-help       Print usage message\n" + "-boolT\n" + "-boolF\n" + "-boolDT\n" + "-boolDF\n" + "-boolN\n" + "-charV char\n" + "-charD char\n" + "-charN char\n" + "-strV str\n" + "-strD str\n" + "-strN str\n" + "-byteV num\n" + "-byteD num\n" + "-byteN num\n" + "-shortV num\n" + "-shortD num\n" + "-shortN num\n" + "-intV num\n" + "-intD num\n" + "-intN num\n" + "-longV num\n" + "-longD num\n" + "-longN num\n" + "-floatV float\n" + "-floatD float\n" + "-floatN float\n" + "-doubleV double\n" + "-doubleD double\n" + "-doubleN double\n" + "-thingV thing\n" + "-thingD thing\n" + "-thingN thing\n" + "-fileV path\n" + "-fileD path\n" + "-fileN path\n" + "-readV file\n" + "-readD file\n" + "-readN file\n" + "-writeV file\n" + "-writeD file\n" + "-writeN file\n" + "-inV file\n" + "-inD file\n" + "-inN file\n" + "-outV file\n" + "-outD file\n" + "-outN file\n" + "-randN file\n" + "-valsV num,...\n" + "-valsD num,...\n" + "-valsN num,...\n");
        line.setLineWidth(0);
        out = new StringWriter();
        line.briefUsage(out);
        assertEquals(out.toString(), "prog [-help] [-boolT] [-boolF] [-boolDT] [-boolDF] [-boolN] [-charV char] [-charD char] [-charN char] [-strV str] [-strD str] [-strN str] [-byteV num] [-byteD num] [-byteN num] [-shortV num] [-shortD num] [-shortN num] [-intV num] [-intD num] [-intN num] [-longV num] [-longD num] [-longN num] [-floatV float] [-floatD float] [-floatN float] [-doubleV double] [-doubleD double] [-doubleN double] [-thingV thing] [-thingD thing] [-thingN thing] [-fileV path] [-fileD path] [-fileN path] [-readV file] [-readD file] [-readN file] [-writeV file] [-writeD file] [-writeN file] [-inV file] [-inD file] [-inN file] [-outV file] [-outD file] [-outN file] [-randN file] [-valsV num,...] [-valsD num,...] [-valsN num,...] file...\n");
        out = new StringWriter();
        line.fullUsage(out);
        assertEquals(out.toString(), "prog [-help] [-boolT] [-boolF] [-boolDT] [-boolDF] [-boolN] [-charV char] [-charD char] [-charN char] [-strV str] [-strD str] [-strN str] [-byteV num] [-byteD num] [-byteN num] [-shortV num] [-shortD num] [-shortN num] [-intV num] [-intD num] [-intN num] [-longV num] [-longD num] [-longN num] [-floatV float] [-floatD float] [-floatN float] [-doubleV double] [-doubleD double] [-doubleN double] [-thingV thing] [-thingD thing] [-thingN thing] [-fileV path] [-fileD path] [-fileN path] [-readV file] [-readD file] [-readN file] [-writeV file] [-writeD file] [-writeN file] [-inV file] [-inD file] [-inN file] [-outV file] [-outD file] [-outN file] [-randN file] [-valsV num,...] [-valsD num,...] [-valsN num,...] file...\n" + "This is some descriptive text for the command, which ought to be formatted by the underlying usage() method.  This lets us test whether that works or not.\n" + "\n" + "-help       Print usage message\n" + "-boolT\n" + "-boolF\n" + "-boolDT\n" + "-boolDF\n" + "-boolN\n" + "-charV char\n" + "-charD char\n" + "-charN char\n" + "-strV str\n" + "-strD str\n" + "-strN str\n" + "-byteV num\n" + "-byteD num\n" + "-byteN num\n" + "-shortV num\n" + "-shortD num\n" + "-shortN num\n" + "-intV num\n" + "-intD num\n" + "-intN num\n" + "-longV num\n" + "-longD num\n" + "-longN num\n" + "-floatV float\n" + "-floatD float\n" + "-floatN float\n" + "-doubleV double\n" + "-doubleD double\n" + "-doubleN double\n" + "-thingV thing\n" + "-thingD thing\n" + "-thingN thing\n" + "-fileV path\n" + "-fileD path\n" + "-fileN path\n" + "-readV file\n" + "-readD file\n" + "-readN file\n" + "-writeV file\n" + "-writeD file\n" + "-writeN file\n" + "-inV file\n" + "-inD file\n" + "-inN file\n" + "-outV file\n" + "-outD file\n" + "-outN file\n" + "-randN file\n" + "-valsV num,...\n" + "-valsD num,...\n" + "-valsN num,...\n");
    }
