    public void fill(String src, String dest, String user) throws IOException, DocumentException {
        PdfReader reader = new PdfReader(src);
        FileOutputStream writer = new FileOutputStream(dest);
        PdfStamper stamper = new PdfStamper(reader, writer);
        stamper.setEncryption(true, "", "Gu7ruc*YAWaStEbr", 0);
        AcroFields fields = stamper.getAcroFields();
        Font font = FontFactory.getFont(FontFactory.COURIER_BOLD);
        font.setSize((float) 20.2);
        BaseFont baseFont = font.getBaseFont();
        fields.setFieldProperty("IN111BonusDepAdd", "textsize", new Float(20.2), null);
        fields.setFieldProperty("IN111BonusDepAdd", "textfont", baseFont, null);
        fields.setField("IN111BonusDepAdd", this.get_IN111BonusDepAdd());
        fields.setFieldProperty("IN111Interest", "textsize", new Float(20.2), null);
        fields.setFieldProperty("IN111Interest", "textfont", baseFont, null);
        fields.setField("IN111Interest", this.get_IN111Interest());
        fields.setFieldProperty("VTAGI", "textsize", new Float(20.2), null);
        fields.setFieldProperty("VTAGI", "textfont", baseFont, null);
        fields.setField("VTAGI", this.get_VTAGI());
        fields.setFieldProperty("IN111Obligations", "textsize", new Float(20.2), null);
        fields.setFieldProperty("IN111Obligations", "textfont", baseFont, null);
        fields.setField("IN111Obligations", this.get_IN111Obligations());
        fields.setFieldProperty("VTIncomeTax", "textsize", new Float(20.2), null);
        fields.setFieldProperty("VTIncomeTax", "textfont", baseFont, null);
        fields.setField("VTIncomeTax", this.get_VTIncomeTax());
        fields.setFieldProperty("BonusDepreciationSub", "textsize", new Float(20.2), null);
        fields.setFieldProperty("BonusDepreciationSub", "textfont", baseFont, null);
        fields.setField("BonusDepreciationSub", this.get_BonusDepreciationSub());
        fields.setFieldProperty("Sch117Line13", "textsize", new Float(20.2), null);
        fields.setFieldProperty("Sch117Line13", "textfont", baseFont, null);
        fields.setField("Sch117Line13", this.get_Sch117Line13());
        fields.setFieldProperty("Sch117Line5", "textsize", new Float(20.2), null);
        fields.setFieldProperty("Sch117Line5", "textfont", baseFont, null);
        fields.setField("Sch117Line5", this.get_Sch117Line5());
        fields.setFieldProperty("Sch117Line19", "textsize", new Float(20.2), null);
        fields.setFieldProperty("Sch117Line19", "textfont", baseFont, null);
        fields.setField("Sch117Line19", this.get_Sch117Line19());
        fields.setFieldProperty("Sch117Line8", "textsize", new Float(20.2), null);
        fields.setFieldProperty("Sch117Line8", "textfont", baseFont, null);
        fields.setField("Sch117Line8", this.get_Sch117Line8());
        fields.setFieldProperty("CreditTaxPaidOtherState", "textsize", new Float(20.2), null);
        fields.setFieldProperty("CreditTaxPaidOtherState", "textfont", baseFont, null);
        fields.setField("CreditTaxPaidOtherState", this.get_CreditTaxPaidOtherState());
        fields.setFieldProperty("countryName", "textsize", new Float(20.2), null);
        fields.setFieldProperty("countryName", "textfont", baseFont, null);
        fields.setField("countryName", this.get_countryName());
        fields.setFieldProperty("BonusDepreciationAdd", "textsize", new Float(20.2), null);
        fields.setFieldProperty("BonusDepreciationAdd", "textfont", baseFont, null);
        fields.setField("BonusDepreciationAdd", this.get_BonusDepreciationAdd());
        fields.setFieldProperty("FederalAdjustedGrossIncome", "textsize", new Float(20.2), null);
        fields.setFieldProperty("FederalAdjustedGrossIncome", "textfont", baseFont, null);
        fields.setField("FederalAdjustedGrossIncome", this.get_FederalAdjustedGrossIncome());
        fields.setFieldProperty("IN111BonuseDepSub", "textsize", new Float(20.2), null);
        fields.setFieldProperty("IN111BonuseDepSub", "textfont", baseFont, null);
        fields.setField("IN111BonuseDepSub", this.get_IN111BonuseDepSub());
        fields.setFieldProperty("NonVTObligations", "textsize", new Float(20.2), null);
        fields.setFieldProperty("NonVTObligations", "textfont", baseFont, null);
        fields.setField("NonVTObligations", this.get_NonVTObligations());
        fields.setFieldProperty("Sch117Line16", "textsize", new Float(20.2), null);
        fields.setFieldProperty("Sch117Line16", "textfont", baseFont, null);
        fields.setField("Sch117Line16", this.get_Sch117Line16());
        fields.setFieldProperty("NetTaxPaidToOtherState", "textsize", new Float(20.2), null);
        fields.setFieldProperty("NetTaxPaidToOtherState", "textfont", baseFont, null);
        fields.setField("NetTaxPaidToOtherState", this.get_NetTaxPaidToOtherState());
        fields.setFieldProperty("NameOtherState", "textsize", new Float(20.2), null);
        fields.setFieldProperty("NameOtherState", "textfont", baseFont, null);
        fields.setField("NameOtherState", this.get_NameOtherState());
        fields.setFieldProperty("IncomeTaxableToBoth", "textsize", new Float(20.2), null);
        fields.setFieldProperty("IncomeTaxableToBoth", "textfont", baseFont, null);
        fields.setField("IncomeTaxableToBoth", this.get_IncomeTaxableToBoth());
        fields.setFieldProperty("InterestIncome", "textsize", new Float(20.2), null);
        fields.setFieldProperty("InterestIncome", "textfont", baseFont, null);
        fields.setField("InterestIncome", this.get_InterestIncome());
        fields.setFieldProperty("ModAGI", "textsize", new Float(20.2), null);
        fields.setFieldProperty("ModAGI", "textfont", baseFont, null);
        fields.setField("ModAGI", this.get_ModAGI());
        stamper.setFormFlattening(true);
        stamper.setFullCompression();
        for (int i = 0; i < reader.getNumberOfPages() + 1; i++) {
            PdfContentByte overContent = stamper.getOverContent(i);
            if (overContent != null) {
                overContent.beginText();
                font = FontFactory.getFont(FontFactory.TIMES_ITALIC);
                font.setColor(BaseColor.BLUE);
                baseFont = font.getBaseFont();
                overContent.setColorFill(BaseColor.BLUE);
                overContent.setFontAndSize(baseFont, 24);
                overContent.showTextAligned(Element.ALIGN_RIGHT | Element.ALIGN_TOP, "Electronically filed via Modernized eFile", 20, 175, 90);
                overContent.endText();
                overContent.beginText();
                font = FontFactory.getFont(FontFactory.TIMES);
                font.setColor(BaseColor.RED);
                baseFont = font.getBaseFont();
                overContent.setColorFill(BaseColor.RED);
                overContent.setFontAndSize(baseFont, 8);
                overContent.showTextAligned(Element.ALIGN_CENTER | Element.ALIGN_BOTTOM, "Retrieved by " + user + " on " + new Date().toString(), 220, 3, 0);
                overContent.endText();
            }
        }
        stamper.close();
        reader.close();
    }
