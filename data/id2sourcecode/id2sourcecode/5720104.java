    private void insertLearningObjectsTest() {
        Throwable thrown = (Throwable) transactionTemplate.execute(new TransactionCallback() {

            public Object doInTransaction(TransactionStatus transactionStatus) {
                Throwable thrown = null;
                try {
                    User user = userService.findUserByUsername("creator");
                    learningObjectArray = new LearningObject[10];
                    Metadata metadata = new Metadata();
                    metadata.setAgeFrom(1);
                    metadata.setAgeTo(2);
                    metadata.setContext(Context.ContinuousFormation);
                    metadata.setCoverage("Full");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.High);
                    metadata.setDescription("Historia del mundo");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Active);
                    metadata.setKeywords("keyworks");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setStatus(Status.Draft);
                    metadata.setSubject("Subject Test");
                    metadata.setResourceType(LearningResourceType.Exam);
                    LearningObject learningObject = new LearningObject();
                    learningObject.setName("Historia.html");
                    learningObject.setOwner(user);
                    learningObject.setTotalRating(3);
                    learningObject.setCreator(user);
                    learningObject.setContentSize(1024);
                    learningObject.setViewCount(4);
                    learningObjectService.create(learningObject);
                    learningObjectService.addMetadata(learningObject, metadata);
                    URL url = new URL("http://es.wikipedia.org/wiki/Caballeros_Templarios");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(3);
                    metadata.setAgeTo(4);
                    metadata.setContext(Context.PrimaryEducation);
                    metadata.setCoverage("Full");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Any);
                    metadata.setDescription("only for dark minds");
                    metadata.setDifficulty(Difficulty.High);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Expositive);
                    metadata.setKeywords("keyworks");
                    metadata.setLanguage(Language.English);
                    metadata.setStatus(Status.Draft);
                    metadata.setSubject("Subject Test");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectArray[0] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Dark Sciencist.html");
                    learningObject.setOwner(user);
                    learningObject.setTotalRating(1);
                    learningObject.setCreator(user);
                    learningObject.setContentSize(1024);
                    learningObject.setViewCount(4);
                    learningObjectService.create(learningObject);
                    learningObjectService.addMetadata(learningObject, metadata);
                    url = new URL("http://en.wikipedia.org/wiki/Mathematics");
                    learningObjectService.addContent(learningObject, url.openStream());
                    learningObjectArray[1] = learningObject;
                    metadata = new Metadata();
                    metadata.setAgeFrom(3);
                    metadata.setAgeTo(4);
                    metadata.setContext(Context.ProfessionalFormation);
                    metadata.setCoverage("Full");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("Sale campeon... sale sale sale campeon...");
                    metadata.setDifficulty(Difficulty.High);
                    metadata.setEndUser(IntendedUser.Any);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Mixed);
                    metadata.setKeywords("keyworks");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setStatus(Status.Final);
                    metadata.setSubject("Subject Test");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObject = new LearningObject();
                    learningObject.setName("Deportes.html");
                    learningObject.setOwner(user);
                    learningObject.setTotalRating(1);
                    learningObject.setCreator(user);
                    learningObject.setContentSize(1024);
                    learningObject.setViewCount(4);
                    learningObjectService.create(learningObject);
                    learningObjectService.addMetadata(learningObject, metadata);
                    url = new URL("http://es.wikipedia.org/wiki/Futbol");
                    learningObjectService.addContent(learningObject, url.openStream());
                    learningObjectArray[2] = learningObject;
                    metadata = new Metadata();
                    metadata.setAgeFrom(3);
                    metadata.setAgeTo(4);
                    metadata.setContext(Context.ProfessionalFormation);
                    metadata.setCoverage("Full");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("Sale campeon... sale sale sale campeon...");
                    metadata.setDifficulty(Difficulty.High);
                    metadata.setEndUser(IntendedUser.Any);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Mixed);
                    metadata.setKeywords("keyworks");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setStatus(Status.Final);
                    metadata.setSubject("Subject Test");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObject = new LearningObject();
                    learningObject.setName("Equipos grandes del mundo.html");
                    learningObject.setOwner(user);
                    learningObject.setTotalRating(1);
                    learningObject.setCreator(user);
                    learningObject.setContentSize(1024);
                    learningObject.setViewCount(4);
                    learningObjectService.create(learningObject);
                    learningObjectService.addMetadata(learningObject, metadata);
                    url = new URL("http://es.wikipedia.org/wiki/Deportivo_Saprissa");
                    learningObjectService.addContent(learningObject, url.openStream());
                    learningObjectArray[3] = learningObject;
                    metadata = new Metadata();
                    metadata.setAgeFrom(3);
                    metadata.setAgeTo(4);
                    metadata.setContext(Context.ProfessionalFormation);
                    metadata.setCoverage("Full");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("The world");
                    metadata.setDifficulty(Difficulty.High);
                    metadata.setEndUser(IntendedUser.Any);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Mixed);
                    metadata.setKeywords("keyworks");
                    metadata.setLanguage(Language.English);
                    metadata.setStatus(Status.Final);
                    metadata.setSubject("Subject Test");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObject = new LearningObject();
                    learningObject.setName("City.html");
                    learningObject.setOwner(user);
                    learningObject.setTotalRating(1);
                    learningObject.setCreator(user);
                    learningObject.setContentSize(1024);
                    learningObject.setViewCount(4);
                    learningObjectService.create(learningObject);
                    learningObjectService.addMetadata(learningObject, metadata);
                    url = new URL("http://en.wikipedia.org/wiki/Atlanta");
                    learningObjectService.addContent(learningObject, url.openStream());
                    learningObjectArray[4] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Wikipedia 1.html");
                    learningObject.setCreator(user);
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://es.wikipedia.org/wiki/Isla_de_Flores_(Indonesia)");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(10);
                    metadata.setAgeTo(15);
                    metadata.setContext(Context.SecondaryEducation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("description");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Interactive);
                    metadata.setKeywords("keywords");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setSubject("subject");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                    learningObjectArray[5] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Amero.html");
                    learningObject.setCreator(user);
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://es.wikipedia.org/wiki/Amero");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(15);
                    metadata.setAgeTo(80);
                    metadata.setContext(Context.ProfessionalFormation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Low);
                    metadata.setDescription("description");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Teachers);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Expositive);
                    metadata.setKeywords("moneda");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setSubject("subject");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                    learningObjectArray[6] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Mitos y Leyendas.html");
                    learningObject.setCreator(user);
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://en.wikipedia.org/wiki/Differential_calculus");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(8);
                    metadata.setAgeTo(12);
                    metadata.setContext(Context.PrimaryEducation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("description");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Interactive);
                    metadata.setKeywords("leyendas");
                    metadata.setLanguage(Language.Spanish);
                    metadata.setSubject("subject");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                    learningObjectArray[7] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("National Parks.html");
                    learningObject.setCreator(user);
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://en.wikipedia.org/wiki/National_parks");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(13);
                    metadata.setAgeTo(17);
                    metadata.setContext(Context.SecondaryEducation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("description");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Interactive);
                    metadata.setKeywords("parks");
                    metadata.setLanguage(Language.English);
                    metadata.setSubject("National Parks");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                    learningObjectArray[8] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Waterfalls.html");
                    learningObject.setCreator(userService.getSystemUser());
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://en.wikipedia.org/wiki/Waterfalls");
                    learningObjectService.addContent(learningObject, url.openStream());
                    metadata = new Metadata();
                    metadata.setAgeFrom(13);
                    metadata.setAgeTo(17);
                    metadata.setContext(Context.SecondaryEducation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("description");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Interactive);
                    metadata.setKeywords("waterfalls");
                    metadata.setLanguage(Language.English);
                    metadata.setSubject("Waterfalls");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                    learningObjectArray[9] = learningObject;
                    learningObject = new LearningObject();
                    learningObject.setName("Diphysciaceae.html");
                    learningObject.setCreator(userService.getSystemUser());
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    url = new URL("http://en.wikipedia.org/wiki/Diphysciaceae");
                    learningObjectService.addContent(learningObject, url.openStream());
                    learningObjectService.addMetadata(learningObject, createMetadata("Diphysciaceae", "Diphysciaceae"));
                    learningObject = new LearningObject();
                    learningObject.setName("Dark Parks");
                    learningObject.setCreator(userService.getSystemUser());
                    learningObject.setOwner(user);
                    learningObjectService.create(learningObject);
                    metadata = new Metadata();
                    metadata.setAgeFrom(13);
                    metadata.setAgeTo(17);
                    metadata.setContext(Context.SecondaryEducation);
                    metadata.setCoverage("coverage");
                    metadata.setDegreeOfInteractivity(DegreeOfInteractivity.Medium);
                    metadata.setDescription("Liverpool");
                    metadata.setDifficulty(Difficulty.Medium);
                    metadata.setEndUser(IntendedUser.Learners);
                    metadata.setFormat(Format.HTML_XHTML);
                    metadata.setInteractivityType(InteractivityType.Interactive);
                    metadata.setKeywords("waterfalls");
                    metadata.setLanguage(Language.English);
                    metadata.setSubject("Waterfalls");
                    metadata.setResourceType(LearningResourceType.Exam);
                    learningObjectService.addMetadata(learningObject, metadata);
                } catch (Throwable t) {
                    transactionStatus.setRollbackOnly();
                    thrown = t;
                }
                return thrown;
            }
        });
        if (thrown != null) {
            if (logger.isErrorEnabled()) {
                StringWriter out = new StringWriter();
                thrown.printStackTrace(new PrintWriter(out));
                logger.error(thrown);
                logger.error(out.getBuffer());
            }
        }
    }
